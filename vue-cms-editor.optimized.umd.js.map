{"version":3,"file":"vue-cms-editor.optimized.umd.js","sources":["../../src/shared/utils/logger.ts","../../node_modules/vue-draggable-plus/dist/vue-draggable-plus.js","../../src/composables/useCollapsibleItems.ts","../../src/components/editor/DataDisplay.vue","../../src/components/editor/PartSelector.vue","../../src/components/editor/ArrayFieldEditor.vue","../../src/shared/utils/errorHandler.ts","../../src/config/editorConfig.ts","../../src/composables/useComponentUtils.ts","../../src/components/editor/EditorPanel.vue","../../src/components/panels/EditorMainPanel.vue","../../src/components/parts/PartsManager.vue","../../src/components/parts/PartRegistrationModal.vue","../../src/components/panels/PartsManagementPanel.vue","../../src/composables/utils/zDirectiveProcessors.ts","../../src/composables/utils/vueDirectivePreserver.ts","../../src/shared/utils/htmlHelpers.ts","../../src/composables/utils/optimizedTemplateProcessor.ts","../../src/composables/utils/optimizedDOMProcessor.ts","../../src/composables/useTemplateProcessor.ts","../../src/composables/useImageDisplay.ts","../../src/components/preview/PagePreview.vue","../../src/components/panels/PreviewPanel.vue","../../src/components/images/ImageUploadModal.vue","../../src/components/images/ImageDetailModal.vue","../../src/components/panels/ImageManagementPanel.vue","../../src/composables/useEditorTabs.ts","../../src/composables/core/useEditorCore.ts","../../src/composables/core/useEditorUtils.ts","../../src/composables/useSimpleEditor.ts","../../src/composables/utils/performanceOptimizations.ts","../../src/shared/utils/eventBus.ts","../../src/composables/useZeroCode.ts","../../src/data/samples/index.ts","../../src/data/samples/parts/common.ts","../../src/data/samples/parts/individual.ts","../../src/data/samples/pages/default.ts","../../src/data/samples/images/common.ts","../../src/data/samples/images/individual.ts","../../src/data/tests/zForZSlotTestData.ts","../../src/data/tests/index.ts","../../src/composables/useDataLoader.ts","../../src/shared/components/TabNavigation.vue","../../src/composables/useErrorHandler.ts","../../src/shared/components/ErrorBoundary.vue","../../src/components/editor/RichTextToolbar.vue","../../src/components/editor/ImageSelectorModal.vue","../../src/ZeroCode.ce.vue","../../src/index.ts"],"sourcesContent":["/**\n * ログ出力ユーティリティ\n * 開発環境でのみログを出力し、本番環境ではパフォーマンスに影響しない\n */\n\nconst isDevelopment = import.meta.env.DEV\n\nexport const logger = {\n  /**\n   * デバッグログ（開発環境のみ）\n   */\n  debug: (message: string, ...args: any[]) => {\n    if (isDevelopment) {\n      console.log(`🔍 ${message}`, ...args)\n    }\n  },\n\n  /**\n   * 情報ログ（開発環境のみ）\n   */\n  info: (message: string, ...args: any[]) => {\n    if (isDevelopment) {\n      console.log(`ℹ️ ${message}`, ...args)\n    }\n  },\n\n  /**\n   * 警告ログ（常に出力）\n   */\n  warn: (message: string, ...args: any[]) => {\n    console.warn(`⚠️ ${message}`, ...args)\n  },\n\n  /**\n   * エラーログ（常に出力）\n   */\n  error: (message: string, ...args: any[]) => {\n    console.error(`❌ ${message}`, ...args)\n  },\n\n  /**\n   * 成功ログ（開発環境のみ）\n   */\n  success: (message: string, ...args: any[]) => {\n    if (isDevelopment) {\n      console.log(`✅ ${message}`, ...args)\n    }\n  },\n\n  /**\n   * プロセスログ（開発環境のみ）\n   */\n  process: (message: string, ...args: any[]) => {\n    if (isDevelopment) {\n      console.log(`🔧 ${message}`, ...args)\n    }\n  },\n\n  /**\n   * パフォーマンス測定開始\n   */\n  time: (label: string) => {\n    if (isDevelopment) {\n      console.time(`⏱️ ${label}`)\n    }\n  },\n\n  /**\n   * パフォーマンス測定終了\n   */\n  timeEnd: (label: string) => {\n    if (isDevelopment) {\n      console.timeEnd(`⏱️ ${label}`)\n    }\n  },\n\n  /**\n   * グループ化ログ開始\n   */\n  group: (label: string) => {\n    if (isDevelopment) {\n      console.group(`📁 ${label}`)\n    }\n  },\n\n  /**\n   * グループ化ログ終了\n   */\n  groupEnd: () => {\n    if (isDevelopment) {\n      console.groupEnd()\n    }\n  },\n}\n\nexport default logger\n","var rn = Object.defineProperty;\nvar Ne = Object.getOwnPropertySymbols;\nvar vt = Object.prototype.hasOwnProperty, bt = Object.prototype.propertyIsEnumerable;\nvar mt = (t, e, n) => e in t ? rn(t, e, { enumerable: !0, configurable: !0, writable: !0, value: n }) : t[e] = n, fe = (t, e) => {\n  for (var n in e || (e = {}))\n    vt.call(e, n) && mt(t, n, e[n]);\n  if (Ne)\n    for (var n of Ne(e))\n      bt.call(e, n) && mt(t, n, e[n]);\n  return t;\n};\nvar Ve = (t, e) => {\n  var n = {};\n  for (var o in t)\n    vt.call(t, o) && e.indexOf(o) < 0 && (n[o] = t[o]);\n  if (t != null && Ne)\n    for (var o of Ne(t))\n      e.indexOf(o) < 0 && bt.call(t, o) && (n[o] = t[o]);\n  return n;\n};\nimport { getCurrentInstance as ft, unref as U, watch as an, onUnmounted as ln, onMounted as sn, nextTick as Yt, isRef as $e, defineComponent as un, computed as yt, toRefs as cn, ref as fn, reactive as dn, h as hn, isProxy as pn } from \"vue\";\nconst Bt = \"[vue-draggable-plus]: \";\nfunction gn(t) {\n  console.warn(Bt + t);\n}\nfunction mn(t) {\n  console.error(Bt + t);\n}\nfunction wt(t, e, n) {\n  return n >= 0 && n < t.length && t.splice(n, 0, t.splice(e, 1)[0]), t;\n}\nfunction vn(t) {\n  return t.replace(/-(\\w)/g, (e, n) => n ? n.toUpperCase() : \"\");\n}\nfunction bn(t) {\n  return Object.keys(t).reduce((e, n) => (typeof t[n] != \"undefined\" && (e[vn(n)] = t[n]), e), {});\n}\nfunction Et(t, e) {\n  return Array.isArray(t) && t.splice(e, 1), t;\n}\nfunction St(t, e, n) {\n  return Array.isArray(t) && t.splice(e, 0, n), t;\n}\nfunction yn(t) {\n  return typeof t == \"undefined\";\n}\nfunction wn(t) {\n  return typeof t == \"string\";\n}\nfunction Dt(t, e, n) {\n  const o = t.children[n];\n  t.insertBefore(e, o);\n}\nfunction qe(t) {\n  t.parentNode && t.parentNode.removeChild(t);\n}\nfunction En(t, e = document) {\n  var o;\n  let n = null;\n  return typeof (e == null ? void 0 : e.querySelector) == \"function\" ? n = (o = e == null ? void 0 : e.querySelector) == null ? void 0 : o.call(e, t) : n = document.querySelector(t), n || gn(`Element not found: ${t}`), n;\n}\nfunction Sn(t, e, n = null) {\n  return function(...o) {\n    return t.apply(n, o), e.apply(n, o);\n  };\n}\nfunction Dn(t, e) {\n  const n = fe({}, t);\n  return Object.keys(e).forEach((o) => {\n    n[o] ? n[o] = Sn(t[o], e[o]) : n[o] = e[o];\n  }), n;\n}\nfunction _n(t) {\n  return t instanceof HTMLElement;\n}\nfunction _t(t, e) {\n  Object.keys(t).forEach((n) => {\n    e(n, t[n]);\n  });\n}\nfunction Tn(t) {\n  return t.charCodeAt(0) === 111 && t.charCodeAt(1) === 110 && // uppercase letter\n  (t.charCodeAt(2) > 122 || t.charCodeAt(2) < 97);\n}\nconst Cn = Object.assign;\n/**!\n * Sortable 1.15.2\n * @author\tRubaXa   <trash@rubaxa.org>\n * @author\towenm    <owen23355@gmail.com>\n * @license MIT\n */\nfunction Tt(t, e) {\n  var n = Object.keys(t);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(t);\n    e && (o = o.filter(function(r) {\n      return Object.getOwnPropertyDescriptor(t, r).enumerable;\n    })), n.push.apply(n, o);\n  }\n  return n;\n}\nfunction te(t) {\n  for (var e = 1; e < arguments.length; e++) {\n    var n = arguments[e] != null ? arguments[e] : {};\n    e % 2 ? Tt(Object(n), !0).forEach(function(o) {\n      On(t, o, n[o]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : Tt(Object(n)).forEach(function(o) {\n      Object.defineProperty(t, o, Object.getOwnPropertyDescriptor(n, o));\n    });\n  }\n  return t;\n}\nfunction Xe(t) {\n  \"@babel/helpers - typeof\";\n  return typeof Symbol == \"function\" && typeof Symbol.iterator == \"symbol\" ? Xe = function(e) {\n    return typeof e;\n  } : Xe = function(e) {\n    return e && typeof Symbol == \"function\" && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n  }, Xe(t);\n}\nfunction On(t, e, n) {\n  return e in t ? Object.defineProperty(t, e, {\n    value: n,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : t[e] = n, t;\n}\nfunction re() {\n  return re = Object.assign || function(t) {\n    for (var e = 1; e < arguments.length; e++) {\n      var n = arguments[e];\n      for (var o in n)\n        Object.prototype.hasOwnProperty.call(n, o) && (t[o] = n[o]);\n    }\n    return t;\n  }, re.apply(this, arguments);\n}\nfunction In(t, e) {\n  if (t == null)\n    return {};\n  var n = {}, o = Object.keys(t), r, i;\n  for (i = 0; i < o.length; i++)\n    r = o[i], !(e.indexOf(r) >= 0) && (n[r] = t[r]);\n  return n;\n}\nfunction An(t, e) {\n  if (t == null)\n    return {};\n  var n = In(t, e), o, r;\n  if (Object.getOwnPropertySymbols) {\n    var i = Object.getOwnPropertySymbols(t);\n    for (r = 0; r < i.length; r++)\n      o = i[r], !(e.indexOf(o) >= 0) && Object.prototype.propertyIsEnumerable.call(t, o) && (n[o] = t[o]);\n  }\n  return n;\n}\nvar xn = \"1.15.2\";\nfunction oe(t) {\n  if (typeof window != \"undefined\" && window.navigator)\n    return !!/* @__PURE__ */ navigator.userAgent.match(t);\n}\nvar ie = oe(/(?:Trident.*rv[ :]?11\\.|msie|iemobile|Windows Phone)/i), Ae = oe(/Edge/i), Ct = oe(/firefox/i), _e = oe(/safari/i) && !oe(/chrome/i) && !oe(/android/i), kt = oe(/iP(ad|od|hone)/i), Ht = oe(/chrome/i) && oe(/android/i), Lt = {\n  capture: !1,\n  passive: !1\n};\nfunction D(t, e, n) {\n  t.addEventListener(e, n, !ie && Lt);\n}\nfunction S(t, e, n) {\n  t.removeEventListener(e, n, !ie && Lt);\n}\nfunction Le(t, e) {\n  if (e) {\n    if (e[0] === \">\" && (e = e.substring(1)), t)\n      try {\n        if (t.matches)\n          return t.matches(e);\n        if (t.msMatchesSelector)\n          return t.msMatchesSelector(e);\n        if (t.webkitMatchesSelector)\n          return t.webkitMatchesSelector(e);\n      } catch (n) {\n        return !1;\n      }\n    return !1;\n  }\n}\nfunction Nn(t) {\n  return t.host && t !== document && t.host.nodeType ? t.host : t.parentNode;\n}\nfunction Z(t, e, n, o) {\n  if (t) {\n    n = n || document;\n    do {\n      if (e != null && (e[0] === \">\" ? t.parentNode === n && Le(t, e) : Le(t, e)) || o && t === n)\n        return t;\n      if (t === n)\n        break;\n    } while (t = Nn(t));\n  }\n  return null;\n}\nvar Ot = /\\s+/g;\nfunction V(t, e, n) {\n  if (t && e)\n    if (t.classList)\n      t.classList[n ? \"add\" : \"remove\"](e);\n    else {\n      var o = (\" \" + t.className + \" \").replace(Ot, \" \").replace(\" \" + e + \" \", \" \");\n      t.className = (o + (n ? \" \" + e : \"\")).replace(Ot, \" \");\n    }\n}\nfunction h(t, e, n) {\n  var o = t && t.style;\n  if (o) {\n    if (n === void 0)\n      return document.defaultView && document.defaultView.getComputedStyle ? n = document.defaultView.getComputedStyle(t, \"\") : t.currentStyle && (n = t.currentStyle), e === void 0 ? n : n[e];\n    !(e in o) && e.indexOf(\"webkit\") === -1 && (e = \"-webkit-\" + e), o[e] = n + (typeof n == \"string\" ? \"\" : \"px\");\n  }\n}\nfunction ye(t, e) {\n  var n = \"\";\n  if (typeof t == \"string\")\n    n = t;\n  else\n    do {\n      var o = h(t, \"transform\");\n      o && o !== \"none\" && (n = o + \" \" + n);\n    } while (!e && (t = t.parentNode));\n  var r = window.DOMMatrix || window.WebKitCSSMatrix || window.CSSMatrix || window.MSCSSMatrix;\n  return r && new r(n);\n}\nfunction Wt(t, e, n) {\n  if (t) {\n    var o = t.getElementsByTagName(e), r = 0, i = o.length;\n    if (n)\n      for (; r < i; r++)\n        n(o[r], r);\n    return o;\n  }\n  return [];\n}\nfunction ee() {\n  var t = document.scrollingElement;\n  return t || document.documentElement;\n}\nfunction M(t, e, n, o, r) {\n  if (!(!t.getBoundingClientRect && t !== window)) {\n    var i, a, l, s, u, d, f;\n    if (t !== window && t.parentNode && t !== ee() ? (i = t.getBoundingClientRect(), a = i.top, l = i.left, s = i.bottom, u = i.right, d = i.height, f = i.width) : (a = 0, l = 0, s = window.innerHeight, u = window.innerWidth, d = window.innerHeight, f = window.innerWidth), (e || n) && t !== window && (r = r || t.parentNode, !ie))\n      do\n        if (r && r.getBoundingClientRect && (h(r, \"transform\") !== \"none\" || n && h(r, \"position\") !== \"static\")) {\n          var m = r.getBoundingClientRect();\n          a -= m.top + parseInt(h(r, \"border-top-width\")), l -= m.left + parseInt(h(r, \"border-left-width\")), s = a + i.height, u = l + i.width;\n          break;\n        }\n      while (r = r.parentNode);\n    if (o && t !== window) {\n      var y = ye(r || t), b = y && y.a, E = y && y.d;\n      y && (a /= E, l /= b, f /= b, d /= E, s = a + d, u = l + f);\n    }\n    return {\n      top: a,\n      left: l,\n      bottom: s,\n      right: u,\n      width: f,\n      height: d\n    };\n  }\n}\nfunction It(t, e, n) {\n  for (var o = ue(t, !0), r = M(t)[e]; o; ) {\n    var i = M(o)[n], a = void 0;\n    if (a = r >= i, !a)\n      return o;\n    if (o === ee())\n      break;\n    o = ue(o, !1);\n  }\n  return !1;\n}\nfunction we(t, e, n, o) {\n  for (var r = 0, i = 0, a = t.children; i < a.length; ) {\n    if (a[i].style.display !== \"none\" && a[i] !== p.ghost && (o || a[i] !== p.dragged) && Z(a[i], n.draggable, t, !1)) {\n      if (r === e)\n        return a[i];\n      r++;\n    }\n    i++;\n  }\n  return null;\n}\nfunction dt(t, e) {\n  for (var n = t.lastElementChild; n && (n === p.ghost || h(n, \"display\") === \"none\" || e && !Le(n, e)); )\n    n = n.previousElementSibling;\n  return n || null;\n}\nfunction K(t, e) {\n  var n = 0;\n  if (!t || !t.parentNode)\n    return -1;\n  for (; t = t.previousElementSibling; )\n    t.nodeName.toUpperCase() !== \"TEMPLATE\" && t !== p.clone && (!e || Le(t, e)) && n++;\n  return n;\n}\nfunction At(t) {\n  var e = 0, n = 0, o = ee();\n  if (t)\n    do {\n      var r = ye(t), i = r.a, a = r.d;\n      e += t.scrollLeft * i, n += t.scrollTop * a;\n    } while (t !== o && (t = t.parentNode));\n  return [e, n];\n}\nfunction Pn(t, e) {\n  for (var n in t)\n    if (t.hasOwnProperty(n)) {\n      for (var o in e)\n        if (e.hasOwnProperty(o) && e[o] === t[n][o])\n          return Number(n);\n    }\n  return -1;\n}\nfunction ue(t, e) {\n  if (!t || !t.getBoundingClientRect)\n    return ee();\n  var n = t, o = !1;\n  do\n    if (n.clientWidth < n.scrollWidth || n.clientHeight < n.scrollHeight) {\n      var r = h(n);\n      if (n.clientWidth < n.scrollWidth && (r.overflowX == \"auto\" || r.overflowX == \"scroll\") || n.clientHeight < n.scrollHeight && (r.overflowY == \"auto\" || r.overflowY == \"scroll\")) {\n        if (!n.getBoundingClientRect || n === document.body)\n          return ee();\n        if (o || e)\n          return n;\n        o = !0;\n      }\n    }\n  while (n = n.parentNode);\n  return ee();\n}\nfunction Mn(t, e) {\n  if (t && e)\n    for (var n in e)\n      e.hasOwnProperty(n) && (t[n] = e[n]);\n  return t;\n}\nfunction Ke(t, e) {\n  return Math.round(t.top) === Math.round(e.top) && Math.round(t.left) === Math.round(e.left) && Math.round(t.height) === Math.round(e.height) && Math.round(t.width) === Math.round(e.width);\n}\nvar Te;\nfunction Gt(t, e) {\n  return function() {\n    if (!Te) {\n      var n = arguments, o = this;\n      n.length === 1 ? t.call(o, n[0]) : t.apply(o, n), Te = setTimeout(function() {\n        Te = void 0;\n      }, e);\n    }\n  };\n}\nfunction Fn() {\n  clearTimeout(Te), Te = void 0;\n}\nfunction jt(t, e, n) {\n  t.scrollLeft += e, t.scrollTop += n;\n}\nfunction zt(t) {\n  var e = window.Polymer, n = window.jQuery || window.Zepto;\n  return e && e.dom ? e.dom(t).cloneNode(!0) : n ? n(t).clone(!0)[0] : t.cloneNode(!0);\n}\nfunction Ut(t, e, n) {\n  var o = {};\n  return Array.from(t.children).forEach(function(r) {\n    var i, a, l, s;\n    if (!(!Z(r, e.draggable, t, !1) || r.animated || r === n)) {\n      var u = M(r);\n      o.left = Math.min((i = o.left) !== null && i !== void 0 ? i : 1 / 0, u.left), o.top = Math.min((a = o.top) !== null && a !== void 0 ? a : 1 / 0, u.top), o.right = Math.max((l = o.right) !== null && l !== void 0 ? l : -1 / 0, u.right), o.bottom = Math.max((s = o.bottom) !== null && s !== void 0 ? s : -1 / 0, u.bottom);\n    }\n  }), o.width = o.right - o.left, o.height = o.bottom - o.top, o.x = o.left, o.y = o.top, o;\n}\nvar q = \"Sortable\" + (/* @__PURE__ */ new Date()).getTime();\nfunction Rn() {\n  var t = [], e;\n  return {\n    captureAnimationState: function() {\n      if (t = [], !!this.options.animation) {\n        var o = [].slice.call(this.el.children);\n        o.forEach(function(r) {\n          if (!(h(r, \"display\") === \"none\" || r === p.ghost)) {\n            t.push({\n              target: r,\n              rect: M(r)\n            });\n            var i = te({}, t[t.length - 1].rect);\n            if (r.thisAnimationDuration) {\n              var a = ye(r, !0);\n              a && (i.top -= a.f, i.left -= a.e);\n            }\n            r.fromRect = i;\n          }\n        });\n      }\n    },\n    addAnimationState: function(o) {\n      t.push(o);\n    },\n    removeAnimationState: function(o) {\n      t.splice(Pn(t, {\n        target: o\n      }), 1);\n    },\n    animateAll: function(o) {\n      var r = this;\n      if (!this.options.animation) {\n        clearTimeout(e), typeof o == \"function\" && o();\n        return;\n      }\n      var i = !1, a = 0;\n      t.forEach(function(l) {\n        var s = 0, u = l.target, d = u.fromRect, f = M(u), m = u.prevFromRect, y = u.prevToRect, b = l.rect, E = ye(u, !0);\n        E && (f.top -= E.f, f.left -= E.e), u.toRect = f, u.thisAnimationDuration && Ke(m, f) && !Ke(d, f) && // Make sure animatingRect is on line between toRect & fromRect\n        (b.top - f.top) / (b.left - f.left) === (d.top - f.top) / (d.left - f.left) && (s = Yn(b, m, y, r.options)), Ke(f, d) || (u.prevFromRect = d, u.prevToRect = f, s || (s = r.options.animation), r.animate(u, b, f, s)), s && (i = !0, a = Math.max(a, s), clearTimeout(u.animationResetTimer), u.animationResetTimer = setTimeout(function() {\n          u.animationTime = 0, u.prevFromRect = null, u.fromRect = null, u.prevToRect = null, u.thisAnimationDuration = null;\n        }, s), u.thisAnimationDuration = s);\n      }), clearTimeout(e), i ? e = setTimeout(function() {\n        typeof o == \"function\" && o();\n      }, a) : typeof o == \"function\" && o(), t = [];\n    },\n    animate: function(o, r, i, a) {\n      if (a) {\n        h(o, \"transition\", \"\"), h(o, \"transform\", \"\");\n        var l = ye(this.el), s = l && l.a, u = l && l.d, d = (r.left - i.left) / (s || 1), f = (r.top - i.top) / (u || 1);\n        o.animatingX = !!d, o.animatingY = !!f, h(o, \"transform\", \"translate3d(\" + d + \"px,\" + f + \"px,0)\"), this.forRepaintDummy = Xn(o), h(o, \"transition\", \"transform \" + a + \"ms\" + (this.options.easing ? \" \" + this.options.easing : \"\")), h(o, \"transform\", \"translate3d(0,0,0)\"), typeof o.animated == \"number\" && clearTimeout(o.animated), o.animated = setTimeout(function() {\n          h(o, \"transition\", \"\"), h(o, \"transform\", \"\"), o.animated = !1, o.animatingX = !1, o.animatingY = !1;\n        }, a);\n      }\n    }\n  };\n}\nfunction Xn(t) {\n  return t.offsetWidth;\n}\nfunction Yn(t, e, n, o) {\n  return Math.sqrt(Math.pow(e.top - t.top, 2) + Math.pow(e.left - t.left, 2)) / Math.sqrt(Math.pow(e.top - n.top, 2) + Math.pow(e.left - n.left, 2)) * o.animation;\n}\nvar ge = [], Je = {\n  initializeByDefault: !0\n}, xe = {\n  mount: function(e) {\n    for (var n in Je)\n      Je.hasOwnProperty(n) && !(n in e) && (e[n] = Je[n]);\n    ge.forEach(function(o) {\n      if (o.pluginName === e.pluginName)\n        throw \"Sortable: Cannot mount plugin \".concat(e.pluginName, \" more than once\");\n    }), ge.push(e);\n  },\n  pluginEvent: function(e, n, o) {\n    var r = this;\n    this.eventCanceled = !1, o.cancel = function() {\n      r.eventCanceled = !0;\n    };\n    var i = e + \"Global\";\n    ge.forEach(function(a) {\n      n[a.pluginName] && (n[a.pluginName][i] && n[a.pluginName][i](te({\n        sortable: n\n      }, o)), n.options[a.pluginName] && n[a.pluginName][e] && n[a.pluginName][e](te({\n        sortable: n\n      }, o)));\n    });\n  },\n  initializePlugins: function(e, n, o, r) {\n    ge.forEach(function(l) {\n      var s = l.pluginName;\n      if (!(!e.options[s] && !l.initializeByDefault)) {\n        var u = new l(e, n, e.options);\n        u.sortable = e, u.options = e.options, e[s] = u, re(o, u.defaults);\n      }\n    });\n    for (var i in e.options)\n      if (e.options.hasOwnProperty(i)) {\n        var a = this.modifyOption(e, i, e.options[i]);\n        typeof a != \"undefined\" && (e.options[i] = a);\n      }\n  },\n  getEventProperties: function(e, n) {\n    var o = {};\n    return ge.forEach(function(r) {\n      typeof r.eventProperties == \"function\" && re(o, r.eventProperties.call(n[r.pluginName], e));\n    }), o;\n  },\n  modifyOption: function(e, n, o) {\n    var r;\n    return ge.forEach(function(i) {\n      e[i.pluginName] && i.optionListeners && typeof i.optionListeners[n] == \"function\" && (r = i.optionListeners[n].call(e[i.pluginName], o));\n    }), r;\n  }\n};\nfunction Bn(t) {\n  var e = t.sortable, n = t.rootEl, o = t.name, r = t.targetEl, i = t.cloneEl, a = t.toEl, l = t.fromEl, s = t.oldIndex, u = t.newIndex, d = t.oldDraggableIndex, f = t.newDraggableIndex, m = t.originalEvent, y = t.putSortable, b = t.extraEventProperties;\n  if (e = e || n && n[q], !!e) {\n    var E, k = e.options, H = \"on\" + o.charAt(0).toUpperCase() + o.substr(1);\n    window.CustomEvent && !ie && !Ae ? E = new CustomEvent(o, {\n      bubbles: !0,\n      cancelable: !0\n    }) : (E = document.createEvent(\"Event\"), E.initEvent(o, !0, !0)), E.to = a || n, E.from = l || n, E.item = r || n, E.clone = i, E.oldIndex = s, E.newIndex = u, E.oldDraggableIndex = d, E.newDraggableIndex = f, E.originalEvent = m, E.pullMode = y ? y.lastPutMode : void 0;\n    var F = te(te({}, b), xe.getEventProperties(o, e));\n    for (var A in F)\n      E[A] = F[A];\n    n && n.dispatchEvent(E), k[H] && k[H].call(e, E);\n  }\n}\nvar kn = [\"evt\"], G = function(e, n) {\n  var o = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, r = o.evt, i = An(o, kn);\n  xe.pluginEvent.bind(p)(e, n, te({\n    dragEl: c,\n    parentEl: I,\n    ghostEl: g,\n    rootEl: C,\n    nextEl: pe,\n    lastDownEl: Ye,\n    cloneEl: O,\n    cloneHidden: se,\n    dragStarted: Ee,\n    putSortable: X,\n    activeSortable: p.active,\n    originalEvent: r,\n    oldIndex: be,\n    oldDraggableIndex: Ce,\n    newIndex: $,\n    newDraggableIndex: le,\n    hideGhostForTarget: Kt,\n    unhideGhostForTarget: Jt,\n    cloneNowHidden: function() {\n      se = !0;\n    },\n    cloneNowShown: function() {\n      se = !1;\n    },\n    dispatchSortableEvent: function(l) {\n      W({\n        sortable: n,\n        name: l,\n        originalEvent: r\n      });\n    }\n  }, i));\n};\nfunction W(t) {\n  Bn(te({\n    putSortable: X,\n    cloneEl: O,\n    targetEl: c,\n    rootEl: C,\n    oldIndex: be,\n    oldDraggableIndex: Ce,\n    newIndex: $,\n    newDraggableIndex: le\n  }, t));\n}\nvar c, I, g, C, pe, Ye, O, se, be, $, Ce, le, Pe, X, ve = !1, We = !1, Ge = [], de, J, Ze, Qe, xt, Nt, Ee, me, Oe, Ie = !1, Me = !1, Be, B, et = [], at = !1, je = [], Ue = typeof document != \"undefined\", Fe = kt, Pt = Ae || ie ? \"cssFloat\" : \"float\", Hn = Ue && !Ht && !kt && \"draggable\" in document.createElement(\"div\"), Vt = function() {\n  if (Ue) {\n    if (ie)\n      return !1;\n    var t = document.createElement(\"x\");\n    return t.style.cssText = \"pointer-events:auto\", t.style.pointerEvents === \"auto\";\n  }\n}(), $t = function(e, n) {\n  var o = h(e), r = parseInt(o.width) - parseInt(o.paddingLeft) - parseInt(o.paddingRight) - parseInt(o.borderLeftWidth) - parseInt(o.borderRightWidth), i = we(e, 0, n), a = we(e, 1, n), l = i && h(i), s = a && h(a), u = l && parseInt(l.marginLeft) + parseInt(l.marginRight) + M(i).width, d = s && parseInt(s.marginLeft) + parseInt(s.marginRight) + M(a).width;\n  if (o.display === \"flex\")\n    return o.flexDirection === \"column\" || o.flexDirection === \"column-reverse\" ? \"vertical\" : \"horizontal\";\n  if (o.display === \"grid\")\n    return o.gridTemplateColumns.split(\" \").length <= 1 ? \"vertical\" : \"horizontal\";\n  if (i && l.float && l.float !== \"none\") {\n    var f = l.float === \"left\" ? \"left\" : \"right\";\n    return a && (s.clear === \"both\" || s.clear === f) ? \"vertical\" : \"horizontal\";\n  }\n  return i && (l.display === \"block\" || l.display === \"flex\" || l.display === \"table\" || l.display === \"grid\" || u >= r && o[Pt] === \"none\" || a && o[Pt] === \"none\" && u + d > r) ? \"vertical\" : \"horizontal\";\n}, Ln = function(e, n, o) {\n  var r = o ? e.left : e.top, i = o ? e.right : e.bottom, a = o ? e.width : e.height, l = o ? n.left : n.top, s = o ? n.right : n.bottom, u = o ? n.width : n.height;\n  return r === l || i === s || r + a / 2 === l + u / 2;\n}, Wn = function(e, n) {\n  var o;\n  return Ge.some(function(r) {\n    var i = r[q].options.emptyInsertThreshold;\n    if (!(!i || dt(r))) {\n      var a = M(r), l = e >= a.left - i && e <= a.right + i, s = n >= a.top - i && n <= a.bottom + i;\n      if (l && s)\n        return o = r;\n    }\n  }), o;\n}, qt = function(e) {\n  function n(i, a) {\n    return function(l, s, u, d) {\n      var f = l.options.group.name && s.options.group.name && l.options.group.name === s.options.group.name;\n      if (i == null && (a || f))\n        return !0;\n      if (i == null || i === !1)\n        return !1;\n      if (a && i === \"clone\")\n        return i;\n      if (typeof i == \"function\")\n        return n(i(l, s, u, d), a)(l, s, u, d);\n      var m = (a ? l : s).options.group.name;\n      return i === !0 || typeof i == \"string\" && i === m || i.join && i.indexOf(m) > -1;\n    };\n  }\n  var o = {}, r = e.group;\n  (!r || Xe(r) != \"object\") && (r = {\n    name: r\n  }), o.name = r.name, o.checkPull = n(r.pull, !0), o.checkPut = n(r.put), o.revertClone = r.revertClone, e.group = o;\n}, Kt = function() {\n  !Vt && g && h(g, \"display\", \"none\");\n}, Jt = function() {\n  !Vt && g && h(g, \"display\", \"\");\n};\nUe && !Ht && document.addEventListener(\"click\", function(t) {\n  if (We)\n    return t.preventDefault(), t.stopPropagation && t.stopPropagation(), t.stopImmediatePropagation && t.stopImmediatePropagation(), We = !1, !1;\n}, !0);\nvar he = function(e) {\n  if (c) {\n    e = e.touches ? e.touches[0] : e;\n    var n = Wn(e.clientX, e.clientY);\n    if (n) {\n      var o = {};\n      for (var r in e)\n        e.hasOwnProperty(r) && (o[r] = e[r]);\n      o.target = o.rootEl = n, o.preventDefault = void 0, o.stopPropagation = void 0, n[q]._onDragOver(o);\n    }\n  }\n}, Gn = function(e) {\n  c && c.parentNode[q]._isOutsideThisEl(e.target);\n};\nfunction p(t, e) {\n  if (!(t && t.nodeType && t.nodeType === 1))\n    throw \"Sortable: `el` must be an HTMLElement, not \".concat({}.toString.call(t));\n  this.el = t, this.options = e = re({}, e), t[q] = this;\n  var n = {\n    group: null,\n    sort: !0,\n    disabled: !1,\n    store: null,\n    handle: null,\n    draggable: /^[uo]l$/i.test(t.nodeName) ? \">li\" : \">*\",\n    swapThreshold: 1,\n    // percentage; 0 <= x <= 1\n    invertSwap: !1,\n    // invert always\n    invertedSwapThreshold: null,\n    // will be set to same as swapThreshold if default\n    removeCloneOnHide: !0,\n    direction: function() {\n      return $t(t, this.options);\n    },\n    ghostClass: \"sortable-ghost\",\n    chosenClass: \"sortable-chosen\",\n    dragClass: \"sortable-drag\",\n    ignore: \"a, img\",\n    filter: null,\n    preventOnFilter: !0,\n    animation: 0,\n    easing: null,\n    setData: function(a, l) {\n      a.setData(\"Text\", l.textContent);\n    },\n    dropBubble: !1,\n    dragoverBubble: !1,\n    dataIdAttr: \"data-id\",\n    delay: 0,\n    delayOnTouchOnly: !1,\n    touchStartThreshold: (Number.parseInt ? Number : window).parseInt(window.devicePixelRatio, 10) || 1,\n    forceFallback: !1,\n    fallbackClass: \"sortable-fallback\",\n    fallbackOnBody: !1,\n    fallbackTolerance: 0,\n    fallbackOffset: {\n      x: 0,\n      y: 0\n    },\n    supportPointer: p.supportPointer !== !1 && \"PointerEvent\" in window && !_e,\n    emptyInsertThreshold: 5\n  };\n  xe.initializePlugins(this, t, n);\n  for (var o in n)\n    !(o in e) && (e[o] = n[o]);\n  qt(e);\n  for (var r in this)\n    r.charAt(0) === \"_\" && typeof this[r] == \"function\" && (this[r] = this[r].bind(this));\n  this.nativeDraggable = e.forceFallback ? !1 : Hn, this.nativeDraggable && (this.options.touchStartThreshold = 1), e.supportPointer ? D(t, \"pointerdown\", this._onTapStart) : (D(t, \"mousedown\", this._onTapStart), D(t, \"touchstart\", this._onTapStart)), this.nativeDraggable && (D(t, \"dragover\", this), D(t, \"dragenter\", this)), Ge.push(this.el), e.store && e.store.get && this.sort(e.store.get(this) || []), re(this, Rn());\n}\np.prototype = /** @lends Sortable.prototype */\n{\n  constructor: p,\n  _isOutsideThisEl: function(e) {\n    !this.el.contains(e) && e !== this.el && (me = null);\n  },\n  _getDirection: function(e, n) {\n    return typeof this.options.direction == \"function\" ? this.options.direction.call(this, e, n, c) : this.options.direction;\n  },\n  _onTapStart: function(e) {\n    if (e.cancelable) {\n      var n = this, o = this.el, r = this.options, i = r.preventOnFilter, a = e.type, l = e.touches && e.touches[0] || e.pointerType && e.pointerType === \"touch\" && e, s = (l || e).target, u = e.target.shadowRoot && (e.path && e.path[0] || e.composedPath && e.composedPath()[0]) || s, d = r.filter;\n      if (Jn(o), !c && !(/mousedown|pointerdown/.test(a) && e.button !== 0 || r.disabled) && !u.isContentEditable && !(!this.nativeDraggable && _e && s && s.tagName.toUpperCase() === \"SELECT\") && (s = Z(s, r.draggable, o, !1), !(s && s.animated) && Ye !== s)) {\n        if (be = K(s), Ce = K(s, r.draggable), typeof d == \"function\") {\n          if (d.call(this, e, s, this)) {\n            W({\n              sortable: n,\n              rootEl: u,\n              name: \"filter\",\n              targetEl: s,\n              toEl: o,\n              fromEl: o\n            }), G(\"filter\", n, {\n              evt: e\n            }), i && e.cancelable && e.preventDefault();\n            return;\n          }\n        } else if (d && (d = d.split(\",\").some(function(f) {\n          if (f = Z(u, f.trim(), o, !1), f)\n            return W({\n              sortable: n,\n              rootEl: f,\n              name: \"filter\",\n              targetEl: s,\n              fromEl: o,\n              toEl: o\n            }), G(\"filter\", n, {\n              evt: e\n            }), !0;\n        }), d)) {\n          i && e.cancelable && e.preventDefault();\n          return;\n        }\n        r.handle && !Z(u, r.handle, o, !1) || this._prepareDragStart(e, l, s);\n      }\n    }\n  },\n  _prepareDragStart: function(e, n, o) {\n    var r = this, i = r.el, a = r.options, l = i.ownerDocument, s;\n    if (o && !c && o.parentNode === i) {\n      var u = M(o);\n      if (C = i, c = o, I = c.parentNode, pe = c.nextSibling, Ye = o, Pe = a.group, p.dragged = c, de = {\n        target: c,\n        clientX: (n || e).clientX,\n        clientY: (n || e).clientY\n      }, xt = de.clientX - u.left, Nt = de.clientY - u.top, this._lastX = (n || e).clientX, this._lastY = (n || e).clientY, c.style[\"will-change\"] = \"all\", s = function() {\n        if (G(\"delayEnded\", r, {\n          evt: e\n        }), p.eventCanceled) {\n          r._onDrop();\n          return;\n        }\n        r._disableDelayedDragEvents(), !Ct && r.nativeDraggable && (c.draggable = !0), r._triggerDragStart(e, n), W({\n          sortable: r,\n          name: \"choose\",\n          originalEvent: e\n        }), V(c, a.chosenClass, !0);\n      }, a.ignore.split(\",\").forEach(function(d) {\n        Wt(c, d.trim(), tt);\n      }), D(l, \"dragover\", he), D(l, \"mousemove\", he), D(l, \"touchmove\", he), D(l, \"mouseup\", r._onDrop), D(l, \"touchend\", r._onDrop), D(l, \"touchcancel\", r._onDrop), Ct && this.nativeDraggable && (this.options.touchStartThreshold = 4, c.draggable = !0), G(\"delayStart\", this, {\n        evt: e\n      }), a.delay && (!a.delayOnTouchOnly || n) && (!this.nativeDraggable || !(Ae || ie))) {\n        if (p.eventCanceled) {\n          this._onDrop();\n          return;\n        }\n        D(l, \"mouseup\", r._disableDelayedDrag), D(l, \"touchend\", r._disableDelayedDrag), D(l, \"touchcancel\", r._disableDelayedDrag), D(l, \"mousemove\", r._delayedDragTouchMoveHandler), D(l, \"touchmove\", r._delayedDragTouchMoveHandler), a.supportPointer && D(l, \"pointermove\", r._delayedDragTouchMoveHandler), r._dragStartTimer = setTimeout(s, a.delay);\n      } else\n        s();\n    }\n  },\n  _delayedDragTouchMoveHandler: function(e) {\n    var n = e.touches ? e.touches[0] : e;\n    Math.max(Math.abs(n.clientX - this._lastX), Math.abs(n.clientY - this._lastY)) >= Math.floor(this.options.touchStartThreshold / (this.nativeDraggable && window.devicePixelRatio || 1)) && this._disableDelayedDrag();\n  },\n  _disableDelayedDrag: function() {\n    c && tt(c), clearTimeout(this._dragStartTimer), this._disableDelayedDragEvents();\n  },\n  _disableDelayedDragEvents: function() {\n    var e = this.el.ownerDocument;\n    S(e, \"mouseup\", this._disableDelayedDrag), S(e, \"touchend\", this._disableDelayedDrag), S(e, \"touchcancel\", this._disableDelayedDrag), S(e, \"mousemove\", this._delayedDragTouchMoveHandler), S(e, \"touchmove\", this._delayedDragTouchMoveHandler), S(e, \"pointermove\", this._delayedDragTouchMoveHandler);\n  },\n  _triggerDragStart: function(e, n) {\n    n = n || e.pointerType == \"touch\" && e, !this.nativeDraggable || n ? this.options.supportPointer ? D(document, \"pointermove\", this._onTouchMove) : n ? D(document, \"touchmove\", this._onTouchMove) : D(document, \"mousemove\", this._onTouchMove) : (D(c, \"dragend\", this), D(C, \"dragstart\", this._onDragStart));\n    try {\n      document.selection ? ke(function() {\n        document.selection.empty();\n      }) : window.getSelection().removeAllRanges();\n    } catch (o) {\n    }\n  },\n  _dragStarted: function(e, n) {\n    if (ve = !1, C && c) {\n      G(\"dragStarted\", this, {\n        evt: n\n      }), this.nativeDraggable && D(document, \"dragover\", Gn);\n      var o = this.options;\n      !e && V(c, o.dragClass, !1), V(c, o.ghostClass, !0), p.active = this, e && this._appendGhost(), W({\n        sortable: this,\n        name: \"start\",\n        originalEvent: n\n      });\n    } else\n      this._nulling();\n  },\n  _emulateDragOver: function() {\n    if (J) {\n      this._lastX = J.clientX, this._lastY = J.clientY, Kt();\n      for (var e = document.elementFromPoint(J.clientX, J.clientY), n = e; e && e.shadowRoot && (e = e.shadowRoot.elementFromPoint(J.clientX, J.clientY), e !== n); )\n        n = e;\n      if (c.parentNode[q]._isOutsideThisEl(e), n)\n        do {\n          if (n[q]) {\n            var o = void 0;\n            if (o = n[q]._onDragOver({\n              clientX: J.clientX,\n              clientY: J.clientY,\n              target: e,\n              rootEl: n\n            }), o && !this.options.dragoverBubble)\n              break;\n          }\n          e = n;\n        } while (n = n.parentNode);\n      Jt();\n    }\n  },\n  _onTouchMove: function(e) {\n    if (de) {\n      var n = this.options, o = n.fallbackTolerance, r = n.fallbackOffset, i = e.touches ? e.touches[0] : e, a = g && ye(g, !0), l = g && a && a.a, s = g && a && a.d, u = Fe && B && At(B), d = (i.clientX - de.clientX + r.x) / (l || 1) + (u ? u[0] - et[0] : 0) / (l || 1), f = (i.clientY - de.clientY + r.y) / (s || 1) + (u ? u[1] - et[1] : 0) / (s || 1);\n      if (!p.active && !ve) {\n        if (o && Math.max(Math.abs(i.clientX - this._lastX), Math.abs(i.clientY - this._lastY)) < o)\n          return;\n        this._onDragStart(e, !0);\n      }\n      if (g) {\n        a ? (a.e += d - (Ze || 0), a.f += f - (Qe || 0)) : a = {\n          a: 1,\n          b: 0,\n          c: 0,\n          d: 1,\n          e: d,\n          f\n        };\n        var m = \"matrix(\".concat(a.a, \",\").concat(a.b, \",\").concat(a.c, \",\").concat(a.d, \",\").concat(a.e, \",\").concat(a.f, \")\");\n        h(g, \"webkitTransform\", m), h(g, \"mozTransform\", m), h(g, \"msTransform\", m), h(g, \"transform\", m), Ze = d, Qe = f, J = i;\n      }\n      e.cancelable && e.preventDefault();\n    }\n  },\n  _appendGhost: function() {\n    if (!g) {\n      var e = this.options.fallbackOnBody ? document.body : C, n = M(c, !0, Fe, !0, e), o = this.options;\n      if (Fe) {\n        for (B = e; h(B, \"position\") === \"static\" && h(B, \"transform\") === \"none\" && B !== document; )\n          B = B.parentNode;\n        B !== document.body && B !== document.documentElement ? (B === document && (B = ee()), n.top += B.scrollTop, n.left += B.scrollLeft) : B = ee(), et = At(B);\n      }\n      g = c.cloneNode(!0), V(g, o.ghostClass, !1), V(g, o.fallbackClass, !0), V(g, o.dragClass, !0), h(g, \"transition\", \"\"), h(g, \"transform\", \"\"), h(g, \"box-sizing\", \"border-box\"), h(g, \"margin\", 0), h(g, \"top\", n.top), h(g, \"left\", n.left), h(g, \"width\", n.width), h(g, \"height\", n.height), h(g, \"opacity\", \"0.8\"), h(g, \"position\", Fe ? \"absolute\" : \"fixed\"), h(g, \"zIndex\", \"100000\"), h(g, \"pointerEvents\", \"none\"), p.ghost = g, e.appendChild(g), h(g, \"transform-origin\", xt / parseInt(g.style.width) * 100 + \"% \" + Nt / parseInt(g.style.height) * 100 + \"%\");\n    }\n  },\n  _onDragStart: function(e, n) {\n    var o = this, r = e.dataTransfer, i = o.options;\n    if (G(\"dragStart\", this, {\n      evt: e\n    }), p.eventCanceled) {\n      this._onDrop();\n      return;\n    }\n    G(\"setupClone\", this), p.eventCanceled || (O = zt(c), O.removeAttribute(\"id\"), O.draggable = !1, O.style[\"will-change\"] = \"\", this._hideClone(), V(O, this.options.chosenClass, !1), p.clone = O), o.cloneId = ke(function() {\n      G(\"clone\", o), !p.eventCanceled && (o.options.removeCloneOnHide || C.insertBefore(O, c), o._hideClone(), W({\n        sortable: o,\n        name: \"clone\"\n      }));\n    }), !n && V(c, i.dragClass, !0), n ? (We = !0, o._loopId = setInterval(o._emulateDragOver, 50)) : (S(document, \"mouseup\", o._onDrop), S(document, \"touchend\", o._onDrop), S(document, \"touchcancel\", o._onDrop), r && (r.effectAllowed = \"move\", i.setData && i.setData.call(o, r, c)), D(document, \"drop\", o), h(c, \"transform\", \"translateZ(0)\")), ve = !0, o._dragStartId = ke(o._dragStarted.bind(o, n, e)), D(document, \"selectstart\", o), Ee = !0, _e && h(document.body, \"user-select\", \"none\");\n  },\n  // Returns true - if no further action is needed (either inserted or another condition)\n  _onDragOver: function(e) {\n    var n = this.el, o = e.target, r, i, a, l = this.options, s = l.group, u = p.active, d = Pe === s, f = l.sort, m = X || u, y, b = this, E = !1;\n    if (at)\n      return;\n    function k(ce, nn) {\n      G(ce, b, te({\n        evt: e,\n        isOwner: d,\n        axis: y ? \"vertical\" : \"horizontal\",\n        revert: a,\n        dragRect: r,\n        targetRect: i,\n        canSort: f,\n        fromSortable: m,\n        target: o,\n        completed: F,\n        onMove: function(gt, on) {\n          return Re(C, n, c, r, gt, M(gt), e, on);\n        },\n        changed: A\n      }, nn));\n    }\n    function H() {\n      k(\"dragOverAnimationCapture\"), b.captureAnimationState(), b !== m && m.captureAnimationState();\n    }\n    function F(ce) {\n      return k(\"dragOverCompleted\", {\n        insertion: ce\n      }), ce && (d ? u._hideClone() : u._showClone(b), b !== m && (V(c, X ? X.options.ghostClass : u.options.ghostClass, !1), V(c, l.ghostClass, !0)), X !== b && b !== p.active ? X = b : b === p.active && X && (X = null), m === b && (b._ignoreWhileAnimating = o), b.animateAll(function() {\n        k(\"dragOverAnimationComplete\"), b._ignoreWhileAnimating = null;\n      }), b !== m && (m.animateAll(), m._ignoreWhileAnimating = null)), (o === c && !c.animated || o === n && !o.animated) && (me = null), !l.dragoverBubble && !e.rootEl && o !== document && (c.parentNode[q]._isOutsideThisEl(e.target), !ce && he(e)), !l.dragoverBubble && e.stopPropagation && e.stopPropagation(), E = !0;\n    }\n    function A() {\n      $ = K(c), le = K(c, l.draggable), W({\n        sortable: b,\n        name: \"change\",\n        toEl: n,\n        newIndex: $,\n        newDraggableIndex: le,\n        originalEvent: e\n      });\n    }\n    if (e.preventDefault !== void 0 && e.cancelable && e.preventDefault(), o = Z(o, l.draggable, n, !0), k(\"dragOver\"), p.eventCanceled)\n      return E;\n    if (c.contains(e.target) || o.animated && o.animatingX && o.animatingY || b._ignoreWhileAnimating === o)\n      return F(!1);\n    if (We = !1, u && !l.disabled && (d ? f || (a = I !== C) : X === this || (this.lastPutMode = Pe.checkPull(this, u, c, e)) && s.checkPut(this, u, c, e))) {\n      if (y = this._getDirection(e, o) === \"vertical\", r = M(c), k(\"dragOverValid\"), p.eventCanceled)\n        return E;\n      if (a)\n        return I = C, H(), this._hideClone(), k(\"revert\"), p.eventCanceled || (pe ? C.insertBefore(c, pe) : C.appendChild(c)), F(!0);\n      var L = dt(n, l.draggable);\n      if (!L || Vn(e, y, this) && !L.animated) {\n        if (L === c)\n          return F(!1);\n        if (L && n === e.target && (o = L), o && (i = M(o)), Re(C, n, c, r, o, i, e, !!o) !== !1)\n          return H(), L && L.nextSibling ? n.insertBefore(c, L.nextSibling) : n.appendChild(c), I = n, A(), F(!0);\n      } else if (L && Un(e, y, this)) {\n        var ne = we(n, 0, l, !0);\n        if (ne === c)\n          return F(!1);\n        if (o = ne, i = M(o), Re(C, n, c, r, o, i, e, !1) !== !1)\n          return H(), n.insertBefore(c, ne), I = n, A(), F(!0);\n      } else if (o.parentNode === n) {\n        i = M(o);\n        var j = 0, Q, v = c.parentNode !== n, w = !Ln(c.animated && c.toRect || r, o.animated && o.toRect || i, y), x = y ? \"top\" : \"left\", N = It(o, \"top\", \"top\") || It(c, \"top\", \"top\"), _ = N ? N.scrollTop : void 0;\n        me !== o && (Q = i[x], Ie = !1, Me = !w && l.invertSwap || v), j = $n(e, o, i, y, w ? 1 : l.swapThreshold, l.invertedSwapThreshold == null ? l.swapThreshold : l.invertedSwapThreshold, Me, me === o);\n        var T;\n        if (j !== 0) {\n          var R = K(c);\n          do\n            R -= j, T = I.children[R];\n          while (T && (h(T, \"display\") === \"none\" || T === g));\n        }\n        if (j === 0 || T === o)\n          return F(!1);\n        me = o, Oe = j;\n        var Y = o.nextElementSibling, z = !1;\n        z = j === 1;\n        var ae = Re(C, n, c, r, o, i, e, z);\n        if (ae !== !1)\n          return (ae === 1 || ae === -1) && (z = ae === 1), at = !0, setTimeout(zn, 30), H(), z && !Y ? n.appendChild(c) : o.parentNode.insertBefore(c, z ? Y : o), N && jt(N, 0, _ - N.scrollTop), I = c.parentNode, Q !== void 0 && !Me && (Be = Math.abs(Q - M(o)[x])), A(), F(!0);\n      }\n      if (n.contains(c))\n        return F(!1);\n    }\n    return !1;\n  },\n  _ignoreWhileAnimating: null,\n  _offMoveEvents: function() {\n    S(document, \"mousemove\", this._onTouchMove), S(document, \"touchmove\", this._onTouchMove), S(document, \"pointermove\", this._onTouchMove), S(document, \"dragover\", he), S(document, \"mousemove\", he), S(document, \"touchmove\", he);\n  },\n  _offUpEvents: function() {\n    var e = this.el.ownerDocument;\n    S(e, \"mouseup\", this._onDrop), S(e, \"touchend\", this._onDrop), S(e, \"pointerup\", this._onDrop), S(e, \"touchcancel\", this._onDrop), S(document, \"selectstart\", this);\n  },\n  _onDrop: function(e) {\n    var n = this.el, o = this.options;\n    if ($ = K(c), le = K(c, o.draggable), G(\"drop\", this, {\n      evt: e\n    }), I = c && c.parentNode, $ = K(c), le = K(c, o.draggable), p.eventCanceled) {\n      this._nulling();\n      return;\n    }\n    ve = !1, Me = !1, Ie = !1, clearInterval(this._loopId), clearTimeout(this._dragStartTimer), lt(this.cloneId), lt(this._dragStartId), this.nativeDraggable && (S(document, \"drop\", this), S(n, \"dragstart\", this._onDragStart)), this._offMoveEvents(), this._offUpEvents(), _e && h(document.body, \"user-select\", \"\"), h(c, \"transform\", \"\"), e && (Ee && (e.cancelable && e.preventDefault(), !o.dropBubble && e.stopPropagation()), g && g.parentNode && g.parentNode.removeChild(g), (C === I || X && X.lastPutMode !== \"clone\") && O && O.parentNode && O.parentNode.removeChild(O), c && (this.nativeDraggable && S(c, \"dragend\", this), tt(c), c.style[\"will-change\"] = \"\", Ee && !ve && V(c, X ? X.options.ghostClass : this.options.ghostClass, !1), V(c, this.options.chosenClass, !1), W({\n      sortable: this,\n      name: \"unchoose\",\n      toEl: I,\n      newIndex: null,\n      newDraggableIndex: null,\n      originalEvent: e\n    }), C !== I ? ($ >= 0 && (W({\n      rootEl: I,\n      name: \"add\",\n      toEl: I,\n      fromEl: C,\n      originalEvent: e\n    }), W({\n      sortable: this,\n      name: \"remove\",\n      toEl: I,\n      originalEvent: e\n    }), W({\n      rootEl: I,\n      name: \"sort\",\n      toEl: I,\n      fromEl: C,\n      originalEvent: e\n    }), W({\n      sortable: this,\n      name: \"sort\",\n      toEl: I,\n      originalEvent: e\n    })), X && X.save()) : $ !== be && $ >= 0 && (W({\n      sortable: this,\n      name: \"update\",\n      toEl: I,\n      originalEvent: e\n    }), W({\n      sortable: this,\n      name: \"sort\",\n      toEl: I,\n      originalEvent: e\n    })), p.active && (($ == null || $ === -1) && ($ = be, le = Ce), W({\n      sortable: this,\n      name: \"end\",\n      toEl: I,\n      originalEvent: e\n    }), this.save()))), this._nulling();\n  },\n  _nulling: function() {\n    G(\"nulling\", this), C = c = I = g = pe = O = Ye = se = de = J = Ee = $ = le = be = Ce = me = Oe = X = Pe = p.dragged = p.ghost = p.clone = p.active = null, je.forEach(function(e) {\n      e.checked = !0;\n    }), je.length = Ze = Qe = 0;\n  },\n  handleEvent: function(e) {\n    switch (e.type) {\n      case \"drop\":\n      case \"dragend\":\n        this._onDrop(e);\n        break;\n      case \"dragenter\":\n      case \"dragover\":\n        c && (this._onDragOver(e), jn(e));\n        break;\n      case \"selectstart\":\n        e.preventDefault();\n        break;\n    }\n  },\n  /**\n   * Serializes the item into an array of string.\n   * @returns {String[]}\n   */\n  toArray: function() {\n    for (var e = [], n, o = this.el.children, r = 0, i = o.length, a = this.options; r < i; r++)\n      n = o[r], Z(n, a.draggable, this.el, !1) && e.push(n.getAttribute(a.dataIdAttr) || Kn(n));\n    return e;\n  },\n  /**\n   * Sorts the elements according to the array.\n   * @param  {String[]}  order  order of the items\n   */\n  sort: function(e, n) {\n    var o = {}, r = this.el;\n    this.toArray().forEach(function(i, a) {\n      var l = r.children[a];\n      Z(l, this.options.draggable, r, !1) && (o[i] = l);\n    }, this), n && this.captureAnimationState(), e.forEach(function(i) {\n      o[i] && (r.removeChild(o[i]), r.appendChild(o[i]));\n    }), n && this.animateAll();\n  },\n  /**\n   * Save the current sorting\n   */\n  save: function() {\n    var e = this.options.store;\n    e && e.set && e.set(this);\n  },\n  /**\n   * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\n   * @param   {HTMLElement}  el\n   * @param   {String}       [selector]  default: `options.draggable`\n   * @returns {HTMLElement|null}\n   */\n  closest: function(e, n) {\n    return Z(e, n || this.options.draggable, this.el, !1);\n  },\n  /**\n   * Set/get option\n   * @param   {string} name\n   * @param   {*}      [value]\n   * @returns {*}\n   */\n  option: function(e, n) {\n    var o = this.options;\n    if (n === void 0)\n      return o[e];\n    var r = xe.modifyOption(this, e, n);\n    typeof r != \"undefined\" ? o[e] = r : o[e] = n, e === \"group\" && qt(o);\n  },\n  /**\n   * Destroy\n   */\n  destroy: function() {\n    G(\"destroy\", this);\n    var e = this.el;\n    e[q] = null, S(e, \"mousedown\", this._onTapStart), S(e, \"touchstart\", this._onTapStart), S(e, \"pointerdown\", this._onTapStart), this.nativeDraggable && (S(e, \"dragover\", this), S(e, \"dragenter\", this)), Array.prototype.forEach.call(e.querySelectorAll(\"[draggable]\"), function(n) {\n      n.removeAttribute(\"draggable\");\n    }), this._onDrop(), this._disableDelayedDragEvents(), Ge.splice(Ge.indexOf(this.el), 1), this.el = e = null;\n  },\n  _hideClone: function() {\n    if (!se) {\n      if (G(\"hideClone\", this), p.eventCanceled)\n        return;\n      h(O, \"display\", \"none\"), this.options.removeCloneOnHide && O.parentNode && O.parentNode.removeChild(O), se = !0;\n    }\n  },\n  _showClone: function(e) {\n    if (e.lastPutMode !== \"clone\") {\n      this._hideClone();\n      return;\n    }\n    if (se) {\n      if (G(\"showClone\", this), p.eventCanceled)\n        return;\n      c.parentNode == C && !this.options.group.revertClone ? C.insertBefore(O, c) : pe ? C.insertBefore(O, pe) : C.appendChild(O), this.options.group.revertClone && this.animate(c, O), h(O, \"display\", \"\"), se = !1;\n    }\n  }\n};\nfunction jn(t) {\n  t.dataTransfer && (t.dataTransfer.dropEffect = \"move\"), t.cancelable && t.preventDefault();\n}\nfunction Re(t, e, n, o, r, i, a, l) {\n  var s, u = t[q], d = u.options.onMove, f;\n  return window.CustomEvent && !ie && !Ae ? s = new CustomEvent(\"move\", {\n    bubbles: !0,\n    cancelable: !0\n  }) : (s = document.createEvent(\"Event\"), s.initEvent(\"move\", !0, !0)), s.to = e, s.from = t, s.dragged = n, s.draggedRect = o, s.related = r || e, s.relatedRect = i || M(e), s.willInsertAfter = l, s.originalEvent = a, t.dispatchEvent(s), d && (f = d.call(u, s, a)), f;\n}\nfunction tt(t) {\n  t.draggable = !1;\n}\nfunction zn() {\n  at = !1;\n}\nfunction Un(t, e, n) {\n  var o = M(we(n.el, 0, n.options, !0)), r = Ut(n.el, n.options, g), i = 10;\n  return e ? t.clientX < r.left - i || t.clientY < o.top && t.clientX < o.right : t.clientY < r.top - i || t.clientY < o.bottom && t.clientX < o.left;\n}\nfunction Vn(t, e, n) {\n  var o = M(dt(n.el, n.options.draggable)), r = Ut(n.el, n.options, g), i = 10;\n  return e ? t.clientX > r.right + i || t.clientY > o.bottom && t.clientX > o.left : t.clientY > r.bottom + i || t.clientX > o.right && t.clientY > o.top;\n}\nfunction $n(t, e, n, o, r, i, a, l) {\n  var s = o ? t.clientY : t.clientX, u = o ? n.height : n.width, d = o ? n.top : n.left, f = o ? n.bottom : n.right, m = !1;\n  if (!a) {\n    if (l && Be < u * r) {\n      if (!Ie && (Oe === 1 ? s > d + u * i / 2 : s < f - u * i / 2) && (Ie = !0), Ie)\n        m = !0;\n      else if (Oe === 1 ? s < d + Be : s > f - Be)\n        return -Oe;\n    } else if (s > d + u * (1 - r) / 2 && s < f - u * (1 - r) / 2)\n      return qn(e);\n  }\n  return m = m || a, m && (s < d + u * i / 2 || s > f - u * i / 2) ? s > d + u / 2 ? 1 : -1 : 0;\n}\nfunction qn(t) {\n  return K(c) < K(t) ? 1 : -1;\n}\nfunction Kn(t) {\n  for (var e = t.tagName + t.className + t.src + t.href + t.textContent, n = e.length, o = 0; n--; )\n    o += e.charCodeAt(n);\n  return o.toString(36);\n}\nfunction Jn(t) {\n  je.length = 0;\n  for (var e = t.getElementsByTagName(\"input\"), n = e.length; n--; ) {\n    var o = e[n];\n    o.checked && je.push(o);\n  }\n}\nfunction ke(t) {\n  return setTimeout(t, 0);\n}\nfunction lt(t) {\n  return clearTimeout(t);\n}\nUe && D(document, \"touchmove\", function(t) {\n  (p.active || ve) && t.cancelable && t.preventDefault();\n});\np.utils = {\n  on: D,\n  off: S,\n  css: h,\n  find: Wt,\n  is: function(e, n) {\n    return !!Z(e, n, e, !1);\n  },\n  extend: Mn,\n  throttle: Gt,\n  closest: Z,\n  toggleClass: V,\n  clone: zt,\n  index: K,\n  nextTick: ke,\n  cancelNextTick: lt,\n  detectDirection: $t,\n  getChild: we\n};\np.get = function(t) {\n  return t[q];\n};\np.mount = function() {\n  for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++)\n    e[n] = arguments[n];\n  e[0].constructor === Array && (e = e[0]), e.forEach(function(o) {\n    if (!o.prototype || !o.prototype.constructor)\n      throw \"Sortable: Mounted plugin must be a constructor function, not \".concat({}.toString.call(o));\n    o.utils && (p.utils = te(te({}, p.utils), o.utils)), xe.mount(o);\n  });\n};\np.create = function(t, e) {\n  return new p(t, e);\n};\np.version = xn;\nvar P = [], Se, st, ut = !1, nt, ot, ze, De;\nfunction Zn() {\n  function t() {\n    this.defaults = {\n      scroll: !0,\n      forceAutoScrollFallback: !1,\n      scrollSensitivity: 30,\n      scrollSpeed: 10,\n      bubbleScroll: !0\n    };\n    for (var e in this)\n      e.charAt(0) === \"_\" && typeof this[e] == \"function\" && (this[e] = this[e].bind(this));\n  }\n  return t.prototype = {\n    dragStarted: function(n) {\n      var o = n.originalEvent;\n      this.sortable.nativeDraggable ? D(document, \"dragover\", this._handleAutoScroll) : this.options.supportPointer ? D(document, \"pointermove\", this._handleFallbackAutoScroll) : o.touches ? D(document, \"touchmove\", this._handleFallbackAutoScroll) : D(document, \"mousemove\", this._handleFallbackAutoScroll);\n    },\n    dragOverCompleted: function(n) {\n      var o = n.originalEvent;\n      !this.options.dragOverBubble && !o.rootEl && this._handleAutoScroll(o);\n    },\n    drop: function() {\n      this.sortable.nativeDraggable ? S(document, \"dragover\", this._handleAutoScroll) : (S(document, \"pointermove\", this._handleFallbackAutoScroll), S(document, \"touchmove\", this._handleFallbackAutoScroll), S(document, \"mousemove\", this._handleFallbackAutoScroll)), Mt(), He(), Fn();\n    },\n    nulling: function() {\n      ze = st = Se = ut = De = nt = ot = null, P.length = 0;\n    },\n    _handleFallbackAutoScroll: function(n) {\n      this._handleAutoScroll(n, !0);\n    },\n    _handleAutoScroll: function(n, o) {\n      var r = this, i = (n.touches ? n.touches[0] : n).clientX, a = (n.touches ? n.touches[0] : n).clientY, l = document.elementFromPoint(i, a);\n      if (ze = n, o || this.options.forceAutoScrollFallback || Ae || ie || _e) {\n        rt(n, this.options, l, o);\n        var s = ue(l, !0);\n        ut && (!De || i !== nt || a !== ot) && (De && Mt(), De = setInterval(function() {\n          var u = ue(document.elementFromPoint(i, a), !0);\n          u !== s && (s = u, He()), rt(n, r.options, u, o);\n        }, 10), nt = i, ot = a);\n      } else {\n        if (!this.options.bubbleScroll || ue(l, !0) === ee()) {\n          He();\n          return;\n        }\n        rt(n, this.options, ue(l, !1), !1);\n      }\n    }\n  }, re(t, {\n    pluginName: \"scroll\",\n    initializeByDefault: !0\n  });\n}\nfunction He() {\n  P.forEach(function(t) {\n    clearInterval(t.pid);\n  }), P = [];\n}\nfunction Mt() {\n  clearInterval(De);\n}\nvar rt = Gt(function(t, e, n, o) {\n  if (e.scroll) {\n    var r = (t.touches ? t.touches[0] : t).clientX, i = (t.touches ? t.touches[0] : t).clientY, a = e.scrollSensitivity, l = e.scrollSpeed, s = ee(), u = !1, d;\n    st !== n && (st = n, He(), Se = e.scroll, d = e.scrollFn, Se === !0 && (Se = ue(n, !0)));\n    var f = 0, m = Se;\n    do {\n      var y = m, b = M(y), E = b.top, k = b.bottom, H = b.left, F = b.right, A = b.width, L = b.height, ne = void 0, j = void 0, Q = y.scrollWidth, v = y.scrollHeight, w = h(y), x = y.scrollLeft, N = y.scrollTop;\n      y === s ? (ne = A < Q && (w.overflowX === \"auto\" || w.overflowX === \"scroll\" || w.overflowX === \"visible\"), j = L < v && (w.overflowY === \"auto\" || w.overflowY === \"scroll\" || w.overflowY === \"visible\")) : (ne = A < Q && (w.overflowX === \"auto\" || w.overflowX === \"scroll\"), j = L < v && (w.overflowY === \"auto\" || w.overflowY === \"scroll\"));\n      var _ = ne && (Math.abs(F - r) <= a && x + A < Q) - (Math.abs(H - r) <= a && !!x), T = j && (Math.abs(k - i) <= a && N + L < v) - (Math.abs(E - i) <= a && !!N);\n      if (!P[f])\n        for (var R = 0; R <= f; R++)\n          P[R] || (P[R] = {});\n      (P[f].vx != _ || P[f].vy != T || P[f].el !== y) && (P[f].el = y, P[f].vx = _, P[f].vy = T, clearInterval(P[f].pid), (_ != 0 || T != 0) && (u = !0, P[f].pid = setInterval(function() {\n        o && this.layer === 0 && p.active._onTouchMove(ze);\n        var Y = P[this.layer].vy ? P[this.layer].vy * l : 0, z = P[this.layer].vx ? P[this.layer].vx * l : 0;\n        typeof d == \"function\" && d.call(p.dragged.parentNode[q], z, Y, t, ze, P[this.layer].el) !== \"continue\" || jt(P[this.layer].el, z, Y);\n      }.bind({\n        layer: f\n      }), 24))), f++;\n    } while (e.bubbleScroll && m !== s && (m = ue(m, !1)));\n    ut = u;\n  }\n}, 30), Zt = function(e) {\n  var n = e.originalEvent, o = e.putSortable, r = e.dragEl, i = e.activeSortable, a = e.dispatchSortableEvent, l = e.hideGhostForTarget, s = e.unhideGhostForTarget;\n  if (n) {\n    var u = o || i;\n    l();\n    var d = n.changedTouches && n.changedTouches.length ? n.changedTouches[0] : n, f = document.elementFromPoint(d.clientX, d.clientY);\n    s(), u && !u.el.contains(f) && (a(\"spill\"), this.onSpill({\n      dragEl: r,\n      putSortable: o\n    }));\n  }\n};\nfunction ht() {\n}\nht.prototype = {\n  startIndex: null,\n  dragStart: function(e) {\n    var n = e.oldDraggableIndex;\n    this.startIndex = n;\n  },\n  onSpill: function(e) {\n    var n = e.dragEl, o = e.putSortable;\n    this.sortable.captureAnimationState(), o && o.captureAnimationState();\n    var r = we(this.sortable.el, this.startIndex, this.options);\n    r ? this.sortable.el.insertBefore(n, r) : this.sortable.el.appendChild(n), this.sortable.animateAll(), o && o.animateAll();\n  },\n  drop: Zt\n};\nre(ht, {\n  pluginName: \"revertOnSpill\"\n});\nfunction pt() {\n}\npt.prototype = {\n  onSpill: function(e) {\n    var n = e.dragEl, o = e.putSortable, r = o || this.sortable;\n    r.captureAnimationState(), n.parentNode && n.parentNode.removeChild(n), r.animateAll();\n  },\n  drop: Zt\n};\nre(pt, {\n  pluginName: \"removeOnSpill\"\n});\np.mount(new Zn());\np.mount(pt, ht);\nfunction Qn(t) {\n  return t == null ? t : JSON.parse(JSON.stringify(t));\n}\nfunction eo(t) {\n  ft() && ln(t);\n}\nfunction to(t) {\n  ft() ? sn(t) : Yt(t);\n}\nlet Qt = null, en = null;\nfunction Ft(t = null, e = null) {\n  Qt = t, en = e;\n}\nfunction no() {\n  return {\n    data: Qt,\n    clonedData: en\n  };\n}\nconst Rt = Symbol(\"cloneElement\");\nfunction tn(...t) {\n  var j, Q;\n  const e = (j = ft()) == null ? void 0 : j.proxy;\n  let n = null;\n  const o = t[0];\n  let [, r, i] = t;\n  Array.isArray(U(r)) || (i = r, r = null);\n  let a = null;\n  const {\n    immediate: l = !0,\n    clone: s = Qn,\n    customUpdate: u\n  } = (Q = U(i)) != null ? Q : {};\n  function d(v) {\n    var R;\n    const { from: w, oldIndex: x, item: N } = v;\n    n = Array.from(w.childNodes);\n    const _ = U((R = U(r)) == null ? void 0 : R[x]), T = s(_);\n    Ft(_, T), N[Rt] = T;\n  }\n  function f(v) {\n    const w = v.item[Rt];\n    if (!yn(w)) {\n      if (qe(v.item), $e(r)) {\n        const x = [...U(r)];\n        r.value = St(x, v.newDraggableIndex, w);\n        return;\n      }\n      St(U(r), v.newDraggableIndex, w);\n    }\n  }\n  function m(v) {\n    const { from: w, item: x, oldIndex: N, oldDraggableIndex: _, pullMode: T, clone: R } = v;\n    if (Dt(w, x, N), T === \"clone\") {\n      qe(R);\n      return;\n    }\n    if ($e(r)) {\n      const Y = [...U(r)];\n      r.value = Et(Y, _);\n      return;\n    }\n    Et(U(r), _);\n  }\n  function y(v) {\n    if (u) {\n      u(v);\n      return;\n    }\n    const { from: w, item: x, oldIndex: N, oldDraggableIndex: _, newDraggableIndex: T } = v;\n    if (qe(x), Dt(w, x, N), $e(r)) {\n      const R = [...U(r)];\n      r.value = wt(\n        R,\n        _,\n        T\n      );\n      return;\n    }\n    wt(U(r), _, T);\n  }\n  function b(v) {\n    const { newIndex: w, oldIndex: x, from: N, to: _ } = v;\n    let T = null;\n    const R = w === x && N === _;\n    try {\n      if (R) {\n        let Y = null;\n        n == null || n.some((z, ae) => {\n          if (Y && (n == null ? void 0 : n.length) !== _.childNodes.length)\n            return N.insertBefore(Y, z.nextSibling), !0;\n          const ce = _.childNodes[ae];\n          Y = _ == null ? void 0 : _.replaceChild(z, ce);\n        });\n      }\n    } catch (Y) {\n      T = Y;\n    } finally {\n      n = null;\n    }\n    Yt(() => {\n      if (Ft(), T)\n        throw T;\n    });\n  }\n  const E = {\n    onUpdate: y,\n    onStart: d,\n    onAdd: f,\n    onRemove: m,\n    onEnd: b\n  };\n  function k(v) {\n    const w = U(o);\n    return v || (v = wn(w) ? En(w, e == null ? void 0 : e.$el) : w), v && !_n(v) && (v = v.$el), v || mn(\"Root element not found\"), v;\n  }\n  function H() {\n    var N;\n    const _ = (N = U(i)) != null ? N : {}, { immediate: v, clone: w } = _, x = Ve(_, [\"immediate\", \"clone\"]);\n    return _t(x, (T, R) => {\n      Tn(T) && (x[T] = (Y, ...z) => {\n        const ae = no();\n        return Cn(Y, ae), R(Y, ...z);\n      });\n    }), Dn(\n      r === null ? {} : E,\n      x\n    );\n  }\n  const F = (v) => {\n    v = k(v), a && A.destroy(), a = new p(v, H());\n  };\n  an(\n    () => i,\n    () => {\n      a && _t(H(), (v, w) => {\n        a == null || a.option(v, w);\n      });\n    },\n    { deep: !0 }\n  );\n  const A = {\n    option: (v, w) => a == null ? void 0 : a.option(v, w),\n    destroy: () => {\n      a == null || a.destroy(), a = null;\n    },\n    save: () => a == null ? void 0 : a.save(),\n    toArray: () => a == null ? void 0 : a.toArray(),\n    closest: (...v) => a == null ? void 0 : a.closest(...v)\n  }, L = () => A == null ? void 0 : A.option(\"disabled\", !0), ne = () => A == null ? void 0 : A.option(\"disabled\", !1);\n  return to(() => {\n    l && F();\n  }), eo(A.destroy), fe({ start: F, pause: L, resume: ne }, A);\n}\nconst ct = [\n  \"update\",\n  \"start\",\n  \"add\",\n  \"remove\",\n  \"choose\",\n  \"unchoose\",\n  \"end\",\n  \"sort\",\n  \"filter\",\n  \"clone\",\n  \"move\",\n  \"change\"\n], oo = [\n  \"clone\",\n  \"animation\",\n  \"ghostClass\",\n  \"group\",\n  \"sort\",\n  \"disabled\",\n  \"store\",\n  \"handle\",\n  \"draggable\",\n  \"swapThreshold\",\n  \"invertSwap\",\n  \"invertedSwapThreshold\",\n  \"removeCloneOnHide\",\n  \"direction\",\n  \"chosenClass\",\n  \"dragClass\",\n  \"ignore\",\n  \"filter\",\n  \"preventOnFilter\",\n  \"easing\",\n  \"setData\",\n  \"dropBubble\",\n  \"dragoverBubble\",\n  \"dataIdAttr\",\n  \"delay\",\n  \"delayOnTouchOnly\",\n  \"touchStartThreshold\",\n  \"forceFallback\",\n  \"fallbackClass\",\n  \"fallbackOnBody\",\n  \"fallbackTolerance\",\n  \"fallbackOffset\",\n  \"supportPointer\",\n  \"emptyInsertThreshold\",\n  \"scroll\",\n  \"forceAutoScrollFallback\",\n  \"scrollSensitivity\",\n  \"scrollSpeed\",\n  \"bubbleScroll\",\n  \"modelValue\",\n  \"tag\",\n  \"target\",\n  \"customUpdate\",\n  ...ct.map((t) => `on${t.replace(/^\\S/, (e) => e.toUpperCase())}`)\n], lo = un({\n  name: \"VueDraggable\",\n  model: {\n    prop: \"modelValue\",\n    event: \"update:modelValue\"\n  },\n  props: oo,\n  emits: [\"update:modelValue\", ...ct],\n  setup(t, { slots: e, emit: n, expose: o, attrs: r }) {\n    const i = ct.reduce((d, f) => {\n      const m = `on${f.replace(/^\\S/, (y) => y.toUpperCase())}`;\n      return d[m] = (...y) => n(f, ...y), d;\n    }, {}), a = yt(() => {\n      const y = cn(t), { modelValue: d } = y, f = Ve(y, [\"modelValue\"]), m = Object.entries(f).reduce((b, [E, k]) => {\n        const H = U(k);\n        return H !== void 0 && (b[E] = H), b;\n      }, {});\n      return fe(fe({}, i), bn(fe(fe({}, r), m)));\n    }), l = yt({\n      get: () => t.modelValue,\n      set: (d) => n(\"update:modelValue\", d)\n    }), s = fn(), u = dn(\n      tn(t.target || s, l, a)\n    );\n    return o(u), () => {\n      var d;\n      return hn(t.tag || \"div\", { ref: s }, (d = e == null ? void 0 : e.default) == null ? void 0 : d.call(e, u));\n    };\n  }\n}), Xt = {\n  mounted: \"mounted\",\n  unmounted: \"unmounted\"\n}, it = /* @__PURE__ */ new WeakMap(), so = {\n  [Xt.mounted](t, e) {\n    const n = pn(e.value) ? [e.value] : e.value, [o, r] = n, i = tn(t, o, r);\n    it.set(t, i.destroy);\n  },\n  [Xt.unmounted](t) {\n    var e;\n    (e = it.get(t)) == null || e(), it.delete(t);\n  }\n};\nexport {\n  lo as VueDraggable,\n  tn as useDraggable,\n  so as vDraggable\n};\n","import { ref, computed, watch } from 'vue'\nimport { logger } from '@shared/utils/logger'\n\n/**\n * 折りたたみ可能なアイテムの状態管理を行うコンポーザブル\n */\nexport function useCollapsibleItems() {\n  // 折りたたまれているアイテムのIDセット\n  const collapsedItems = ref<Set<string>>(new Set())\n\n  // LocalStorageキー\n  const STORAGE_KEY = 'zero-code-collapsed-items'\n\n  /**\n   * LocalStorageから折りたたみ状態を復元（初期表示はすべて展開）\n   */\n  const loadCollapsedState = (): void => {\n    try {\n      // 初期表示はすべて展開にするため、LocalStorageからの復元を無効化\n      // const stored = localStorage.getItem(STORAGE_KEY)\n      // if (stored) {\n      //   const parsedIds = JSON.parse(stored) as string[]\n      //   collapsedItems.value = new Set(parsedIds)\n      //   logger.debug('折りたたみ状態を復元:', parsedIds.length, 'アイテム')\n      // }\n      \n      // 初期状態：すべて展開\n      collapsedItems.value = new Set()\n      logger.debug('初期表示：すべて展開状態で開始')\n    } catch (error) {\n      logger.error('初期化に失敗:', error)\n      collapsedItems.value = new Set()\n    }\n  }\n\n  /**\n   * LocalStorageに折りたたみ状態を保存\n   */\n  const saveCollapsedState = (): void => {\n    try {\n      const idsArray = Array.from(collapsedItems.value)\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(idsArray))\n      logger.debug('折りたたみ状態を保存:', idsArray.length, 'アイテム')\n    } catch (error) {\n      logger.error('折りたたみ状態の保存に失敗:', error)\n    }\n  }\n\n  /**\n   * 指定されたアイテムが折りたたまれているかチェック\n   */\n  const isCollapsed = (itemId: string): boolean => {\n    return collapsedItems.value.has(itemId)\n  }\n\n  /**\n   * 指定されたアイテムの折りたたみ状態を切り替え\n   */\n  const toggleCollapse = (itemId: string): void => {\n    const newCollapsedItems = new Set(collapsedItems.value)\n    \n    if (newCollapsedItems.has(itemId)) {\n      newCollapsedItems.delete(itemId)\n      logger.debug(`アイテム展開: ${itemId}`)\n    } else {\n      newCollapsedItems.add(itemId)\n      logger.debug(`アイテム折りたたみ: ${itemId}`)\n    }\n    \n    collapsedItems.value = newCollapsedItems\n  }\n\n  /**\n   * 指定されたアイテムを折りたたみ\n   */\n  const collapseItem = (itemId: string): void => {\n    if (!collapsedItems.value.has(itemId)) {\n      const newCollapsedItems = new Set(collapsedItems.value)\n      newCollapsedItems.add(itemId)\n      collapsedItems.value = newCollapsedItems\n      logger.debug(`アイテム折りたたみ: ${itemId}`)\n    }\n  }\n\n  /**\n   * 指定されたアイテムを展開\n   */\n  const expandItem = (itemId: string): void => {\n    if (collapsedItems.value.has(itemId)) {\n      const newCollapsedItems = new Set(collapsedItems.value)\n      newCollapsedItems.delete(itemId)\n      collapsedItems.value = newCollapsedItems\n      logger.debug(`アイテム展開: ${itemId}`)\n    }\n  }\n\n  /**\n   * すべてのアイテムを展開\n   */\n  const expandAll = (): void => {\n    const count = collapsedItems.value.size\n    collapsedItems.value = new Set()\n    logger.debug(`すべてのアイテムを展開: ${count}アイテム`)\n  }\n\n  /**\n   * すべてのアイテムを折りたたみ\n   */\n  const collapseAll = (itemIds: string[]): void => {\n    collapsedItems.value = new Set(itemIds)\n    logger.debug(`すべてのアイテムを折りたたみ: ${itemIds.length}アイテム`)\n  }\n\n  /**\n   * 折りたたまれているアイテム数を取得\n   */\n  const collapsedCount = computed(() => collapsedItems.value.size)\n\n  /**\n   * 展開されているアイテム数を取得\n   */\n  const getExpandedCount = (totalItems: number): number => {\n    return totalItems - collapsedItems.value.size\n  }\n\n  // 折りたたみ状態の変更を監視してLocalStorageに自動保存\n  watch(\n    () => collapsedItems.value,\n    () => {\n      saveCollapsedState()\n    },\n    { deep: true }\n  )\n\n  // 初期化時にLocalStorageから状態を復元\n  loadCollapsedState()\n\n  return {\n    // 状態\n    collapsedItems: computed(() => collapsedItems.value),\n    collapsedCount,\n\n    // メソッド\n    isCollapsed,\n    toggleCollapse,\n    collapseItem,\n    expandItem,\n    expandAll,\n    collapseAll,\n    getExpandedCount,\n\n    // ユーティリティメソッド\n    loadCollapsedState,\n    saveCollapsedState,\n  }\n}","<template>\n  <div class=\"zero-code-data-display\">\n    <!-- データ表示タブ -->\n    <div class=\"zero-code-data-tabs\">\n      <div class=\"zero-code-tab-buttons\">\n        <button\n          v-for=\"tab in dataTabs\"\n          :key=\"tab\"\n          :class=\"['zero-code-data-tab-button', { active: modelValue === tab }]\"\n          @click=\"$emit('update:modelValue', tab)\"\n        >\n          {{ getTabLabel(tab) }}\n        </button>\n      </div>\n      \n      <!-- 一括操作ボタン（レンダリング結果タブのみ表示） -->\n      <div v-if=\"modelValue === 'rendered'\" class=\"zero-code-collapse-controls\">\n        <span class=\"zero-code-collapse-stats\">\n          {{ collapsedCount }}/{{ pageData.length }} 折りたたみ中\n        </span>\n        <button \n          class=\"zero-code-collapse-all-btn\"\n          :disabled=\"pageData.length === 0\"\n          @click=\"handleCollapseAll\"\n        >\n          すべて折りたたみ\n        </button>\n        <button \n          class=\"zero-code-expand-all-btn\"\n          :disabled=\"collapsedCount === 0\"\n          @click=\"expandAll\"\n        >\n          すべて展開\n        </button>\n      </div>\n    </div>\n\n    <div class=\"zero-code-data-content\">\n      <!-- レンダリング結果タブ -->\n      <div v-if=\"modelValue === 'rendered'\" class=\"zero-code-data-section\">\n        <div v-if=\"Array.isArray(pageData) && pageData.length > 0\" class=\"zero-code-rendered-content\">\n          <!-- 最初のパーツの前に追加ボタン -->\n          <div class=\"zero-code-add-part-button-container\">\n            <button class=\"zero-code-add-part-button\" @click=\"$emit('add-part', 0)\">\n              <span class=\"zero-code-plus-icon\">＋</span>\n              <span class=\"zero-code-button-text\">パーツを追加</span>\n            </button>\n          </div>\n\n          <!-- ドラッグ可能なコンポーネントリスト -->\n          <VueDraggable\n            v-model=\"draggablePageData\"\n            :animation=\"200\"\n            :disabled=\"isTextEditing\"\n            ghost-class=\"ghost\"\n            chosen-class=\"chosen\"\n            drag-class=\"drag\"\n            @start=\"onDragStart\"\n            @end=\"onDragEnd\"\n          >\n            <div\n              v-for=\"(component, index) in pageData\"\n              :key=\"`${component.id || index}`\"\n              class=\"zero-code-rendered-component zero-code-draggable-item\"\n            >\n              <div class=\"zero-code-component-header\">\n                <div class=\"zero-code-component-meta\">\n                  <div class=\"zero-code-drag-handle\">\n                    <span class=\"zero-code-drag-icon\">⠿</span>\n                  </div>\n                  <span class=\"zero-code-component-type\">{{ component.type || 'unknown' }}</span>\n                  <span class=\"zero-code-component-module\">{{ component.module_name || '' }}</span>\n                </div>\n                <div class=\"zero-code-header-actions\">\n                  <button \n                    class=\"zero-code-collapse-btn\"\n                    :title=\"isCollapsed(component.id || `component-${index}`) ? '展開' : '折りたたみ'\"\n                    @click=\"toggleCollapse(component.id || `component-${index}`)\"\n                  >\n                    {{ isCollapsed(component.id || `component-${index}`) ? '＋' : '－' }}\n                  </button>\n                  <button class=\"zero-code-edit-btn\" @click=\"$emit('edit-part', index)\">編集</button>\n                  <button class=\"zero-code-delete-btn\" @click=\"$emit('delete-part', index)\">削除</button>\n                </div>\n              </div>\n              <!-- プレビューエリア（折りたたみアニメーション付き） -->\n              <Transition name=\"collapse\">\n                <div \n                  v-show=\"!isCollapsed(component.id || `component-${index}`)\"\n                  :key=\"`preview-${component.id}`\"\n                  class=\"zero-code-component-preview\" \n                  v-html=\"renderComponentWithNested(component, index)\" \n                />\n              </Transition>\n\n              <!-- 各パーツの後に追加ボタン -->\n              <div class=\"zero-code-add-part-button-container\">\n                <button class=\"zero-code-add-part-button\" @click=\"$emit('add-part', index + 1)\">\n                  <span class=\"zero-code-plus-icon\">＋</span>\n                  <span class=\"zero-code-button-text\">パーツを追加</span>\n                </button>\n              </div>\n            </div>\n          </VueDraggable>\n        </div>\n        <div v-else class=\"zero-code-no-data\">\n          <div class=\"zero-code-empty-state\">\n            <p class=\"zero-code-empty-message\">パーツがありません</p>\n            <div class=\"zero-code-add-part-button-container\">\n              <button class=\"zero-code-add-part-button\" @click=\"$emit('add-part', 0)\">\n                <span class=\"zero-code-plus-icon\">＋</span>\n                <span class=\"zero-code-button-text\">最初のパーツを追加</span>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- データ表示タブ -->\n      <div v-if=\"modelValue === 'page'\" class=\"zero-code-data-section\">\n        <div class=\"zero-code-data-display-section\">\n          <div class=\"zero-code-parts-sub-content\">\n            <div class=\"zero-code-parts-sub-section\">\n              <h4 style=\"margin: 0 0 16px 0; color: #374151; font-size: 1.1rem;\">Pageデータ（リアルタイム更新）</h4>\n              <pre class=\"zero-code-data-display-pre\">{{ formattedPageData }}</pre>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { computed } from 'vue'\n  import { logger } from '@shared/utils/logger'\n  import { VueDraggable } from 'vue-draggable-plus'\n  import { useCollapsibleItems } from '@/composables/useCollapsibleItems'\n  import type { Component, PartSection, DataTabType } from '@types'\n\n  // Props定義\n  interface Props {\n    modelValue: DataTabType\n    pageData: Component[]\n    parts: PartSection[]\n    commonParts?: PartSection[]\n    individualParts?: PartSection[]\n    commonImages?: any[]\n    individualImages?: any[]\n    renderComponentWithNested: (component: Component, index?: number) => string\n    isTextEditing?: boolean\n  }\n\n  const props = defineProps<Props>()\n\n  // Emits定義\n  const _emit = defineEmits<{\n    'update:modelValue': [value: DataTabType]\n    'add-part': [index: number]\n    'edit-part': [index: number]\n    'delete-part': [index: number]\n    'reorder-parts': [newOrder: Component[]]\n  }>()\n\n  // ドラッグ可能なデータ\n  const draggablePageData = computed({\n    get: () => props.pageData,\n    set: (newOrder: Component[]) => {\n      _emit('reorder-parts', newOrder)\n    },\n  })\n\n  // ドラッグイベントハンドラ\n  const onDragStart = () => {\n    logger.debug('ドラッグ開始')\n  }\n\n  const onDragEnd = () => {\n    logger.debug('ドラッグ終了')\n  }\n\n  // 折りたたみ状態の管理（コンポーザブル使用）\n  const { isCollapsed, toggleCollapse, collapsedCount, expandAll, collapseAll } = useCollapsibleItems()\n\n  // すべてのパーツを折りたたむ\n  const handleCollapseAll = (): void => {\n    const componentIds = props.pageData.map((component, index) => \n      component.id || `component-${index}`\n    )\n    collapseAll(componentIds)\n  }\n\n  // データタブの一覧\n  const dataTabs = ['rendered', 'page'] as const\n\n  // タブのラベルを取得\n  const getTabLabel = (tab: DataTabType): string => {\n    const labels: Record<DataTabType, string> = {\n      rendered: 'レンダリング結果',\n      source: 'HTMLソース',\n      page: 'データ表示',\n    }\n    return labels[tab]\n  }\n\n  // フォーマット済みデータ\n  const formattedPageData = computed(() => {\n    return formatToReadableJson(props.pageData)\n  })\n\n  // 読みやすいJSON形式に変換\n  const formatToReadableJson = (data: unknown): string => {\n    const formatValue = (obj: unknown, depth: number = 0): string => {\n      const indent = '  '.repeat(depth)\n      const nextIndent = '  '.repeat(depth + 1)\n\n      if (Array.isArray(obj)) {\n        if (obj.length === 0) return '[]'\n        const items = obj.map(item => nextIndent + formatValue(item, depth + 1)).join(',\\n')\n        return `[\\n${items}\\n${indent}]`\n      }\n\n      if (typeof obj === 'object' && obj !== null) {\n        const entries = Object.entries(obj as Record<string, unknown>)\n        if (entries.length === 0) return '{}'\n\n        const items = entries.map(([key, value]) => {\n          let formattedValue: string\n\n          if (typeof value === 'string') {\n            // 文字列の場合はエスケープ文字を実際の文字に変換してから表示\n            const cleanString = value\n              .replace(/\\\\n/g, '\\n')\n              .replace(/\\\\t/g, '\\t')\n              .replace(/\\\\\"/g, '\"')\n              .replace(/\\\\'/g, \"'\")\n              .replace(/\\\\\\\\/g, '\\\\')\n\n            // 改行が含まれる場合はテンプレートリテラル風に表示\n            if (cleanString.includes('\\n')) {\n              const lines = cleanString.split('\\n')\n              const formattedLines = lines.map((line, index) => {\n                if (index === 0) return `\\`${line}`\n                if (index === lines.length - 1) return `${nextIndent}${line}\\``\n                return `${nextIndent}${line}`\n              }).join('\\n')\n              formattedValue = formattedLines\n            } else {\n              formattedValue = `\"${cleanString}\"`\n            }\n          } else {\n            formattedValue = formatValue(value, depth + 1)\n          }\n\n          return `${nextIndent}\"${key}\": ${formattedValue}`\n        }).join(',\\n')\n\n        return `{\\n${items}\\n${indent}}`\n      }\n\n      if (typeof obj === 'string') {\n        return `\"${obj.replace(/\"/g, '\\\\\"')}\"`\n      }\n\n      return JSON.stringify(obj)\n    }\n\n    return formatValue(data)\n  }\n</script>\n","<template>\n  <Teleport :to=\"safeModalContainer\">\n    <div class=\"zero-code-modal-overlay\" @click=\"$emit('close')\">\n      <div class=\"zero-code-modal-content\" @click.stop>\n        <div class=\"zero-code-modal-header\">\n          <h4>\n            {{ props.isNested ? 'ネストパーツを選択' : 'パーツを選択' }}\n          </h4>\n          <button class=\"zero-code-close-button\" @click=\"$emit('close')\">✖️</button>\n        </div>\n\n        <!-- パーツタイプタブ -->\n        <div class=\"zero-code-data-tabs\">\n          <div class=\"zero-code-tab-buttons\">\n            <button\n              v-for=\"tab in partsTabs\"\n              :key=\"tab\"\n              :class=\"['zero-code-data-tab-button', { active: activePartsTab === tab }]\"\n              @click=\"activePartsTab = tab\"\n            >\n              {{ getPartsTabLabel(tab) }}\n            </button>\n          </div>\n        </div>\n\n        <div class=\"zero-code-modal-body\">\n          <!-- 共通パーツタブ -->\n          <div v-if=\"activePartsTab === 'common'\" class=\"zero-code-parts-section\">\n            <div v-if=\"commonParts.length > 0\" class=\"zero-code-parts-list\">\n              <div\n                v-for=\"(partSection, sectionIndex) in commonParts\"\n                :key=\"sectionIndex\"\n                class=\"zero-code-part-section\"\n              >\n                <h5 class=\"zero-code-part-section-title\">\n                  {{ partSection.type }}\n                </h5>\n                <div class=\"zero-code-modules-grid\">\n                  <div\n                    v-for=\"(module, moduleIndex) in partSection.module\"\n                    :key=\"moduleIndex\"\n                    class=\"zero-code-module-card\"\n                    @click=\"selectPart(partSection.type, module)\"\n                  >\n                    <div class=\"zero-code-module-title\">\n                      {{ module.title }}\n                    </div>\n                    <!-- eslint-disable-next-line vue/no-v-html -->\n                    <div class=\"zero-code-module-preview\" v-html=\"renderPartPreview(module.body)\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div v-else class=\"zero-code-empty-state\">\n              <p>共通パーツが登録されていません。</p>\n            </div>\n          </div>\n\n          <!-- 個別パーツタブ -->\n          <div v-if=\"activePartsTab === 'individual'\" class=\"zero-code-parts-section\">\n            <div v-if=\"individualParts.length > 0\" class=\"zero-code-parts-list\">\n              <div\n                v-for=\"(partSection, sectionIndex) in individualParts\"\n                :key=\"sectionIndex\"\n                class=\"zero-code-part-section\"\n              >\n                <h5 class=\"zero-code-part-section-title\">\n                  {{ partSection.type }}\n                </h5>\n                <div class=\"zero-code-modules-grid\">\n                  <div\n                    v-for=\"(module, moduleIndex) in partSection.module\"\n                    :key=\"moduleIndex\"\n                    class=\"zero-code-module-card\"\n                    @click=\"selectPart(partSection.type, module)\"\n                  >\n                    <div class=\"zero-code-module-title\">\n                      {{ module.title }}\n                    </div>\n                    <!-- eslint-disable-next-line vue/no-v-html -->\n                    <div class=\"zero-code-module-preview\" v-html=\"renderPartPreview(module.body)\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div v-else class=\"zero-code-empty-state\">\n              <p>個別パーツが登録されていません。</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </Teleport>\n</template>\n\n<script setup lang=\"ts\">\n  import { ref, computed } from 'vue'\n  import type { PartSection, Part } from '@types'\n\n  type PartsTab = 'common' | 'individual'\n\n  // Props定義\n  interface Props {\n    parts: PartSection[]\n    isNested?: boolean\n    modalContainer?: string\n  }\n\n  const props = withDefaults(defineProps<Props>(), {\n    isNested: false,\n    modalContainer: 'body'\n  })\n\n  // モーダルコンテナの有効性をチェック\n  const isModalContainerValid = computed(() => {\n    if (!props.modalContainer || props.modalContainer === 'body') {\n      return true // bodyは常に有効\n    }\n    \n    // DOMの存在確認は実際にTeleportが実行される時に行う\n    return typeof document !== 'undefined'\n  })\n\n  // 安全なモーダルコンテナを取得（フォールバック付き）\n  const safeModalContainer = computed(() => {\n    if (!props.modalContainer || props.modalContainer === 'body') {\n      return 'body'\n    }\n    \n    // DOM要素の存在確認（client-sideでのみ）\n    if (typeof document !== 'undefined') {\n      const container = document.querySelector(props.modalContainer)\n      return container ? props.modalContainer : 'body'\n    }\n    \n    return 'body'\n  })\n\n  // リアクティブデータ\n  const activePartsTab = ref<PartsTab>('common')\n\n  // タブの一覧\n  const partsTabs: PartsTab[] = ['common', 'individual']\n\n  // タブのラベルを取得\n  const getPartsTabLabel = (tab: PartsTab): string => {\n    const labels: Record<PartsTab, string> = {\n      common: '共通パーツ',\n      individual: '個別パーツ',\n    }\n    return labels[tab]\n  }\n\n  // 共通パーツを取得（categoryがcommonまたは未設定のもの）\n  const commonParts = computed(() => {\n    return props.parts.map(section => ({\n      ...section,\n      module: section.module.filter(part => {\n        const extendedPart = part as any\n        return !extendedPart.category || extendedPart.category === 'common'\n      })\n    })).filter(section => section.module.length > 0)\n  })\n\n  // 個別パーツを取得（categoryがindividualのもの）\n  const individualParts = computed(() => {\n    return props.parts.map(section => ({\n      ...section,\n      module: section.module.filter(part => {\n        const extendedPart = part as any\n        return extendedPart.category === 'individual'\n      })\n    })).filter(section => section.module.length > 0)\n  })\n\n  // Emits定義\n  const emit = defineEmits<{\n    close: []\n    'select-part': [type: string, module: Part]\n  }>()\n\n  // パーツを選択\n  const selectPart = (type: string, module: Part): void => {\n    emit('select-part', type, module)\n  }\n\n  // パーツのプレビューをレンダリング（実際のコンテンツに近い形で）\n  const renderPartPreview = (body: string): string => {\n    if (!body) return ''\n\n    try {\n      let preview = body\n\n      // 各種記法をサンプルデータで置き換え\n\n      // 1. @slot記法は廃止されたため、削除処理のみ\n      preview = preview.replace(/@slot\\(\\$[^)]+\\)@/g, '')\n\n        // 1. テキスト記法 {$param:default} をデフォルト値優先で置き換え\n      preview = preview.replace(/\\{\\$([^:]+):([^}]*)\\}/g, (match, paramName, defaultValue) => {\n        // デフォルト値が指定されている場合は優先、なければサンプル値を使用\n        if (defaultValue && defaultValue.trim()) {\n          return defaultValue\n        }\n        const sampleValues: Record<string, string> = {\n          title: 'サンプルタイトル',\n          text: 'サンプルテキストです。',\n          image: '/sample-image.jpg',\n          link: '#',\n          url: 'https://example.com',\n          alt: 'サンプル画像',\n          content: 'サンプルコンテンツ',\n          description: 'サンプル説明文です。',\n        }\n\n        return sampleValues[paramName] || `[${paramName}]`\n      })\n\n      // 3. 選択記法 ($param:option1|option2|option3) を最初のオプションで置き換え\n      preview = preview.replace(/\\(\\$([^:]+):([^)]+)\\)/g, (match, paramName, options) => {\n        const optionList = options.split('|').filter((opt: string) => opt.trim())\n        return optionList[0] || ''\n      })\n\n      // 4. 条件付き記法 ($param?:value) をデフォルト値で置き換え\n      preview = preview.replace(/\\(\\$([^:?]+)\\?:([^)]*)\\)/g, (match, paramName, value) => {\n        return value || ''\n      })\n\n      // 5. z-for記法をサンプルアイテムで置き換え\n      preview = preview.replace(\n        /z-for-wrapper=\"[^\"]*\"/g,\n        ''\n      )\n      preview = preview.replace(\n        /z-for=\"[^\"]*\"/g,\n        ''\n      )\n      preview = preview.replace(\n        /z-slot=\"[^\"]*\"/g,\n        ''\n      )\n\n      // 6. 残った単純なパラメータ記法を処理\n      preview = preview.replace(/\\$(\\w+)/g, (match, paramName) => {\n        const sampleValues: Record<string, string> = {\n          title: 'タイトル',\n          text: 'テキスト',\n          content: 'コンテンツ',\n        }\n        return sampleValues[paramName] || `[${paramName}]`\n      })\n\n      return preview\n    } catch (error) {\n      return body // エラーの場合は元のHTMLを返す\n    }\n  }\n</script>\n\n","<template>\n  <div class=\"zero-code-array-field\">\n    <div class=\"zero-code-array-header\">\n      <h5>{{ label }}</h5>\n      <button class=\"zero-code-btn zero-code-add-array-item\" @click=\"$emit('add')\">+ 追加</button>\n    </div>\n\n    <!-- 空配列の場合のメッセージと追加ボタン -->\n    <div v-if=\"items.length === 0\" class=\"zero-code-empty-array-message\">\n      <div class=\"zero-code-empty-message-content\">\n        <p class=\"zero-code-empty-text\">{{ label }}はまだ追加されていません</p>\n        <button class=\"zero-code-btn zero-code-add-array-item-empty\" @click=\"$emit('add')\">\n          <span class=\"zero-code-plus-icon\">＋</span>\n          <span class=\"zero-code-button-text\">最初の{{ label }}を追加</span>\n        </button>\n      </div>\n    </div>\n\n    <div\n      v-for=\"(item, index) in items\"\n      :key=\"(item as any)?.id || index\"\n      class=\"zero-code-array-item\"\n      draggable=\"true\"\n      @dragstart=\"handleDragStart($event, index)\"\n      @dragover=\"handleDragOver\"\n      @drop=\"handleDrop($event, index)\"\n      @dragend=\"handleDragEnd\"\n    >\n      <div class=\"zero-code-array-item-header\">\n        <div class=\"zero-code-component-meta\">\n          <span class=\"zero-code-drag-handle\">⠿</span>\n          <h6>{{ itemLabel }} {{ index + 1 }}</h6>\n        </div>\n        <button class=\"zero-code-btn zero-code-remove-array-item\" @click=\"$emit('remove', index)\">削除</button>\n      </div>\n\n      <div class=\"zero-code-array-item-fields\">\n        <template v-for=\"(field, fieldKey) in fields\" :key=\"fieldKey\">\n          <div class=\"zero-code-field-group\">\n            <label :for=\"`${componentId}_${arrayKey}_${index}_${fieldKey}`\">\n              {{ field.label }}:\n            </label>\n\n            <!-- ラジオボタン（選択記法） -->\n            <div\n              v-if=\"field.type === 'radio' && field.options && field.options.length > 0\"\n              class=\"zero-code-radio-group\"\n            >\n              <div v-for=\"option in field.options\" :key=\"option\" class=\"zero-code-radio-item\">\n                <input\n                  :id=\"`${componentId}_${arrayKey}_${index}_${fieldKey}_${option}`\"\n                  :value=\"option\"\n                  type=\"radio\"\n                  :name=\"`${componentId}_${arrayKey}_${index}_${fieldKey}`\"\n                  class=\"zero-code-radio-input\"\n                  :checked=\"\n                    (item as any)[fieldKey] === option ||\n                      (option === '指定なし' && !(item as any)[fieldKey])\n                  \"\n                  @change=\"updateValue(index, fieldKey, option === '指定なし' ? '' : option)\"\n                >\n                <label\n                  :for=\"`${componentId}_${arrayKey}_${index}_${fieldKey}_${option}`\"\n                  class=\"zero-code-radio-label\"\n                >\n                  {{ option }}\n                </label>\n              </div>\n            </div>\n\n            <!-- チェックボックス（条件付き記法） -->\n            <div\n              v-if=\"field.type === 'checkbox' && field.options && field.options.length > 0\"\n              class=\"zero-code-checkbox-group\"\n            >\n              <div v-for=\"option in field.options\" :key=\"option\" class=\"zero-code-checkbox-item\">\n                <input\n                  :id=\"`${componentId}_${arrayKey}_${index}_${fieldKey}_${option}`\"\n                  :checked=\"isArrayItemCheckboxChecked(item, fieldKey, option)\"\n                  type=\"checkbox\"\n                  class=\"zero-code-checkbox-input\"\n                  @change=\"\n                    (e: Event) => {\n                      const target = e.target as HTMLInputElement\n                      updateArrayItemCheckboxValue(index, fieldKey, option, target.checked)\n                    }\n                  \"\n                >\n                <label\n                  :for=\"`${componentId}_${arrayKey}_${index}_${fieldKey}_${option}`\"\n                  class=\"zero-code-checkbox-label\"\n                >\n                  {{ option }}\n                </label>\n              </div>\n            </div>\n\n            <!-- セレクトフィールド（通常のselect用） -->\n            <select\n              v-else-if=\"field.type === 'select'\"\n              :id=\"`${componentId}_${arrayKey}_${index}_${fieldKey}`\"\n              :value=\"(item as any)[fieldKey] as string\"\n              class=\"zero-code-field-input zero-code-select-input\"\n              @input=\"\n                (e: Event) => {\n                  const target = e.target as HTMLSelectElement\n                  updateValue(index, fieldKey, target.value)\n                }\n              \"\n            >\n              <option v-for=\"option in field.options\" :key=\"option\" :value=\"option\">\n                {{ option }}\n              </option>\n            </select>\n\n            <!-- セレクトフィールド（複数選択用） -->\n            <select\n              v-else-if=\"field.type === 'select-multiple'\"\n              :id=\"`${componentId}_${arrayKey}_${index}_${fieldKey}`\"\n              :value=\"(item as any)[fieldKey] || field.defaultValue\"\n              multiple\n              class=\"zero-code-field-input zero-code-select-multiple\"\n              @change=\"\n                (e: Event) => {\n                  const target = e.target as HTMLSelectElement\n                  const selectedValues = Array.from(target.selectedOptions).map(\n                    option => option.value\n                  )\n                  updateValue(index, fieldKey, selectedValues)\n                }\n              \"\n            >\n              <option\n                v-for=\"option in field.options\"\n                :key=\"option\"\n                :value=\"option\"\n                :selected=\"\n                  Array.isArray((item as any)[fieldKey]) && (item as any)[fieldKey].includes(option)\n                \"\n              >\n                {{ option }}\n              </option>\n            </select>\n\n            <!-- テキストエリア -->\n            <textarea\n              v-else-if=\"field.type === 'textarea'\"\n              :id=\"`${componentId}_${arrayKey}_${index}_${fieldKey}`\"\n              :value=\"(item as any)[fieldKey] as string\"\n              class=\"zero-code-field-input zero-code-field-textarea\"\n              @input=\"\n                (e: Event) => {\n                  const target = e.target as HTMLTextAreaElement\n                  updateValue(index, fieldKey, target.value)\n                }\n              \"\n            />\n\n            <!-- デフォルトの入力フィールド -->\n            <input\n              v-else-if=\"field.type === 'text' || field.type === 'number'\"\n              :id=\"`${componentId}_${arrayKey}_${index}_${fieldKey}`\"\n              :value=\"(item as any)[fieldKey] as string\"\n              :type=\"field.type === 'text' ? 'text' : field.type\"\n              class=\"zero-code-field-input\"\n              @input=\"\n                (e: Event) => {\n                  const target = e.target as HTMLInputElement\n                  updateValue(index, fieldKey, target.value)\n                }\n              \"\n            >\n          </div>\n        </template>\n\n        <!-- ネストした配列フィールドの表示 -->\n        <template v-for=\"(value, key) in item\" :key=\"`nested_${key}`\">\n          <div v-if=\"Array.isArray(value) && key !== 'id' && shouldShowNestedArray(key, value)\" class=\"zero-code-nested-array-field\">\n            <h6 class=\"zero-code-nested-array-label\">{{ key }} (ネスト配列)</h6>\n            <div class=\"zero-code-nested-array-info\">\n              <span class=\"zero-code-array-count\">{{ value.length }}個の要素</span>\n              <button \n                class=\"zero-code-btn zero-code-edit-nested-array-btn\" \n                title=\"ネスト配列を編集\"\n                @click=\"$emit('edit-nested', index, key)\"\n              >\n                編集\n              </button>\n            </div>\n          </div>\n        </template>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  interface Field {\n    label: string\n    type: 'text' | 'select' | 'textarea' | 'number' | 'radio' | 'checkbox' | 'select-multiple'\n    options?: string[]\n    defaultValue?: any\n  }\n\n  interface Props {\n    componentId: string\n    arrayKey: string\n    items: Record<string, unknown>[]\n    fields: Record<string, Field>\n    label: string\n    itemLabel?: string\n  }\n\n  const _props = defineProps<Props>()\n\n  const emit = defineEmits<{\n    (e: 'add'): void\n    (e: 'remove', index: number): void\n    (e: 'update', index: number, key: string, value: string | number | string[]): void\n    (e: 'reorder', fromIndex: number, toIndex: number): void\n    (e: 'edit-nested', index: number, key: string): void\n  }>()\n\n  const updateValue = (index: number, key: string, value: string | number | string[]): void => {\n    emit('update', index, key, value)\n  }\n\n  // 配列アイテムのチェックボックスがチェックされているかどうか\n  const isArrayItemCheckboxChecked = (item: any, fieldKey: string, option: string): boolean => {\n    const fieldValue = item[fieldKey]\n    return Array.isArray(fieldValue) && fieldValue.includes(option)\n  }\n\n  // 配列アイテムのチェックボックス値を更新\n  const updateArrayItemCheckboxValue = (\n    index: number,\n    fieldKey: string,\n    option: string,\n    checked: boolean\n  ): void => {\n    const currentItem = _props.items[index] as any\n    let currentValue = currentItem[fieldKey] || []\n\n    if (!Array.isArray(currentValue)) {\n      currentValue = []\n    }\n\n    if (checked) {\n      if (!currentValue.includes(option)) {\n        currentValue = [...currentValue, option]\n      }\n    } else {\n      currentValue = currentValue.filter((item: string) => item !== option)\n    }\n\n    emit('update', index, fieldKey, currentValue as string[])\n  }\n\n  // ドラッグ&ドロップ関連の状態\n  let draggedIndex: number | null = null\n\n  // ドラッグ開始\n  const handleDragStart = (e: DragEvent, index: number): void => {\n    draggedIndex = index\n    if (e.dataTransfer) {\n      e.dataTransfer.effectAllowed = 'move'\n      e.dataTransfer.setData('text/plain', index.toString())\n    }\n\n    // 視覚的フィードバック\n    const target = e.target as HTMLElement\n    target.style.opacity = '0.5'\n  }\n\n  // ドラッグオーバー\n  const handleDragOver = (e: DragEvent): void => {\n    e.preventDefault()\n    if (e.dataTransfer) {\n      e.dataTransfer.dropEffect = 'move'\n    }\n  }\n\n  // ドロップ\n  const handleDrop = (e: DragEvent, targetIndex: number): void => {\n    e.preventDefault()\n\n    if (draggedIndex !== null && draggedIndex !== targetIndex) {\n      emit('reorder', draggedIndex, targetIndex)\n    }\n\n    draggedIndex = null\n  }\n\n  // ドラッグ終了\n  const handleDragEnd = (e: DragEvent): void => {\n    // 視覚的フィードバックをリセット\n    const target = e.target as HTMLElement\n    target.style.opacity = '1'\n    draggedIndex = null\n  }\n\n  // ネストした配列を表示するかどうかを判定\n  const shouldShowNestedArray = (key: string, value: unknown[]): boolean => {\n    // 基本的な条件チェック\n    if (!Array.isArray(value) || key === 'id') return false\n    \n    // システム内部フィールドは除外\n    const systemFields = ['nested_parts', 'content']\n    if (systemFields.includes(key)) return false\n    \n    // 少なくとも1つの要素があり、その要素がオブジェクトの場合にネスト配列として認識\n    return value.length > 0 && typeof value[0] === 'object' && value[0] !== null\n  }\n</script>\n\n\n","/**\n * エラーハンドリングユーティリティ\n * 統一されたエラー処理とユーザーフレンドリーなエラーメッセージ\n */\n\nimport { logger } from './logger'\n\nexport enum ErrorType {\n  VALIDATION = 'VALIDATION',\n  NETWORK = 'NETWORK',\n  COMPONENT = 'COMPONENT',\n  TEMPLATE = 'TEMPLATE',\n  FILE = 'FILE',\n  PERMISSION = 'PERMISSION',\n  IMAGE_LOAD_FAILED = 'IMAGE_LOAD_FAILED',\n  UNKNOWN = 'UNKNOWN',\n  // 後方互換性のための追加値（異なる値を使用）\n  NETWORK_ERROR = 'NETWORK_ERROR',\n  VALIDATION_ERROR = 'VALIDATION_ERROR',\n  PERMISSION_ERROR = 'PERMISSION_ERROR',\n  COMPONENT_ERROR = 'COMPONENT_ERROR',\n  TEMPLATE_PARSE_ERROR = 'TEMPLATE_PARSE_ERROR',\n  UNKNOWN_ERROR = 'UNKNOWN_ERROR',\n}\n\nexport interface EditorErrorData {\n  type: ErrorType\n  message: string\n  details?: Record<string, unknown>\n  componentId?: string\n  action?: string\n  timestamp: number\n}\n\nexport class EditorErrorHandler {\n  private errorHistory: EditorErrorData[] = []\n  private maxHistorySize = 100\n\n  /**\n   * エラーを記録・処理する\n   */\n  handleError(\n    type: ErrorType,\n    message: string,\n    details?: Record<string, unknown>,\n    componentId?: string,\n    action?: string\n  ): EditorErrorData {\n    const error: EditorErrorData = {\n      type,\n      message,\n      details,\n      componentId,\n      action,\n      timestamp: Date.now(),\n    }\n\n    // エラー履歴に追加\n    this.errorHistory.unshift(error)\n    if (this.errorHistory.length > this.maxHistorySize) {\n      this.errorHistory = this.errorHistory.slice(0, this.maxHistorySize)\n    }\n\n    // ログレベルを決定\n    const isUserFacing = type === ErrorType.VALIDATION || type === ErrorType.PERMISSION\n\n    if (isUserFacing) {\n      logger.warn(`[${type}] ${message}`, details)\n    } else {\n      logger.error(`[${type}] ${message}`, details)\n    }\n\n    return error\n  }\n\n  /**\n   * コンポーネント関連エラー\n   */\n  componentError(message: string, componentId?: string, details?: Record<string, unknown>): EditorErrorData {\n    return this.handleError(\n      ErrorType.COMPONENT,\n      message,\n      details,\n      componentId,\n      'component_operation'\n    )\n  }\n\n  /**\n   * テンプレート関連エラー\n   */\n  templateError(message: string, details?: Record<string, unknown>): EditorErrorData {\n    return this.handleError(ErrorType.TEMPLATE, message, details, undefined, 'template_processing')\n  }\n\n  /**\n   * バリデーションエラー\n   */\n  validationError(message: string, details?: Record<string, unknown>): EditorErrorData {\n    return this.handleError(ErrorType.VALIDATION, message, details, undefined, 'validation')\n  }\n\n  /**\n   * ファイル関連エラー\n   */\n  fileError(message: string, details?: Record<string, unknown>): EditorErrorData {\n    return this.handleError(ErrorType.FILE, message, details, undefined, 'file_operation')\n  }\n\n  /**\n   * ネットワークエラー\n   */\n  networkError(message: string, details?: Record<string, unknown>): EditorErrorData {\n    return this.handleError(ErrorType.NETWORK, message, details, undefined, 'network_request')\n  }\n\n  /**\n   * 権限エラー\n   */\n  permissionError(message: string, details?: Record<string, unknown>): EditorErrorData {\n    return this.handleError(ErrorType.PERMISSION, message, details, undefined, 'permission_check')\n  }\n\n  /**\n   * 未知のエラー\n   */\n  unknownError(message: string, details?: Record<string, unknown>): EditorErrorData {\n    return this.handleError(ErrorType.UNKNOWN, message, details, undefined, 'unknown')\n  }\n\n  /**\n   * エラー履歴を取得\n   */\n  getErrorHistory(): EditorErrorData[] {\n    return [...this.errorHistory]\n  }\n\n  /**\n   * 特定の種類のエラーを取得\n   */\n  getErrorsByType(type: ErrorType): EditorErrorData[] {\n    return this.errorHistory.filter(error => error.type === type)\n  }\n\n  /**\n   * エラー履歴をクリア\n   */\n  clearHistory(): void {\n    this.errorHistory = []\n    logger.debug('エラー履歴をクリアしました')\n  }\n\n  /**\n   * エラー統計を取得\n   */\n  getErrorStats(): Record<ErrorType, number> {\n    const stats = Object.values(ErrorType).reduce(\n      (acc, type) => {\n        acc[type] = 0\n        return acc\n      },\n      {} as Record<ErrorType, number>\n    )\n\n    this.errorHistory.forEach(error => {\n      stats[error.type]++\n    })\n\n    return stats\n  }\n}\n\n/**\n * 安全な関数実行ラッパー\n */\nexport function safeExecute<T>(\n  fn: () => T,\n  errorHandler: EditorErrorHandler,\n  errorMessage: string,\n  errorType: ErrorType = ErrorType.UNKNOWN\n): T | null {\n  try {\n    return fn()\n  } catch (error) {\n    const errorDetails = error instanceof Error ? { stack: error.stack, name: error.name } : { error: String(error) }\n    errorHandler.handleError(errorType, errorMessage, errorDetails)\n    return null\n  }\n}\n\n/**\n * 非同期関数の安全な実行ラッパー\n */\nexport async function safeExecuteAsync<T>(\n  fn: () => Promise<T>,\n  errorHandler: EditorErrorHandler,\n  errorMessage: string,\n  errorType: ErrorType = ErrorType.UNKNOWN\n): Promise<T | null> {\n  try {\n    return await fn()\n  } catch (error) {\n    const errorDetails = error instanceof Error ? { stack: error.stack, name: error.name } : { error: String(error) }\n    errorHandler.handleError(errorType, errorMessage, errorDetails)\n    return null\n  }\n}\n\n/**\n * 重要な処理のリトライラッパー\n */\nexport async function retryOperation<T>(\n  fn: () => Promise<T>,\n  maxRetries: number = 3,\n  delay: number = 1000,\n  errorHandler?: EditorErrorHandler\n): Promise<T | null> {\n  let lastError: any\n\n  for (let attempt = 1; attempt <= maxRetries; attempt++) {\n    try {\n      return await fn()\n    } catch (error) {\n      lastError = error\n\n      if (attempt < maxRetries) {\n        logger.warn(`操作が失敗しました。リトライします... (${attempt}/${maxRetries})`, error)\n        await new Promise(resolve => setTimeout(resolve, delay * attempt))\n      }\n    }\n  }\n\n  if (errorHandler) {\n    errorHandler.unknownError(`操作が${maxRetries}回失敗しました`, lastError)\n  }\n\n  return null\n}\n\n// シングルトンインスタンス\nexport const errorHandler = new EditorErrorHandler()\n\nexport default errorHandler\n","/**\n * エディター設定定数\n * 全体で使用される定数値を一元管理\n */\n\n// システム内部フィールド（編集パネルから除外）\nexport const SYSTEM_FIELDS = ['content', 'nested_parts'] as const\n\n// z-forシステムフィールド（編集パネルから除外）\nexport const Z_FOR_SYSTEM_FIELDS = [\n  '_isZForItem',\n  '_parentComponentId',\n  '_arrayName',\n  '_arrayIndex',\n  '_zForTemplate',\n] as const\n\n// エディター制限値\nexport const EDITOR_LIMITS = {\n  MAX_NESTED_DEPTH: 10,\n  MAX_ARRAY_ITEMS: 100,\n  MAX_COMPONENT_NAME_LENGTH: 50,\n  MAX_TEMPLATE_SIZE: 10000,\n} as const\n\n// UI設定\nexport const UI_CONFIG = {\n  DRAG_HANDLE_TIMEOUT: 300,\n  MODAL_ANIMATION_DURATION: 200,\n  EDITOR_SIDEBAR_WIDTH: 400,\n  NESTED_INDENT_SIZE: 16,\n} as const\n\n// デバッグ設定\nexport const DEBUG_CONFIG = {\n  ENABLE_PERFORMANCE_LOGGING: false,\n  ENABLE_TEMPLATE_LOGGING: false,\n  ENABLE_Z_FOR_LOGGING: true,\n  LOG_LEVEL: 'info' as 'debug' | 'info' | 'warn' | 'error',\n} as const\n\n// テンプレート記法パターン\nexport const TEMPLATE_PATTERNS = {\n  TEXT_REPLACEMENT: /\\{\\$([^:]+):(.*?)\\}/g,\n  SELECTION_SYNTAX: /\\(\\$([^:?]+):(.*?)\\)/g,\n  CONDITIONAL_SYNTAX: /\\(\\$([^:?]+)\\?:(.*?)\\)/g,\n  Z_FOR_PATTERN: (arrayName: string) => new RegExp(`z-for=\"${arrayName}\"`),\n  Z_FOR_ELEMENT: /<(\\w+)([^>]*z-for=\"([^\"]*)\"[^>]*)>([\\s\\S]*?)<\\/\\1>/g,\n  Z_FOR_ELEMENT_START: (arrayName: string) => new RegExp(`<(\\\\w+)[^>]*z-for=\"${arrayName}\"[^>]*>`),\n  Z_FOR_SELF_CLOSING: /<(\\w+)([^>]*z-for=\"([^\"]*)\"[^>]*)\\s*\\/>/g,\n} as const\n\n// エラーコード\nexport const ERROR_CODES = {\n  COMPONENT_NOT_FOUND: 'COMPONENT_NOT_FOUND',\n  TEMPLATE_NOT_FOUND: 'TEMPLATE_NOT_FOUND',\n  INVALID_ARRAY_INDEX: 'INVALID_ARRAY_INDEX',\n  Z_FOR_ITEM_NOT_FOUND: 'Z_FOR_ITEM_NOT_FOUND',\n  TEMPLATE_PARSE_ERROR: 'TEMPLATE_PARSE_ERROR',\n  DRAG_DROP_ERROR: 'DRAG_DROP_ERROR',\n} as const\n\n// 型定義\nexport type SystemField = (typeof SYSTEM_FIELDS)[number]\nexport type ZForSystemField = (typeof Z_FOR_SYSTEM_FIELDS)[number]\nexport type ErrorCode = (typeof ERROR_CODES)[keyof typeof ERROR_CODES]\n","import type {\n  Component,\n  PartSection,\n  ArrayItem,\n  ComponentProps,\n  FieldInfo,\n  ExtendedFieldInfo,\n} from '@types'\nimport { logger } from '@shared/utils/logger'\nimport { errorHandler, safeExecute, ErrorType } from '@shared/utils/errorHandler'\nimport { SYSTEM_FIELDS, Z_FOR_SYSTEM_FIELDS } from '@/config/editorConfig'\n\ninterface Module {\n  title: string\n  body: string\n}\n\ninterface ComponentUtils {\n  findComponentByPath: (data: Component[], path: number[]) => Component | null\n  getParentContainer: (data: Component[], path: number[]) => Component[]\n  parseHierarchyPath: (pathString: string) => number[]\n  stringifyHierarchyPath: (path: number[]) => string\n  findComponentRecursively: (\n    data: Component[],\n    componentId: string,\n    currentPath?: number[]\n  ) => Component | null\n  getTemplate: (type: string, moduleName: string) => string\n  generateUniqueId: () => string\n  getFieldInfo: (component: Component) => FieldInfo[]\n  isTemplateField: (component: Component, key: string) => boolean\n  shouldExcludeField: (key: string, value: unknown) => boolean\n  shouldShowBasicField: (key: string, value: unknown, component: Component) => boolean\n  shouldShowArrayField: (key: string, value: unknown, component: Component) => boolean\n  shouldShowArrayItemField: (\n    itemKey: string,\n    itemValue: unknown,\n    component: Component,\n    arrayKey?: string,\n    _item?: unknown\n  ) => boolean\n  getInputType: (key: string) => string\n  updateCheckboxValue: (\n    component: Component,\n    propKey: string,\n    option: string,\n    checked: boolean\n  ) => void\n  isCheckboxChecked: (component: Component, propKey: string, option: string) => boolean\n  addArrayItem: (component: Component, arrayKey: string) => void\n  removeArrayItem: (component: Component, arrayKey: string, index: number) => void\n  createNewComponent: (partType: string, module: Module) => Component\n  createArrayItem: (forContent: string) => ArrayItem\n  getArrayItemFieldInfo: (component: Component, arrayKey: string) => ExtendedFieldInfo[]\n}\n\nexport function useComponentUtils(parts: PartSection[]): ComponentUtils {\n  // 階層パスでコンポーネントを検索\n  const findComponentByPath = (data: Component[], path: number[]): Component | null => {\n    if (path.length === 0) return null\n    if (path[0] >= data.length) return null\n\n    let current = data[path[0]]\n    for (let i = 1; i < path.length; i++) {\n      if (!current.nested_parts || !Array.isArray(current.nested_parts)) {\n        return null\n      }\n      if (path[i] >= current.nested_parts.length) {\n        return null\n      }\n      current = current.nested_parts[path[i]]\n    }\n    return current\n  }\n\n  // 階層パスで親コンテナを取得\n  const getParentContainer = (data: Component[], path: number[]): Component[] => {\n    if (path.length === 1) return data\n    let current = data[path[0]]\n    for (let i = 1; i < path.length - 1; i++) {\n      if (!current.nested_parts || !Array.isArray(current.nested_parts)) return []\n      current = current.nested_parts[path[i]]\n    }\n    return current.nested_parts || []\n  }\n\n  // 階層パス文字列を配列に変換\n  const parseHierarchyPath = (pathString: string): number[] => {\n    return pathString.split('-').map(Number)\n  }\n\n  // 階層パス配列を文字列に変換\n  const stringifyHierarchyPath = (path: number[]): string => {\n    return path.join('-')\n  }\n\n  // 再帰的にコンポーネントを検索（無限階層対応、z-for配列内も検索）\n  const findComponentRecursively = (\n    data: Component[],\n    componentId: string,\n    currentPath: number[] = []\n  ): Component | null => {\n    logger.debug(\n      `findComponentRecursively: 検索開始 - componentId=${componentId}, depth=${currentPath.length}`\n    )\n\n    // dataが未定義または配列でない場合はnullを返す\n    if (!data || !Array.isArray(data)) {\n      logger.debug(\n        `findComponentRecursively: 無効なデータ - data=${data}, isArray=${Array.isArray(data)}`\n      )\n      return null\n    }\n\n    logger.debug(`findComponentRecursively: ${data.length}個のコンポーネントを検索中`)\n\n    for (let i = 0; i < data.length; i++) {\n      const item = data[i]\n      const itemPath = [...currentPath, i]\n\n      logger.debug(`findComponentRecursively: [${i}] チェック中 - id=${item.id}, type=${item.type}`)\n\n      if (item.id === componentId) {\n        logger.success(\n          `findComponentRecursively: 発見！ - ${componentId} at path=${itemPath.join('-')}`\n        )\n        return item\n      }\n\n      // nested_parts内を検索\n      if (item.nested_parts && Array.isArray(item.nested_parts)) {\n        logger.debug(\n          `findComponentRecursively: nested_parts検索 - ${item.id} (${item.nested_parts.length}個)`\n        )\n        const result = findComponentRecursively(item.nested_parts, componentId, itemPath)\n        if (result) return result\n      }\n\n      // z-for配列内のアイテムも検索（再帰的にネストパーツを探索）\n      const keys = Object.keys(item)\n      for (const key of keys) {\n        const value = item[key]\n        if (Array.isArray(value) && key !== 'nested_parts') {\n          logger.debug(\n            `findComponentRecursively: z-for配列検索 - ${item.id}.${key} (${value.length}個)`\n          )\n          // 配列の各アイテムに対して再帰検索\n          for (let arrayIndex = 0; arrayIndex < value.length; arrayIndex++) {\n            const arrayItem = value[arrayIndex]\n            if (arrayItem && typeof arrayItem === 'object' && arrayItem.id) {\n              logger.debug(\n                `findComponentRecursively: z-for配列アイテム - ${arrayItem.id} in ${item.id}.${key}[${arrayIndex}]`\n              )\n\n              // 配列アイテム自体が目的のコンポーネントかチェック\n              if (arrayItem.id === componentId) {\n                logger.success(\n                  `findComponentRecursively: z-for配列アイテムで発見！ - ${componentId}`\n                )\n                // 配列アイテム自体を返す（編集対象として）\n                return arrayItem\n              }\n\n              // 配列アイテムのネストパーツ内を検索\n              if (arrayItem.nested_parts && Array.isArray(arrayItem.nested_parts)) {\n                logger.debug(\n                  `findComponentRecursively: z-for配列アイテムのネストパーツ検索 - ${arrayItem.id}.nested_parts (${arrayItem.nested_parts.length}個)`\n                )\n                const nestedResult = findComponentRecursively(arrayItem.nested_parts, componentId, [\n                  ...itemPath,\n                  arrayIndex,\n                ])\n                if (nestedResult) {\n                  logger.success(\n                    `findComponentRecursively: z-for配列内のネストパーツで発見！ - ${componentId}`\n                  )\n                  return nestedResult\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    logger.debug(`findComponentRecursively: 未発見 - ${componentId}`)\n    return null\n  }\n\n  // テンプレートを取得する関数\n  const getTemplate = (type: string, moduleName: string): string => {\n    return (\n      safeExecute(\n        () => {\n          // z-for-itemの場合は空のテンプレートを返す（_isZForItemフラグで特別処理される）\n          if (type === 'z-for-item') {\n            return ''\n          }\n\n          if (!Array.isArray(parts)) {\n            throw new Error('Parts配列が無効です')\n          }\n\n          if (!type || !moduleName) {\n            throw new Error('Type または ModuleName が指定されていません')\n          }\n\n          const section = parts.find(s => s.type === type)\n          if (!section) {\n            throw new Error(`パーツタイプ \"${type}\" が見つかりません`)\n          }\n\n          const module = section.module.find(m => m.title === moduleName)\n          if (!module) {\n            throw new Error(`モジュール \"${moduleName}\" が見つかりません (type: ${type})`)\n          }\n\n          return module.body\n        },\n        errorHandler,\n        `テンプレート取得エラー: ${type}/${moduleName}`,\n        ErrorType.TEMPLATE\n      ) || ''\n    )\n  }\n\n  // 処理中のコンポーネントを追跡して無限ループを防ぐ\n  const processingStack = new Set<string>()\n\n  // z-for内のテンプレートを抽出（ネストしたdiv構造に対応）\n  const extractZForTemplate = (parentTemplate: string, arrayName: string): string => {\n    logger.debug(`extractZForTemplate開始: arrayName=${arrayName}`)\n\n    // z-for要素の開始位置を特定\n    const startPattern = new RegExp(`<(\\\\w+)[^>]*z-for=\"${arrayName}\"[^>]*>`)\n    const startMatch = parentTemplate.match(startPattern)\n    if (!startMatch) {\n      logger.warn(`z-for=\"${arrayName}\" 開始タグが見つかりません`)\n      logger.debug('親テンプレート内容:', parentTemplate.substring(0, 500))\n      return ''\n    }\n\n    const startIndex = parentTemplate.indexOf(startMatch[0])\n\n    // 対応する終了タグを見つけるため、深度を追跡（任意要素対応）\n    const tagName = startMatch[1] // キャプチャグループからタグ名を取得\n    let depth = 0\n    let endIndex = startIndex\n    let i = startIndex\n\n    while (i < parentTemplate.length) {\n      // 該当タグの開始をチェック\n      if (parentTemplate.substring(i, i + tagName.length + 1) === `<${tagName}`) {\n        // 完全なタグまで移動\n        const tagEnd = parentTemplate.indexOf('>', i)\n        if (tagEnd !== -1) {\n          depth++\n          i = tagEnd + 1\n        } else {\n          i++\n        }\n      }\n      // 該当タグの終了をチェック\n      else if (parentTemplate.substring(i, i + tagName.length + 3) === `</${tagName}>`) {\n        depth--\n        if (depth === 0) {\n          endIndex = i + tagName.length + 3\n          break\n        }\n        i += tagName.length + 3\n      } else {\n        i++\n      }\n    }\n\n    if (depth !== 0) {\n      logger.warn(`z-for=\"${arrayName}\" の対応する終了タグが見つかりません（深度: ${depth}）`)\n      return ''\n    }\n\n    // z-for要素全体を抽出\n    const extractedContent = parentTemplate.substring(startIndex, endIndex).trim()\n\n    logger.debug(`z-for内テンプレート抽出成功: ${arrayName}`, {\n      extractedContent: extractedContent.substring(0, 200),\n      fullContent: extractedContent,\n      startIndex,\n      endIndex,\n      depth: 0,\n    })\n\n    return extractedContent\n  }\n\n  // ユニークIDを生成\n  const generateUniqueId = (): string => {\n    return 'comp_' + Math.random().toString(36).substring(2, 11) + Date.now().toString(36)\n  }\n\n  // テンプレート記法から入力フィールド情報を抽出\n  const getFieldInfo = (component: Component): ExtendedFieldInfo[] => {\n    const componentKey = `${component.id}_${component.type}_${component.module_name}`\n\n    // デバッグログを追加\n    logger.debug(`getFieldInfo: _isZForItem=${(component as any)._isZForItem}`)\n    logger.debug(`getFieldInfo: _arrayName=${(component as any)._arrayName}`)\n\n    // 無限ループ防止\n    if (processingStack.has(componentKey)) {\n      logger.warn(`getFieldInfo: 無限ループを検出、処理をスキップ: ${componentKey}`)\n      return []\n    }\n\n    processingStack.add(componentKey)\n\n    try {\n      let template = ''\n\n      // z-for-itemの場合は親のテンプレートを取得\n      if ((component as any)._isZForItem) {\n        const parentType = (component as any)._parentType\n        const parentModuleName = (component as any)._parentModuleName\n\n        logger.debug(\n          `getFieldInfo: z-for-itemのparent情報 - type: ${parentType}, module: ${parentModuleName}`\n        )\n\n        if (parentType && parentModuleName) {\n          template = getTemplate(parentType, parentModuleName)\n        } else {\n          // 親情報がない場合は、コンポーネント自体のtype/moduleを使用\n          logger.debug(`getFieldInfo: 親情報なし、コンポーネント自体を使用`)\n          template = getTemplate(component.type, component.module_name)\n        }\n      } else {\n        template = getTemplate(component.type, component.module_name)\n      }\n\n      if (!template) {\n        return []\n      }\n\n      logger.debug(\n        `getFieldInfo: component.id=${component.id}, type=${component.type}, module=${component.module_name}`\n      )\n      logger.debug(`getFieldInfo: _isZForItem=${(component as any)._isZForItem}`)\n\n      // z-for配列要素の場合は、z-for内のテンプレートのみを対象とする\n      if ((component as any)._isZForItem) {\n        const arrayName = (component as any)._arrayName\n        logger.debug(`getFieldInfo: z-for配列要素を検出, arrayName=${arrayName}`)\n        logger.debug(`getFieldInfo: componentプロパティ:`, Object.keys(component))\n        if (arrayName) {\n          logger.debug('getFieldInfo: 元のテンプレート:', template.substring(0, 300))\n          const zForTemplate = extractZForTemplate(template, arrayName)\n          if (zForTemplate) {\n            template = zForTemplate // z-for内のテンプレートのみを使用\n            logger.debug('getFieldInfo: z-for内テンプレート抽出完了:', template)\n          } else {\n            logger.warn(`getFieldInfo: z-for内テンプレートの抽出に失敗: arrayName=${arrayName}`)\n          }\n        }\n      } else {\n        logger.debug('getFieldInfo: 通常のコンポーネント処理')\n      }\n\n      const fields: ExtendedFieldInfo[] = []\n\n      // 新仕様：統一記法の解析 ($param:...)\n      const allMatches = template.match(/\\(\\$([^:]+):(.*?)\\)/g) || []\n\n      // z-for配列内のフィールドを除外\n      const arrayFieldsToExclude: string[] = []\n\n      // z-for記法の処理（より厳密な解析）\n      if (template.includes('z-for=')) {\n        // z-for属性を持つ要素を見つけ、対応する終了タグまでの内容を解析\n        const zForStartPattern = /<(\\w+)[^>]*z-for=\"([^\"]+)\"[^>]*>/g\n        let zForMatch\n\n        while ((zForMatch = zForStartPattern.exec(template)) !== null) {\n          const childArrayName = zForMatch[2] // 2番目のキャプチャグループが配列名\n          const startIndex = zForMatch.index\n\n          logger.debug(`z-for検出: ${childArrayName}, 現在の配列: ${(component as any)._arrayName}`)\n\n          // 子z-forのフィールドを除外対象とする\n          // z-for配列アイテム編集時、現在の親z-for配列以外のz-forフィールドを除外\n          if ((component as any)._isZForItem && childArrayName !== (component as any)._arrayName) {\n            // 子z-forの範囲を特定\n            let depth = 0\n            let endIndex = startIndex\n            let i = startIndex\n\n            while (i < template.length) {\n              if (template.substring(i, i + 4) === '<div') {\n                depth++\n              } else if (template.substring(i, i + 6) === '</div>') {\n                depth--\n                if (depth === 0) {\n                  endIndex = i + 6\n                  break\n                }\n              }\n              i++\n            }\n\n            if (depth === 0) {\n              // 子z-for要素の完全な内容を取得\n              const childZForContent = template.substring(startIndex, endIndex)\n\n              // 子z-for内の統一記法パラメータを抽出して除外リストに追加\n              const innerMatches = childZForContent.match(/\\(\\$([^:]+):(.*?)\\)/g)\n              if (innerMatches) {\n                innerMatches.forEach(innerMatch => {\n                  const match = innerMatch.match(/\\(\\$([^:]+):(.*?)\\)/)\n                  if (match) {\n                    const paramName = match[1].replace('?', '')\n                    arrayFieldsToExclude.push(paramName)\n                  }\n                })\n              }\n\n              logger.debug(`子z-for除外: ${childArrayName} のフィールドを除外リストに追加`)\n            }\n          }\n        }\n      }\n\n      // デバッグ：除外すべきフィールドをログ出力（開発環境のみ）\n      if (arrayFieldsToExclude.length > 0) {\n        logger.debug('z-for配列内のフィールドを除外:', arrayFieldsToExclude)\n      }\n\n      // z-for配列アイテム編集時は、z-for内フィールドのみを処理\n      // 通常のコンポーネント編集時は、z-for内フィールドを除外\n      let mainFieldMatches: string[]\n\n      if (component._isZForItem) {\n        // z-for配列アイテム編集時：親z-forのフィールドのみ表示、子z-forフィールドは除外\n        mainFieldMatches = allMatches.filter(match => {\n          const paramMatch = match.match(/\\(\\$([^:]+):(.*?)\\)/)\n          if (paramMatch) {\n            const paramName = paramMatch[1].replace('?', '')\n            const shouldInclude = !arrayFieldsToExclude.includes(paramName)\n            if (shouldInclude) {\n              logger.debug(`z-for配列アイテム編集: フィールド ${paramName} を表示`)\n            } else {\n              logger.debug(\n                `z-for配列アイテム編集: フィールド ${paramName} を除外（子z-forフィールド）`\n              )\n            }\n            return shouldInclude\n          }\n          return false\n        })\n      } else {\n        // 通常のコンポーネント編集時：z-for内でのみ使用されるフィールドを除外\n        mainFieldMatches = allMatches.filter(match => {\n          const paramMatch = match.match(/\\(\\$([^:]+):(.*?)\\)/)\n          if (paramMatch) {\n            const paramName = paramMatch[1].replace('?', '')\n\n            // z-for内でのみ使用されるフィールドかチェック\n            let usedInZForOnly = false\n            let usedOutsideZFor = false\n\n            // z-forブロック内での使用をチェック\n            const fieldPattern = new RegExp(\n              `\\\\(\\\\$${paramName.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')}[?:]`,\n              'g'\n            )\n\n            // z-forブロック抽出\n            const zForBlockPattern = /<[^>]*z-for=\"[^\"]*\"[^>]*>[\\s\\S]*?<\\/[^>]*>/g\n            let zForMatch\n\n            while ((zForMatch = zForBlockPattern.exec(template)) !== null) {\n              const zForBlock = zForMatch[0]\n              if (fieldPattern.test(zForBlock)) {\n                usedInZForOnly = true\n                break\n              }\n            }\n\n            // z-forブロック外での使用をチェック\n            if (usedInZForOnly) {\n              const templateWithoutZFor = template.replace(zForBlockPattern, '')\n              fieldPattern.lastIndex = 0\n              if (fieldPattern.test(templateWithoutZFor)) {\n                usedOutsideZFor = true\n              }\n            }\n\n            // z-forブロック内でのみ使用されている場合は除外\n            if (usedInZForOnly && !usedOutsideZFor) {\n              logger.debug(`getFieldInfo: ${paramName} をz-for内専用フィールドとして除外`)\n              return false\n            } else {\n              logger.debug(`getFieldInfo: ${paramName} を表示対象に含める`)\n              return true\n            }\n          }\n          return true\n        })\n      }\n\n      // 新仕様：UI判定ルールに基づく処理\n      mainFieldMatches.forEach(match => {\n        const paramMatch = match.match(/\\(\\$([^:]+):(.*?)\\)/)\n        if (paramMatch) {\n          const [, fullParamName, optionsStr] = paramMatch\n          const isMultipleSelect = fullParamName.includes('?')\n          const paramName = fullParamName.replace('?', '')\n\n          // UI判定ルール\n          if (optionsStr.includes('|')) {\n            // パイプ区切り → ラジオボタン または チェックボックス\n            let options = optionsStr.split('|')\n            let hasEmptyOption = false\n\n            // 空の設定（:|や末尾の|）をチェック\n            if (\n              optionsStr.includes('||') ||\n              optionsStr.startsWith('|') ||\n              optionsStr.endsWith('|')\n            ) {\n              hasEmptyOption = true\n            }\n\n            // 空のオプションを除去\n            options = options.filter(opt => opt.trim() !== '')\n\n            // 空設定がある場合は「指定なし」オプションを追加\n            if (hasEmptyOption) {\n              options.unshift('指定なし')\n            }\n\n            if (isMultipleSelect) {\n              // チェックボックス（複数選択）\n              const defaultValue = options.length > 0 ? [options[0]] : []\n              const fieldInfo = {\n                type: 'checkbox' as const,\n                paramName,\n                propKey: paramName,\n                options,\n                defaultValue,\n                label: `${paramName} (チェックボックス)`,\n              }\n              fields.push(fieldInfo)\n            } else {\n              // ラジオボタン（単一選択）\n              const defaultValue = options[0] || ''\n              const fieldInfo = {\n                type: 'radio' as const,\n                paramName,\n                propKey: paramName,\n                options,\n                defaultValue,\n                label: `${paramName} (ラジオボタン)`,\n              }\n              fields.push(fieldInfo)\n            }\n          } else if (optionsStr.includes(',')) {\n            // カンマ区切り → セレクトボックス\n            const options = optionsStr\n              .split(',')\n              .map(opt => opt.trim())\n              .filter(opt => opt !== '')\n\n            if (isMultipleSelect) {\n              // セレクトボックス（複数選択）\n              const defaultValue = options.length > 0 ? [options[0]] : []\n              const fieldInfo = {\n                type: 'select-multiple' as const,\n                paramName,\n                propKey: paramName,\n                options,\n                defaultValue,\n                label: `${paramName} (セレクトボックス・複数選択)`,\n              }\n              fields.push(fieldInfo)\n            } else {\n              // セレクトボックス（単一選択）\n              const defaultValue = options[0] || ''\n              const fieldInfo = {\n                type: 'select' as const,\n                paramName,\n                propKey: paramName,\n                options,\n                defaultValue,\n                label: `${paramName} (セレクトボックス)`,\n              }\n              fields.push(fieldInfo)\n            }\n          } else {\n            // 単一値 → テキストボックス\n            const fieldInfo = {\n              type: 'text' as const,\n              paramName,\n              propKey: paramName,\n              options: [],\n              defaultValue: optionsStr,\n              label: `${paramName} (テキストボックス)`,\n            }\n            fields.push(fieldInfo)\n          }\n        }\n      })\n\n      logger.debug(\n        `getFieldInfo: 抽出されたフィールド数=${fields.length}`,\n        fields.map(f => ({ paramName: f.paramName, type: f.type }))\n      )\n      return fields\n    } catch (error) {\n      logger.error(`getFieldInfo: エラーが発生しました: ${componentKey}`, error)\n      return []\n    } finally {\n      processingStack.delete(componentKey)\n    }\n  }\n\n  // テンプレート記法で処理されるフィールドかどうかを判定\n  const isTemplateField = (component: Component, key: string): boolean => {\n    try {\n      const template = getTemplate(component.type, component.module_name)\n      if (!template) return false\n\n      // z-for配列要素の場合はz-for内テンプレートをチェック\n      let targetTemplate = template\n      if ((component as any)._isZForItem) {\n        const arrayName = (component as any)._arrayName\n        const zForTemplate = extractZForTemplate(template, arrayName)\n        if (zForTemplate) {\n          targetTemplate = zForTemplate\n        }\n      }\n\n      // テンプレート記法のパターンマッチング\n      const textPattern = new RegExp(`\\\\{\\\\$${key}:[^}]*\\\\}`)\n      const selectPattern = new RegExp(`\\\\(\\\\$${key}:[^)]*\\\\)`)\n      const conditionalPattern = new RegExp(`\\\\(\\\\$${key}\\\\?:[^)]*\\\\)`)\n\n      const isTemplateFieldFound =\n        textPattern.test(targetTemplate) ||\n        selectPattern.test(targetTemplate) ||\n        conditionalPattern.test(targetTemplate)\n\n      // z-for内で使用されているフィールドもチェック（メイン編集パネルから除外するため）\n      if (!isTemplateFieldFound && !(component as any)._isZForItem) {\n        // z-forブロック内でこのフィールドが使用されているかチェック\n        const zForBlockPattern = /<[^>]*z-for=\"[^\"]*\"[^>]*>[\\s\\S]*?<\\/[^>]*>/g\n        let zForMatch\n        while ((zForMatch = zForBlockPattern.exec(template)) !== null) {\n          const zForBlock = zForMatch[0]\n          logger.debug(`isTemplateField: z-forブロック検査中 - ${key}`, zForBlock.substring(0, 100))\n          if (\n            textPattern.test(zForBlock) ||\n            selectPattern.test(zForBlock) ||\n            conditionalPattern.test(zForBlock)\n          ) {\n            logger.success(\n              `isTemplateField: ${key} はz-for内で使用されているためメイン編集パネルから除外`\n            )\n            return true\n          }\n        }\n\n        // より詳細なデバッグログ\n        logger.debug(`isTemplateField: ${key} - z-for内での使用検出結果: false`)\n        logger.debug(`isTemplateField: テンプレート内容 (最初200文字):`, template.substring(0, 200))\n      }\n\n      return isTemplateFieldFound\n    } catch (error) {\n      logger.warn(`isTemplateField error for ${key}:`, error)\n      return false\n    }\n  }\n\n  // 除外すべきフィールドかどうかを判定\n  const shouldExcludeField = (key: string, value: unknown): boolean => {\n    // システム内部で使用されるフィールド（固定）\n    const fixedSystemFields = ['content', 'nested_parts']\n    if (fixedSystemFields.includes(key)) return true\n\n    // 配列データ\n    if (Array.isArray(value)) return true\n\n    // オブジェクトデータ\n    if (typeof value === 'object' && value !== null) return true\n\n    return false\n  }\n\n  // 基本フィールドを表示するかどうかを判定\n  const shouldShowBasicField = (key: string, value: unknown, component: Component): boolean => {\n    // IDフィールドは除外\n    if (key === 'id') return false\n\n    // type、module_nameフィールドは除外\n    if (key === 'type' || key === 'module_name') return false\n\n    // z-for内でのみ使用されているフィールドは親コンポーネントでは除外（汎用的な検出）\n    const template = getTemplate(component.type, component.module_name)\n    if (template && template.includes('z-for=')) {\n      // z-forブロック内でのみ使用されているフィールドかチェック\n      const zForBlockPattern = /<[^>]*z-for=\"[^\"]*\"[^>]*>[\\s\\S]*?<\\/[^>]*>/g\n      let zForMatch\n      let usedInZForOnly = false\n      let usedOutsideZFor = false\n\n      // z-forブロック内での使用をチェック（テンプレート記法全てに対応）\n      const fieldPattern = new RegExp(\n        `\\\\(\\\\$${key.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')}[?:]`,\n        'g'\n      )\n\n      while ((zForMatch = zForBlockPattern.exec(template)) !== null) {\n        const zForBlock = zForMatch[0]\n        if (fieldPattern.test(zForBlock)) {\n          usedInZForOnly = true\n          break\n        }\n      }\n\n      // z-forブロック外での使用をチェック\n      if (usedInZForOnly) {\n        const templateWithoutZFor = template.replace(zForBlockPattern, '')\n        fieldPattern.lastIndex = 0\n        if (fieldPattern.test(templateWithoutZFor)) {\n          usedOutsideZFor = true\n        }\n      }\n\n      // z-forブロック内でのみ使用されている場合は除外\n      if (usedInZForOnly && !usedOutsideZFor) {\n        return false\n      } else if (usedInZForOnly && usedOutsideZFor) {\n      } else {\n      }\n    }\n\n    // z-for配列要素の場合：基本フィールドを一切表示しない（テンプレート記法フィールドのみ表示）\n    if ((component as any)._isZForItem) {\n      return false\n    }\n\n    // z-for配列要素固有のメタデータフィールドは除外\n    if (Z_FOR_SYSTEM_FIELDS.includes(key as any)) return false\n\n    // システムフィールドや複雑なデータは除外\n    if (shouldExcludeField(key, value)) return false\n\n    // テンプレート記法で処理されるフィールドは除外（重複を防ぐため）\n    if (isTemplateField(component, key)) {\n      return false\n    }\n\n    // 空の値や未定義の値は除外（より厳密にチェック）\n    if (value === '' || value === null || value === undefined) return false\n    if (typeof value === 'string' && value.trim() === '') return false\n    if (typeof value === 'number' && value === 0) return false\n\n    // プリミティブ型で値が存在する場合のみ表示\n    return (\n      (typeof value === 'string' && value.trim() !== '') ||\n      (typeof value === 'number' && value !== 0) ||\n      typeof value === 'boolean'\n    )\n  }\n\n  // 配列フィールドを表示するかどうかを判定\n  const shouldShowArrayField = (key: string, value: unknown, component: Component): boolean => {\n    const componentKey = `${component.id}_${component.type}_${component.module_name}_array_${key}`\n\n    // 無限ループ防止\n    if (processingStack.has(componentKey)) {\n      logger.warn(`shouldShowArrayField: 無限ループを検出、処理をスキップ: ${componentKey}`)\n      return false\n    }\n\n    processingStack.add(componentKey)\n\n    try {\n      logger.debug(\n        `shouldShowArrayField開始: key=${key}, component: ${component.id} (${component.type}/${component.module_name})`,\n        { key, value, componentId: component.id }\n      )\n\n      // システム内部フィールドは除外\n      if (SYSTEM_FIELDS.includes(String(key) as any)) {\n        logger.debug(`shouldShowArrayField: ${key} はシステム内部フィールドのため除外`)\n        return false\n      }\n\n      // z-forシステムフィールドは除外（z-for配列アイテム編集時）\n      if ((component as any)._isZForItem) {\n        if (Z_FOR_SYSTEM_FIELDS.includes(String(key) as any)) {\n          logger.debug(`shouldShowArrayField: ${key} はz-forシステムフィールドのため除外`)\n          return false\n        }\n      }\n\n      // テンプレート記法で処理されるフィールドは除外\n      if (isTemplateField(component, key)) {\n        logger.debug(`shouldShowArrayField: ${key} はテンプレート記法フィールドのため除外`)\n        return false\n      }\n\n      // テンプレートでz-for記法またはfor記法が使用されているかチェック\n      const template = getTemplate(component.type, component.module_name)\n      if (template) {\n        logger.debug(`shouldShowArrayField: テンプレート取得成功:`, template.substring(0, 200))\n        const zForPattern = new RegExp(`z-for=\"${key}\"`)\n\n        if (zForPattern.test(template)) {\n          logger.success(\n            `shouldShowArrayField: ${key}はz-for記法で使用されているため編集パネルでは非表示（プレビュー側で編集）`\n          )\n\n          // z-for記法で使用されている場合は、配列でなくても空配列で初期化\n          if (!Array.isArray(value)) {\n            logger.debug(\n              `shouldShowArrayField: ${key}は配列でないが、記法で使用されているため空配列で初期化`\n            )\n            component[key] = []\n          }\n\n          // z-for記法の配列は編集パネルでは非表示（プレビュー側でインライン編集）\n          return false\n        } else {\n          logger.debug(`shouldShowArrayField: ${key}は配列記法で使用されていない`)\n        }\n      } else {\n        logger.debug(`shouldShowArrayField: テンプレート取得失敗`)\n      }\n\n      // 配列でない場合は除外（テンプレート記法チェック後）\n      if (!Array.isArray(value)) {\n        logger.debug(`shouldShowArrayField: ${key}は配列でなく、記法でも使用されていない`)\n        return false\n      }\n\n      return false\n    } catch (error) {\n      logger.error(`shouldShowArrayField: エラーが発生しました: ${componentKey}`, error)\n      return false\n    } finally {\n      processingStack.delete(componentKey)\n    }\n  }\n\n  // 配列アイテム内では通常のテキストフィールドを非表示にし、テンプレート記法フィールドのみを表示するように修正\n  const shouldShowArrayItemField = (\n    itemKey: string,\n    itemValue: unknown,\n    component: Component,\n    arrayKey?: string,\n    _item?: unknown\n  ): boolean => {\n    // IDフィールドは除外\n    if (itemKey === 'id') return false\n\n    // 配列データは除外\n    if (Array.isArray(itemValue)) return false\n\n    // オブジェクトデータは除外\n    if (typeof itemValue === 'object' && itemValue !== null) return false\n\n    // 空の値や未定義の値は除外\n    if (itemValue === '' || itemValue === null || itemValue === undefined) return false\n    if (typeof itemValue === 'string' && itemValue.trim() === '') return false\n    if (typeof itemValue === 'number' && itemValue === 0) return false\n\n    // テンプレート記法で処理されるフィールドかどうかをチェック\n    const template = getTemplate(component.type, component.module_name)\n\n    // プリミティブ型で値が存在する場合のみ表示\n    return (\n      (typeof itemValue === 'string' && itemValue.trim() !== '') ||\n      (typeof itemValue === 'number' && itemValue !== 0) ||\n      typeof itemValue === 'boolean'\n    )\n  }\n\n  // 入力タイプを決定\n  const getInputType = (key: string): string => {\n    if (key.includes('url') || key.includes('src')) return 'url'\n    if (key.includes('email')) return 'email'\n    if (key.includes('number') || key.includes('count')) return 'number'\n    return 'text'\n  }\n\n  // チェックボックスの値を更新\n  const updateCheckboxValue = (\n    component: Component,\n    propKey: string,\n    option: string,\n    checked: boolean\n  ): void => {\n    if (!component[propKey]) {\n      component[propKey] = []\n    }\n\n    const propValue = component[propKey] as unknown as string[]\n    if (checked) {\n      if (!propValue.includes(option)) {\n        propValue.push(option)\n      }\n    } else {\n      component[propKey] = propValue.filter((item: string) => item !== option) as unknown as\n        | string\n        | Component[]\n        | ComponentProps\n        | undefined\n        | ArrayItem[]\n    }\n  }\n\n  // チェックボックスがチェックされているかどうか\n  const isCheckboxChecked = (component: Component, propKey: string, option: string): boolean => {\n    const propValue = component[propKey] as unknown as string[]\n    return Array.isArray(propValue) && propValue.includes(option)\n  }\n\n  // 配列アイテムを追加\n  const addArrayItem = (component: Component, arrayKey: string): void => {\n    \n    if (!component[arrayKey]) {\n      component[arrayKey] = []\n    }\n\n    const newItem: Record<string, string | number | boolean | undefined> = {\n      id: `${arrayKey}_${Date.now()}`,\n    }\n\n    // 既存のアイテムから構造を推測\n    const arrayValue = component[arrayKey] as unknown as ArrayItem[]\n    \n    if (arrayValue.length > 0) {\n      const template = arrayValue[0]\n      \n      Object.keys(template).forEach(key => {\n        if (key !== 'id') {\n          const originalValue = template[key]\n          const newValue = typeof originalValue === 'string' ? '' : originalValue\n          newItem[key] = newValue\n        }\n      })\n    } else {\n    }\n    // z-for記法のみ使用（@for記法からの構造生成は削除済み）\n\n    arrayValue.push(newItem as ArrayItem)\n  }\n\n  // 配列アイテムを削除\n  const removeArrayItem = (component: Component, arrayKey: string, index: number): void => {\n    const arrayValue = component[arrayKey] as unknown as ArrayItem[]\n    if (arrayValue && arrayValue.length > index) {\n      arrayValue.splice(index, 1)\n    }\n  }\n\n  // 新しいコンポーネントを作成\n  const createNewComponent = (partType: string, module: Module): Component => {\n    return (\n      safeExecute(\n        () => {\n          if (!partType || !module) {\n            throw new Error('partType または module が指定されていません')\n          }\n\n          if (!module.title || !module.body) {\n            throw new Error('module.title または module.body が無効です')\n          }\n\n          const id = generateUniqueId()\n          logger.debug(`createNewComponent開始: partType=${partType}, module=${module.title}`)\n\n          const newComponent: Component = {\n            id,\n            type: partType,\n            module_name: module.title,\n          }\n\n          // テンプレートから初期値を設定\n          const template = module.body\n          logger.debug(`createNewComponent テンプレート:`, template.substring(0, 300))\n\n          // テキスト入力フィールドの初期値を設定（ディープコピー）\n          const textMatches = template.match(/\\{\\$([^:}]+):([^}]+)\\}/g)\n          if (textMatches) {\n            textMatches.forEach((match: string) => {\n              const textMatch = match.match(/\\{\\$([^:}]+):([^}]+)\\}/)\n              if (textMatch) {\n                const [, paramName, defaultValue] = textMatch\n                if (paramName !== 'input') {\n                  // input は特別な値なのでスキップ\n                  // 文字列をディープコピー（新しい文字列インスタンスを作成）\n                  newComponent[paramName] = String(defaultValue)\n                }\n              }\n            })\n          }\n\n          // ラジオボタンの初期値を設定（ディープコピー）\n          const radioMatches = template.match(/\\(\\$([^:?]+):(.*?)\\)/g)\n          if (radioMatches) {\n            radioMatches.forEach((match: string) => {\n              const radioMatch = match.match(/\\(\\$([^:?]+):(.*?)\\)/)\n              if (radioMatch) {\n                const [, paramName, optionsStr] = radioMatch\n                const options = optionsStr.split('|').filter((opt: string) => opt.trim() !== '')\n                if (options.length > 0) {\n                  // 最初のオプションを初期値として設定（新しい文字列インスタンス）\n                  newComponent[paramName] = String(options[0])\n                }\n              }\n            })\n          }\n\n          // チェックボックスの初期値を設定（新しい配列インスタンス）\n          const checkboxMatches = template.match(/\\(\\$([^:?]+)\\?:(.*?)\\)/g)\n          if (checkboxMatches) {\n            checkboxMatches.forEach((match: string) => {\n              const checkboxMatch = match.match(/\\(\\$([^:?]+)\\?:(.*?)\\)/)\n              if (checkboxMatch) {\n                const [, paramName, optionsStr] = checkboxMatch\n                const options = optionsStr.split('|').filter((opt: string) => opt.trim() !== '')\n                // 最初のオプションを初期値として配列で設定\n                newComponent[paramName] = options.length > 0 ? [options[0]] : []\n              }\n            })\n          }\n\n          // z-for記法のみ使用（@for記法の初期化は削除済み）\n\n          // z-for配列の初期値を設定（空配列として初期化）\n          const zForMatches = template.match(/z-for=\"([^\"]+)\"/g)\n          if (zForMatches) {\n            logger.debug(`createNewComponent: z-for記法発見:`, zForMatches)\n            zForMatches.forEach((match: string) => {\n              const zForMatch = match.match(/z-for=\"([^\"]+)\"/)\n              if (zForMatch) {\n                const [, arrayName] = zForMatch\n                // まだ初期化されていない場合のみ空配列で初期化\n                if (!newComponent[arrayName]) {\n                  logger.debug(`createNewComponent: z-for配列 ${arrayName} を空配列で初期化`)\n                  newComponent[arrayName] = []\n                } else {\n                  logger.debug(`createNewComponent: z-for配列 ${arrayName} は既に初期化済み`)\n                }\n              }\n            })\n          } else {\n            logger.debug(`createNewComponent: z-for記法が見つかりませんでした`)\n          }\n\n          logger.debug(`createNewComponent完了: newComponent=`, newComponent)\n          return newComponent\n        },\n        errorHandler,\n        `コンポーネント作成エラー: ${partType}/${module?.title}`,\n        ErrorType.COMPONENT\n      ) || {\n        id: generateUniqueId(),\n        type: partType || 'unknown',\n        module_name: module?.title || 'unknown',\n      }\n    )\n  }\n\n  // 配列アイテムの初期値を作成（ディープコピー版）\n  const createArrayItem = (forContent: string): ArrayItem => {\n    const item: ArrayItem = {\n      id: generateUniqueId(),\n    }\n\n    // z-for内のテキストフィールドの初期値を設定\n    const textMatches = forContent.match(/\\{\\$([^:}]+):([^}]+)\\}/g)\n    if (textMatches) {\n      textMatches.forEach((match: string) => {\n        const textMatch = match.match(/\\{\\$([^:}]+):([^}]+)\\}/)\n        if (textMatch) {\n          const [, paramName, defaultValue] = textMatch\n          // 新しい文字列インスタンスを作成\n          item[paramName] = String(defaultValue)\n        }\n      })\n    }\n\n    // z-for内のラジオボタンの初期値を設定\n    const radioMatches = forContent.match(/\\(\\$([^:?]+):(.*?)\\)/g)\n    if (radioMatches) {\n      radioMatches.forEach((match: string) => {\n        const radioMatch = match.match(/\\(\\$([^:?]+):(.*?)\\)/)\n        if (radioMatch) {\n          const [, paramName, optionsStr] = radioMatch\n          const options = optionsStr.split('|').filter((opt: string) => opt.trim() !== '')\n          if (options.length > 0) {\n            // 新しい文字列インスタンスを作成\n            item[paramName] = String(options[0])\n          }\n        }\n      })\n    }\n\n    return item\n  }\n\n  // 配列アイテム用のフィールド情報を取得\n  const getArrayItemFieldInfo = (component: Component, arrayKey: string): ExtendedFieldInfo[] => {\n    const template = getTemplate(component.type, component.module_name)\n    if (!template) return []\n\n    const fields: ExtendedFieldInfo[] = []\n\n    // z-for属性を持つ要素内のテンプレート記法を抽出\n    let forContent = ''\n\n    // z-for記法のチェック - ネストしたdiv構造に対応\n    const zForExtractedContent = extractZForTemplate(template, arrayKey)\n    if (zForExtractedContent) {\n      forContent = zForExtractedContent\n    }\n\n    if (forContent) {\n      // 新仕様：統一記法の解析 ($param:...)\n      const arrayFieldMatches = forContent.match(/\\(\\$([^:]+):(.*?)\\)/g) || []\n\n      arrayFieldMatches.forEach(match => {\n        const paramMatch = match.match(/\\(\\$([^:]+):(.*?)\\)/)\n        if (paramMatch) {\n          const [, fullParamName, optionsStr] = paramMatch\n          const isMultipleSelect = fullParamName.includes('?')\n          const paramName = fullParamName.replace('?', '')\n\n          // UI判定ルール\n          if (optionsStr.includes('|')) {\n            // パイプ区切り → ラジオボタン または チェックボックス\n            let options = optionsStr.split('|')\n            let hasEmptyOption = false\n\n            // 空の設定（:|や末尾の|）をチェック\n            if (\n              optionsStr.includes('||') ||\n              optionsStr.startsWith('|') ||\n              optionsStr.endsWith('|')\n            ) {\n              hasEmptyOption = true\n            }\n\n            // 空のオプションを除去\n            options = options.filter(opt => opt.trim() !== '')\n\n            // 空設定がある場合は「指定なし」オプションを追加\n            if (hasEmptyOption) {\n              options.unshift('指定なし')\n            }\n\n            if (isMultipleSelect) {\n              // チェックボックス（複数選択）\n              const defaultValue = options.length > 0 ? [options[0]] : []\n              const fieldInfo = {\n                type: 'checkbox' as const,\n                paramName,\n                propKey: paramName,\n                options,\n                defaultValue,\n                label: `${paramName} (チェックボックス)`,\n              }\n              fields.push(fieldInfo)\n            } else {\n              // ラジオボタン（単一選択）\n              const defaultValue = options[0] || ''\n              const fieldInfo = {\n                type: 'radio' as const,\n                paramName,\n                propKey: paramName,\n                options,\n                defaultValue,\n                label: `${paramName} (ラジオボタン)`,\n              }\n              fields.push(fieldInfo)\n            }\n          } else if (optionsStr.includes(',')) {\n            // カンマ区切り → セレクトボックス\n            const options = optionsStr\n              .split(',')\n              .map(opt => opt.trim())\n              .filter(opt => opt !== '')\n\n            if (isMultipleSelect) {\n              // セレクトボックス（複数選択）\n              const defaultValue = options.length > 0 ? [options[0]] : []\n              const fieldInfo = {\n                type: 'select-multiple' as const,\n                paramName,\n                propKey: paramName,\n                options,\n                defaultValue,\n                label: `${paramName} (セレクトボックス・複数選択)`,\n              }\n              fields.push(fieldInfo)\n            } else {\n              // セレクトボックス（単一選択）\n              const defaultValue = options[0] || ''\n              const fieldInfo = {\n                type: 'select' as const,\n                paramName,\n                propKey: paramName,\n                options,\n                defaultValue,\n                label: `${paramName} (セレクトボックス)`,\n              }\n              fields.push(fieldInfo)\n            }\n          } else {\n            // 単一値 → テキストボックス\n            const fieldInfo = {\n              type: 'text' as const,\n              paramName,\n              propKey: paramName,\n              options: [],\n              defaultValue: optionsStr,\n              label: `${paramName} (テキストボックス)`,\n            }\n            fields.push(fieldInfo)\n          }\n        }\n      })\n    }\n\n    return fields\n  }\n\n  return {\n    findComponentByPath,\n    getParentContainer,\n    parseHierarchyPath,\n    stringifyHierarchyPath,\n    findComponentRecursively,\n    getTemplate,\n    generateUniqueId,\n    getFieldInfo,\n    isTemplateField,\n    shouldExcludeField,\n    shouldShowBasicField,\n    shouldShowArrayField,\n    shouldShowArrayItemField,\n    getInputType,\n    updateCheckboxValue,\n    isCheckboxChecked,\n    addArrayItem,\n    removeArrayItem,\n    createNewComponent,\n    createArrayItem,\n    getArrayItemFieldInfo,\n  }\n}\n","<template>\n  <Teleport :to=\"safeModalContainer\">\n    <div v-if=\"showEditor && selectedComponent\" class=\"zero-code-overlay\" @click=\"closeEditor\">\n      <div class=\"zero-code-sidebar\" @click.stop>\n        <div class=\"zero-code-header\">\n          <div class=\"zero-code-header-buttons\">\n            <button class=\"zero-code-btn zero-code-close-button\" @click=\"closeEditor\">✖️</button>\n          </div>\n        </div>\n\n        <div class=\"zero-code-content-sidebar\">\n          <div v-if=\"selectedComponent\" class=\"zero-code-editable-component\">\n            <div class=\"zero-code-component-info\">\n              <span class=\"zero-code-component-type\">{{ selectedComponent.type }}</span>\n              <span class=\"zero-code-component-module\">{{ selectedComponent.module_name }}</span>\n              <span class=\"zero-code-component-id\">ID: {{ selectedComponent.id }}</span>\n            </div>\n\n            <div class=\"zero-code-fields\">\n              <!-- テンプレート記法に基づくフィールド -->\n              <div\n                v-for=\"field in getFieldInfo(selectedComponent)\"\n                :key=\"field.propKey\"\n                class=\"zero-code-template-field\"\n              >\n                <label class=\"zero-code-field-label\">{{ field.label }}:</label>\n\n                <!-- テキストボックス -->\n                <div v-if=\"field.type === 'text'\" class=\"zero-code-text-group\">\n                  <input\n                    :value=\"selectedComponent[field.propKey] || field.defaultValue\"\n                    type=\"text\"\n                    class=\"zero-code-field-input\"\n                    @input=\"\n                      (e: Event) => {\n                        const target = e.target as HTMLInputElement\n                        updateValue(field.propKey, target.value)\n                      }\n                    \"\n                  >\n                </div>\n\n                <!-- ラジオボタン -->\n                <div v-if=\"field.type === 'radio'\" class=\"zero-code-radio-group\">\n                  <div v-for=\"option in field.options\" :key=\"option\" class=\"zero-code-radio-item\">\n                    <input\n                      :id=\"`${selectedComponent.id}_${field.propKey}_${option}`\"\n                      :value=\"option\"\n                      type=\"radio\"\n                      :name=\"`${selectedComponent.id}_${field.propKey}`\"\n                      class=\"zero-code-radio-input\"\n                      :checked=\"\n                        selectedComponent[field.propKey] === option ||\n                          (option === '指定なし' && !selectedComponent[field.propKey])\n                      \"\n                      @change=\"updateValue(field.propKey, option === '指定なし' ? '' : option)\"\n                    >\n                    <label\n                      :for=\"`${selectedComponent.id}_${field.propKey}_${option}`\"\n                      class=\"zero-code-radio-label\"\n                    >\n                      {{ option }}\n                    </label>\n                  </div>\n                </div>\n\n                <!-- チェックボックス -->\n                <div v-if=\"field.type === 'checkbox'\" class=\"zero-code-checkbox-group\">\n                  <div v-for=\"option in field.options\" :key=\"option\" class=\"zero-code-checkbox-item\">\n                    <input\n                      :id=\"`${selectedComponent.id}_${field.propKey}_${option}`\"\n                      :checked=\"\n                        isCheckboxChecked(selectedComponent, field.propKey, option) ||\n                          (Array.isArray(field.defaultValue) &&\n                            field.defaultValue.includes(option) &&\n                            !selectedComponent[field.propKey])\n                      \"\n                      type=\"checkbox\"\n                      class=\"zero-code-checkbox-input\"\n                      @change=\"\n                        (e: Event) => {\n                          const target = e.target as HTMLInputElement\n                          updateCheckboxValue(field.propKey, option, target.checked)\n                        }\n                      \"\n                    >\n                    <label\n                      :for=\"`${selectedComponent.id}_${field.propKey}_${option}`\"\n                      class=\"zero-code-checkbox-label\"\n                    >\n                      {{ option }}\n                    </label>\n                  </div>\n                </div>\n\n                <!-- セレクトボックス（単一選択） -->\n                <div v-if=\"field.type === 'select'\" class=\"zero-code-select-group\">\n                  <select\n                    :value=\"selectedComponent[field.propKey] || field.defaultValue\"\n                    class=\"zero-code-field-input zero-code-select-input\"\n                    @change=\"\n                      (e: Event) => {\n                        const target = e.target as HTMLSelectElement\n                        updateValue(field.propKey, target.value)\n                      }\n                    \"\n                  >\n                    <option v-for=\"option in field.options\" :key=\"option\" :value=\"option\">\n                      {{ option }}\n                    </option>\n                  </select>\n                </div>\n\n                <!-- セレクトボックス（複数選択） -->\n                <div v-if=\"field.type === 'select-multiple'\" class=\"zero-code-select-multiple-group\">\n                  <select\n                    :value=\"selectedComponent[field.propKey] || field.defaultValue\"\n                    multiple\n                    class=\"zero-code-field-input zero-code-select-multiple\"\n                    @change=\"\n                      (e: Event) => {\n                        const target = e.target as HTMLSelectElement\n                        const selectedValues = Array.from(target.selectedOptions).map(\n                          option => option.value\n                        )\n                        updateValue(field.propKey, selectedValues)\n                      }\n                    \"\n                  >\n                    <option\n                      v-for=\"option in field.options\"\n                      :key=\"option\"\n                      :value=\"option\"\n                      :selected=\"\n                        Array.isArray((selectedComponent as any)[field.propKey]) &&\n                          (selectedComponent as any)[field.propKey].includes(option)\n                      \"\n                    >\n                      {{ option }}\n                    </option>\n                  </select>\n                </div>\n              </div>\n\n              <!-- 基本フィールド -->\n              <template v-for=\"(value, key) in selectedComponent\" :key=\"String(key)\">\n                <div\n                  v-if=\"shouldShowBasicField(String(key), value, selectedComponent)\"\n                  class=\"zero-code-field-group\"\n                >\n                  <label :for=\"`${selectedComponent.id}_${String(key)}`\">{{ key }}:</label>\n                  <input\n                    :id=\"`${selectedComponent.id}_${String(key)}`\"\n                    :value=\"value\"\n                    :type=\"getInputType(String(key))\"\n                    class=\"zero-code-field-input\"\n                    :readonly=\"String(key) === 'id'\"\n                    @input=\"\n                      (e: Event) => {\n                        const target = e.target as HTMLInputElement\n                        updateValue(String(key), target.value)\n                      }\n                    \"\n                  >\n                </div>\n              </template>\n\n              <!-- 配列フィールド -->\n              <template v-for=\"(value, key) in selectedComponent\" :key=\"String(key)\">\n                <ArrayFieldEditor\n                  v-if=\"shouldShowArrayField(String(key), value, selectedComponent)\"\n                  :component-id=\"selectedComponent.id\"\n                  :array-key=\"String(key)\"\n                  :items=\"Array.isArray(value) ? (value as Record<string, unknown>[]) : []\"\n                  :fields=\"getArrayFields(String(key))\"\n                  :label=\"getArrayLabel(String(key))\"\n                  :item-label=\"getArrayItemLabel(String(key))\"\n                  @add=\"() => addArrayItem(selectedComponent, String(key))\"\n                  @remove=\"index => removeArrayItem(selectedComponent, String(key), index)\"\n                  @reorder=\"\n                    (fromIndex, toIndex) => reorderArrayItems(String(key), fromIndex, toIndex)\n                  \"\n                  @update=\"\n                    (index, fieldKey, fieldValue) =>\n                      updateArrayItemValue(String(key), index, fieldKey, fieldValue)\n                  \"\n                />\n              </template>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </Teleport>\n</template>\n\n<script setup lang=\"ts\">\n  import { watch, computed } from 'vue'\n  import { logger } from '@shared/utils/logger'\n  import ArrayFieldEditor from './ArrayFieldEditor.vue'\n  import type { Component } from '@types'\n  import { useComponentUtils } from '../../composables/useComponentUtils'\n\n  // ArrayFieldEditor用のローカルField型\n  interface LocalField {\n    label: string\n    type: 'text' | 'select' | 'textarea' | 'number' | 'radio' | 'checkbox' | 'select-multiple'\n    options?: string[]\n    defaultValue?: any\n  }\n\n  interface Props {\n    showEditor: boolean\n    selectedComponent: Component | null\n    getFieldInfo: (component: Component) => any[]\n    shouldShowBasicField: (key: string, value: unknown, component: Component) => boolean\n    shouldShowArrayField: (key: string, value: unknown, component: Component) => boolean\n    shouldShowArrayItemField: (\n      itemKey: string,\n      itemValue: unknown,\n      component: Component,\n      arrayKey?: string,\n      item?: unknown\n    ) => boolean\n    getInputType: (key: string) => string\n    isCheckboxChecked: (component: Component, propKey: string, option: string) => boolean\n    partsData?: any[]\n    modalContainer?: string\n  }\n\n  const props = withDefaults(defineProps<Props>(), {\n    modalContainer: 'body'\n  })\n\n  // モーダルコンテナの有効性をチェック\n  const isModalContainerValid = computed(() => {\n    if (!props.modalContainer || props.modalContainer === 'body') {\n      return true // bodyは常に有効\n    }\n    \n    // DOMの存在確認は実際にTeleportが実行される時に行う\n    return typeof document !== 'undefined'\n  })\n\n  // 安全なモーダルコンテナを取得（フォールバック付き）\n  const safeModalContainer = computed(() => {\n    if (!props.modalContainer || props.modalContainer === 'body') {\n      return 'body'\n    }\n    \n    // DOM要素の存在確認（client-sideでのみ）\n    if (typeof document !== 'undefined') {\n      const container = document.querySelector(props.modalContainer)\n      return container ? props.modalContainer : 'body'\n    }\n    \n    return 'body'\n  })\n\n  const emit = defineEmits<{\n    (e: 'close'): void\n    (e: 'update:value', key: string, value: unknown): void\n    (e: 'update:array-item', key: string, index: number, value: unknown): void\n    (e: 'update:checkbox', key: string, option: string, checked: boolean): void\n    (e: 'add:array-item', key: string): void\n    (e: 'remove:array-item', key: string, index: number): void\n    (e: 'reorder:array-item', key: string, fromIndex: number, toIndex: number): void\n  }>()\n\n  const closeEditor = (): void => {\n    emit('close')\n  }\n\n  const updateValue = (key: string, value: unknown): void => {\n    emit('update:value', key, value)\n  }\n\n\n  // 初期値を設定する関数\n  const ensureDefaultValues = (): void => {\n    if (!props.selectedComponent) return\n\n    const fieldInfos = props.getFieldInfo(props.selectedComponent)\n\n    fieldInfos.forEach(field => {\n      // 初期値が設定されていて、現在の値が未設定の場合\n      if (field.defaultValue && !props.selectedComponent![field.propKey]) {\n        // チェックボックスまたはセレクトボックス（複数選択）の場合は配列として初期化\n        if (\n          (field.type === 'checkbox' || field.type === 'select-multiple') &&\n          Array.isArray(field.defaultValue)\n        ) {\n          updateValue(field.propKey, [...field.defaultValue])\n        } else {\n          updateValue(field.propKey, field.defaultValue)\n        }\n      }\n    })\n  }\n\n  // コンポーネントが選択された時に初期値を設定\n  watch(\n    () => props.selectedComponent,\n    newComponent => {\n      if (newComponent) {\n        ensureDefaultValues()\n      }\n    },\n    { immediate: true }\n  )\n\n  const updateArrayItemValue = (\n    key: string,\n    index: number,\n    itemKey: string,\n    value: unknown\n  ): void => {\n    if (!props.selectedComponent) return\n    const arrayItems = props.selectedComponent[key]\n    if (!Array.isArray(arrayItems)) return\n    const item = { ...arrayItems[index], [itemKey]: value }\n    emit('update:array-item', key, index, item)\n  }\n\n  const updateCheckboxValue = (key: string, option: string, checked: boolean): void => {\n    emit('update:checkbox', key, option, checked)\n  }\n\n  const addArrayItem = (component: Component | null, key: string): void => {\n    if (!component) return\n\n    // 重複実行を防ぐため、EditorPanelでは実際の操作は行わず、イベントのみ通知\n    emit('add:array-item', key)\n  }\n\n  const removeArrayItem = (component: Component | null, key: string, index: number): void => {\n    if (!component) return\n\n    // 重複実行を防ぐため、EditorPanelでは実際の操作は行わず、イベントのみ通知\n    emit('remove:array-item', key, index)\n  }\n\n  const reorderArrayItems = (key: string, fromIndex: number, toIndex: number): void => {\n    if (!props.selectedComponent) return\n\n    const arrayItems = props.selectedComponent[key] as any[]\n    if (!Array.isArray(arrayItems)) return\n\n    // 配列内で要素を移動\n    const newArray = [...arrayItems]\n    const [movedItem] = newArray.splice(fromIndex, 1)\n    newArray.splice(toIndex, 0, movedItem)\n\n    // コンポーネントの配列を更新\n    ;(props.selectedComponent as any)[key] = newArray\n\n    logger.debug(`📋 配列並べ替え完了: ${key}[${fromIndex}] → [${toIndex}]`)\n\n    // 変更を通知\n    emit('reorder:array-item', key, fromIndex, toIndex)\n  }\n\n  // 配列フィールドの設定を取得（テンプレート記法対応版）\n  const getArrayFields = (key: string): Record<string, LocalField> => {\n    if (!props.selectedComponent) return {}\n\n    const fields: Record<string, LocalField> = {}\n\n    // テンプレート記法から配列アイテムのフィールド情報を取得\n    if (props.partsData) {\n      const utils = useComponentUtils(props.partsData)\n      const templateFields = utils.getArrayItemFieldInfo(props.selectedComponent, key)\n\n      // テンプレート記法フィールドのみを使用\n      templateFields.forEach(fieldInfo => {\n        fields[fieldInfo.propKey] = {\n          label: fieldInfo.label,\n          type: fieldInfo.type as any,\n          options: fieldInfo.options as string[],\n          defaultValue: fieldInfo.defaultValue,\n        }\n      })\n\n      // テンプレート記法フィールドが存在する場合はそれだけを返す\n      if (templateFields.length > 0) {\n        return fields\n      }\n    }\n\n    // テンプレート記法フィールドが存在しない場合のみフォールバック処理\n    const arrayValue = props.selectedComponent[key] as unknown\n    if (Array.isArray(arrayValue) && arrayValue.length > 0) {\n      const firstItem = arrayValue[0]\n      if (typeof firstItem === 'object' && firstItem !== null) {\n        Object.keys(firstItem).forEach(fieldKey => {\n          if (fieldKey === 'id') return // IDフィールドは除外\n\n          const fieldValue = firstItem[fieldKey]\n\n          // シンプルなテキストフィールドとして処理\n          fields[fieldKey] = {\n            label: fieldKey.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase()),\n            type: fieldKey.includes('desc') || fieldKey.includes('content') ? 'textarea' : 'text',\n          }\n        })\n      }\n    }\n\n    // フィールドが空の場合のデフォルト\n    if (Object.keys(fields).length === 0) {\n      return {\n        title: {\n          label: 'タイトル',\n          type: 'text',\n        },\n        content: {\n          label: '内容',\n          type: 'textarea',\n        },\n      }\n    }\n\n    return fields\n  }\n\n  // 配列フィールドのラベルを動的に取得\n  const getArrayLabel = (key: string): string => {\n    // 配列名を人間が読みやすい形に変換\n    return key\n      .replace(/_/g, ' ')\n      .replace(/\\b\\w/g, l => l.toUpperCase())\n      .concat(' 一覧')\n  }\n\n  // 配列アイテムのラベルを動的に取得\n  const getArrayItemLabel = (key: string): string => {\n    // 単数形に変換（簡易的な実装）\n    let itemName = key\n    if (key.endsWith('s')) {\n      itemName = key.slice(0, -1)\n    }\n    return itemName.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())\n  }\n</script>\n\n<style scoped>\n</style>\n\n","<template>\n  <div class=\"zero-code-tab-content\">\n    <!-- データ表示タブ -->\n    <DataDisplay\n      :model-value=\"dataTab\"\n      :page-data=\"editablePageData\"\n      :parts=\"localParts && localParts.length > 0 ? localParts : parts || []\"\n      :common-parts=\"localCommonParts\"\n      :individual-parts=\"localIndividualParts\"\n      :common-images=\"commonImages\"\n      :individual-images=\"individualImages\"\n      :render-component-with-nested=\"renderComponentWithNested\"\n      :is-text-editing=\"isTextEditing\"\n      @update:model-value=\"$emit('update:data-tab', $event)\"\n      @add-part=\"$emit('add-part', $event)\"\n      @edit-part=\"$emit('edit-part', $event)\"\n      @delete-part=\"$emit('delete-part', $event)\"\n      @reorder-parts=\"$emit('reorder-parts', $event)\"\n    />\n\n    <!-- パーツ選択モーダル（インスタンス固有） -->\n    <PartSelector\n      v-if=\"showPartSelector\"\n      :parts=\"localParts && localParts.length > 0 ? localParts : parts || []\"\n      :modal-container=\"`.modal-container-${instanceId}`\"\n      @close=\"$emit('close-part-selector')\"\n      @select-part=\"(type, module) => $emit('select-part', type, module)\"\n    />\n\n    <!-- ネスト用パーツ選択モーダル（インスタンス固有） -->\n    <PartSelector\n      v-if=\"showNestedPartSelector\"\n      :parts=\"localParts && localParts.length > 0 ? localParts : parts || []\"\n      :is-nested=\"true\"\n      :modal-container=\"`.modal-container-${instanceId}`\"\n      @close=\"$emit('close-nested-part-selector')\"\n      @select-part=\"(type, module) => $emit('select-nested-part', type, module)\"\n    />\n    \n    <!-- インスタンス固有のモーダルコンテナ -->\n    <div :class=\"`modal-container-${instanceId}`\" style=\"position: relative; z-index: 9999;\" />\n\n    <!-- 編集パネル（右側スライドイン） -->\n    <EditorPanel\n      v-if=\"true\"\n      :show-editor=\"showEditor\"\n      :selected-component=\"selectedComponent\"\n      :get-field-info=\"getFieldInfo\"\n      :should-show-basic-field=\"shouldShowBasicField\"\n      :should-show-array-field=\"shouldShowArrayField\"\n      :should-show-array-item-field=\"shouldShowArrayItemField\"\n      :get-input-type=\"getInputType\"\n      :is-checkbox-checked=\"isCheckboxChecked\"\n      :modal-container=\"`.modal-container-${instanceId}`\"\n      @close=\"$emit('close-editor')\"\n      @update:value=\"(key, value) => $emit('update-editor-value', key, value)\"\n      @add:array-item=\"key => $emit('add-array-item', key)\"\n      @remove:array-item=\"(key, index) => $emit('remove-array-item', key, index)\"\n      @update:array-item=\"data => $emit('update-array-item', data)\"\n      @update:checkbox=\"data => $emit('update-checkbox', data)\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { watch, onMounted, nextTick } from 'vue'\n  import DataDisplay from '@/components/editor/DataDisplay.vue'\n  import PartSelector from '@/components/editor/PartSelector.vue'\n  import EditorPanel from '@/components/editor/EditorPanel.vue'\n  import type { Component, PartSection, DataTabType } from '@types'\n\n  // Props定義\n  interface Props {\n    dataTab: DataTabType\n    editablePageData: Component[]\n    localParts: PartSection[]\n    localCommonParts?: PartSection[]\n    localIndividualParts?: PartSection[]\n    parts: PartSection[]\n    commonImages: any[]\n    individualImages: any[]\n    showPartSelector: boolean\n    showNestedPartSelector: boolean\n    showEditor: boolean\n    selectedComponent: Component | null\n    renderComponentWithNested: (component: Component, index?: number) => string\n    getFieldInfo: (component: Component) => any[]\n    shouldShowBasicField: (key: string, value: unknown, component: Component) => boolean\n    shouldShowArrayField: (key: string, value: unknown, component: Component) => boolean\n    shouldShowArrayItemField: (\n      itemKey: string,\n      itemValue: unknown,\n      component: Component,\n      arrayKey?: string,\n      item?: unknown\n    ) => boolean\n    getInputType: (key: string) => string\n    isCheckboxChecked: (component: Component, propKey: string, option: string) => boolean\n    partsData: PartSection[]\n    isTextEditing: boolean\n  }\n\n  // Emits定義\n  interface Emits {\n    (e: 'update:data-tab', value: string): void\n    (e: 'add-part', position?: number): void\n    (e: 'edit-part', component: Component): void\n    (e: 'delete-part', index: number): void\n    (e: 'reorder-parts', newOrder: Component[]): void\n    (e: 'close-part-selector'): void\n    (e: 'select-part', part: any, index?: number): void\n    (e: 'close-nested-part-selector'): void\n    (e: 'select-nested-part', part: any): void\n    (e: 'close-editor'): void\n    (e: 'update-editor-value', key: string, value: any): void\n    (e: 'add-array-item', key: string): void\n    (e: 'remove-array-item', key: string, index: number): void\n    (e: 'update-array-item', data: any): void\n    (e: 'update-checkbox', data: any): void\n  }\n\n  const props = defineProps<Props>()\n  \n  // インスタンス固有のID生成\n  const instanceId = Math.random().toString(36).substr(2, 9)\n  const emit = defineEmits<Emits>()\n  \n  // モーダルコンテナの存在確認と初期化\n  onMounted(async () => {\n    await nextTick()\n    // モーダルコンテナが確実に存在することを確認\n    const containerSelector = `.modal-container-${instanceId}`\n    const container = document.querySelector(containerSelector)\n    if (!container) {\n      console.warn(`モーダルコンテナが見つかりません: ${containerSelector}`)\n    }\n  })\n  \n  // editablePageDataの変更を監視（リアクティブ更新確認用）\n  watch(() => props.editablePageData, (newData) => {\n    // 必要に応じて処理を追加\n  }, { deep: true })\n</script>\n\n","<template>\n  <div class=\"zero-code-data-display\">\n    <div class=\"zero-code-component-header\">\n      <h4>パーツ管理</h4>\n    </div>\n\n    <!-- 検索とフィルター -->\n    <div class=\"zero-code-data-tabs\">\n      <div class=\"zero-code-form-group\">\n        <input\n          v-model=\"searchQuery\"\n          placeholder=\"パーツ名で検索...\"\n          class=\"zero-code-form-input\"\n          @input=\"handleSearch\"\n        >\n      </div>\n      <div class=\"zero-code-form-group\">\n        <select v-model=\"selectedType\" class=\"zero-code-form-select\" @change=\"handleFilter\">\n          <option value=\"\">すべてのType</option>\n          <option v-for=\"type in existingTypes\" :key=\"type\" :value=\"type\">\n            {{ type }}\n          </option>\n        </select>\n      </div>\n    </div>\n\n    <!-- パーツ一覧 -->\n    <div class=\"zero-code-data-content\">\n      <div v-if=\"Array.isArray(filteredParts) && filteredParts.length > 0\" class=\"zero-code-rendered-content\">\n        <div\n          v-for=\"(section, sectionIndex) in filteredParts\"\n          :key=\"sectionIndex\"\n          class=\"zero-code-data-section\"\n        >\n          <div class=\"zero-code-component-header\">\n            <div class=\"zero-code-component-info-header\">\n              <span class=\"zero-code-component-type\">{{ section.type }}</span>\n            </div>\n            <span class=\"zero-code-component-id\">{{ section.module.length }}個のパーツ</span>\n          </div>\n          <div class=\"zero-code-rendered-component\">\n            <div\n              v-for=\"(module, moduleIndex) in section.module\"\n              :key=\"moduleIndex\"\n              class=\"zero-code-draggable-item\"\n            >\n              <div class=\"zero-code-component-header\">\n                <div class=\"zero-code-component-info-header\">\n                  <span class=\"zero-code-component-module\">{{ module.title }}</span>\n                </div>\n                <div class=\"zero-code-header-actions\">\n                  <button\n                    class=\"zero-code-edit-btn\"\n                    @click=\"$emit('edit-part', { type: section.type, module })\"\n                  >\n                    編集\n                  </button>\n                  <button\n                    class=\"zero-code-delete-btn\"\n                    @click=\"$emit('delete-part', { type: section.type, title: module.title })\"\n                  >\n                    削除\n                  </button>\n                </div>\n              </div>\n              <!-- eslint-disable-next-line vue/no-v-html -->\n              <div class=\"zero-code-module-preview\" v-html=\"props.renderPartPreview(module.body)\" />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div v-else class=\"zero-code-no-parts\">\n        <p>登録されたパーツがありません。</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { ref, computed } from 'vue'\n  import type { PartSection } from '@types'\n\n  interface Props {\n    parts: PartSection[]\n    renderPartPreview: (body: string) => string\n  }\n\n  const props = defineProps<Props>()\n\n  const emit = defineEmits<{\n    (e: 'edit-part', part: { type: string; module: { title: string; body: string } }): void\n    (e: 'delete-part', part: { type: string; title: string }): void\n    (e: 'search', query: string): void\n    (e: 'filter', type: string): void\n  }>()\n\n  // 検索とフィルター\n  const searchQuery = ref('')\n  const selectedType = ref('')\n\n  // 既存のタイプ一覧を取得\n  const existingTypes = computed(() => {\n    return Array.from(new Set(props.parts.map(section => section.type)))\n  })\n\n  // フィルタリングされたパーツ一覧\n  const filteredParts = computed(() => {\n    let filtered = [...props.parts]\n\n    // タイプでフィルター\n    if (selectedType.value) {\n      filtered = filtered.filter(section => section.type === selectedType.value)\n    }\n\n    // 検索クエリでフィルター\n    if (searchQuery.value) {\n      const query = searchQuery.value.toLowerCase()\n      filtered = filtered\n        .map(section => ({\n          ...section,\n          module: section.module.filter(\n            m => m.title.toLowerCase().includes(query) || m.body.toLowerCase().includes(query)\n          ),\n        }))\n        .filter(section => section.module.length > 0)\n    }\n\n    return filtered\n  })\n\n  // 検索ハンドラー\n  const handleSearch = (): void => {\n    emit('search', searchQuery.value)\n  }\n\n  // フィルターハンドラー\n  const handleFilter = (): void => {\n    emit('filter', selectedType.value)\n  }\n</script>\n","<template>\n  <div class=\"zero-code-modal-overlay\" @click=\"$emit('close')\">\n    <div class=\"zero-code-part-modal\" @click.stop>\n      <div class=\"zero-code-modal-header\">\n        <div class=\"zero-code-modal-title\">\n          <div class=\"zero-code-title-main\">\n            <h3>{{ isEditing ? 'パーツ編集' : '新規パーツ登録' }}</h3>\n            <span :class=\"['zero-code-badge', partCategory]\">\n              {{ partCategory === 'common' ? '共通パーツ' : '個別パーツ' }}\n            </span>\n          </div>\n          <p class=\"zero-code-modal-subtitle\">\n            {{ isEditing ? 'パーツの内容を編集できます' : '新しいパーツを作成します' }}\n          </p>\n        </div>\n        <button class=\"zero-code-modal-close-btn\" @click=\"$emit('close')\">\n          <span>✖️</span>\n        </button>\n      </div>\n\n      <div class=\"zero-code-modal-body\">\n        <div class=\"zero-code-form-layout\">\n          <!-- 左側: フォーム -->\n          <div class=\"zero-code-form-section\">\n            <div v-if=\"!isEditing\" class=\"zero-code-form-group\">\n              <label for=\"part-type\" class=\"zero-code-form-label\">Type</label>\n              <div class=\"zero-code-type-input-group\">\n                <select id=\"part-type\" v-model=\"formData.type\" class=\"zero-code-form-select\">\n                  <option value=\"\">新しいTypeを選択</option>\n                  <option v-for=\"type in existingTypes\" :key=\"type\" :value=\"type\">\n                    {{ type }}\n                  </option>\n                </select>\n                <input\n                  v-if=\"!formData.type || !existingTypes.includes(formData.type)\"\n                  v-model=\"formData.type\"\n                  placeholder=\"新しいType名を入力\"\n                  class=\"zero-code-form-input\"\n                >\n              </div>\n            </div>\n\n            <div v-if=\"!isEditing\" class=\"zero-code-form-group\">\n              <label for=\"part-title\" class=\"zero-code-form-label\">Title</label>\n              <input\n                id=\"part-title\"\n                v-model=\"formData.title\"\n                placeholder=\"パーツのタイトルを入力\"\n                class=\"zero-code-form-input\"\n              >\n            </div>\n\n            <div class=\"zero-code-form-group\">\n              <label for=\"part-body\" class=\"zero-code-form-label\">HTML Template</label>\n              <div class=\"zero-code-body-editor-container\">\n                <textarea\n                  id=\"part-body\"\n                  v-model=\"formData.body\"\n                  class=\"zero-code-body-editor\"\n                  placeholder=\"HTMLソースを直接編集してください...\"\n                  @input=\"handleBodyInput\"\n                />\n              </div>\n            </div>\n          </div>\n\n          <!-- 右側: プレビュー -->\n          <div class=\"zero-code-preview-section\">\n            <div class=\"zero-code-preview-header\">\n              <h4>プレビュー</h4>\n              <span class=\"zero-code-preview-info\">リアルタイムで表示を確認</span>\n            </div>\n            <div class=\"zero-code-preview-container\">\n              <!-- eslint-disable-next-line vue/no-v-html -->\n              <div class=\"zero-code-preview-content\" v-html=\"renderPartPreview(formData.body)\" />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"zero-code-modal-footer\">\n        <div class=\"zero-code-modal-actions\">\n          <button class=\"zero-code-btn zero-code-btn-secondary\" @click=\"$emit('close')\">\n            キャンセル\n          </button>\n          <button\n            class=\"zero-code-btn zero-code-btn-primary\"\n            :disabled=\"!isValid\"\n            @click=\"handleSave\"\n          >\n            {{ isEditing ? '更新' : '登録' }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { ref, computed } from 'vue'\n\n  interface Props {\n    isEditing?: boolean\n    existingTypes: string[]\n    partCategory?: 'common' | 'individual'\n    editingPart?: {\n      type: string\n      module: {\n        title: string\n        body: string\n      }\n    } | null\n    initialData?: {\n      type: string\n      title: string\n      body: string\n    }\n    renderPartPreview: (body: string) => string\n  }\n\n  const props = withDefaults(defineProps<Props>(), {\n    isEditing: false,\n    partCategory: 'common',\n    editingPart: null,\n    initialData: () => ({\n      type: '',\n      title: '',\n      body: '',\n    }),\n  })\n\n  const emit = defineEmits<{\n    (e: 'close'): void\n    (e: 'save', data: { type: string; title: string; body: string; category: 'common' | 'individual' }): void\n  }>()\n\n  // フォームデータ - 編集モードの場合はeditingPartから初期化\n  const getInitialData = () => {\n    if (props.isEditing && props.editingPart) {\n      return {\n        type: props.editingPart.type,\n        title: props.editingPart.module.title,\n        body: props.editingPart.module.body,\n      }\n    }\n    return {\n      type: props.initialData.type,\n      title: props.initialData.title,\n      body: props.initialData.body,\n    }\n  }\n\n  const formData = ref(getInitialData())\n\n  // バリデーション\n  const isValid = computed(() => {\n    if (props.isEditing) {\n      return formData.value.body.trim() !== ''\n    } else {\n      return (\n        formData.value.type.trim() !== '' &&\n        formData.value.title.trim() !== '' &&\n        formData.value.body.trim() !== ''\n      )\n    }\n  })\n\n  // 本文の入力ハンドラー\n  const handleBodyInput = (): void => {\n    // 必要に応じて追加の処理を実装\n  }\n\n  // 保存ハンドラー\n  const handleSave = (): void => {\n    if (!isValid.value) return\n    emit('save', {\n      type: formData.value.type,\n      title: formData.value.title,\n      body: formData.value.body,\n      category: props.partCategory || 'common',\n    })\n  }\n</script>\n\n","<template>\n  <div class=\"zero-code-tab-content\">\n    <!-- パーツタイプタブ -->\n    <div class=\"zero-code-data-tabs\">\n      <div class=\"zero-code-tab-buttons\">\n        <button\n          v-for=\"tab in partsTabs\"\n          :key=\"tab\"\n          :class=\"['zero-code-data-tab-button', { active: activePartsTab === tab }]\"\n          @click=\"activePartsTab = tab\"\n        >\n          {{ getPartsTabLabel(tab) }}\n        </button>\n      </div>\n    </div>\n\n    <div class=\"zero-code-parts-content\">\n      <!-- 共通パーツタブ -->\n      <div v-if=\"activePartsTab === 'common'\" class=\"zero-code-parts-section\">\n        <div class=\"zero-code-section-header\">\n          <h4>共通パーツ ({{ commonParts.length }}件)</h4>\n          <button class=\"zero-code-add-part-btn\" @click=\"openRegistration('common')\">\n            ＋ 共通パーツ登録\n          </button>\n        </div>\n        <PartsManager\n          :parts=\"commonParts\"\n          :render-part-preview=\"renderPartPreview\"\n          @edit-part=\"editPart\"\n          @delete-part=\"deletePart\"\n        />\n      </div>\n\n      <!-- 個別パーツタブ -->\n      <div v-if=\"activePartsTab === 'individual'\" class=\"zero-code-parts-section\">\n        <div class=\"zero-code-section-header\">\n          <h4>個別パーツ ({{ individualParts.length }}件)</h4>\n          <button class=\"zero-code-add-part-btn\" @click=\"openRegistration('individual')\">\n            ＋ 個別パーツ登録\n          </button>\n        </div>\n        <PartsManager\n          :parts=\"individualParts\"\n          :render-part-preview=\"renderPartPreview\"\n          @edit-part=\"editPart\"\n          @delete-part=\"deletePart\"\n        />\n      </div>\n\n      <!-- データ表示タブ -->\n      <div v-if=\"activePartsTab === 'data'\" class=\"zero-code-parts-section\">\n        <div class=\"zero-code-data-display-section\">\n          <!-- パーツタイプサブタブ -->\n          <div class=\"zero-code-parts-sub-tabs\">\n            <button\n              :class=\"['zero-code-parts-sub-tab-button', { active: activeDataSubTab === 'common' }]\"\n              @click=\"activeDataSubTab = 'common'\"\n            >\n              共通Partsデータ\n            </button>\n            <button\n              :class=\"['zero-code-parts-sub-tab-button', { active: activeDataSubTab === 'individual' }]\"\n              @click=\"activeDataSubTab = 'individual'\"\n            >\n              個別Partsデータ\n            </button>\n          </div>\n\n          <!-- サブタブコンテンツ -->\n          <div class=\"zero-code-parts-sub-content\">\n            <!-- 共通Partsデータ -->\n            <div v-if=\"activeDataSubTab === 'common'\" class=\"zero-code-parts-sub-section\">\n              <div v-if=\"commonParts && commonParts.length > 0\">\n                <pre class=\"zero-code-data-display-pre\">{{ formatToReadableJson(commonParts) }}</pre>\n              </div>\n              <div v-else>\n                <p>共通パーツデータがありません</p>\n              </div>\n            </div>\n\n            <!-- 個別Partsデータ -->\n            <div v-if=\"activeDataSubTab === 'individual'\" class=\"zero-code-parts-sub-section\">\n              <div v-if=\"individualParts && individualParts.length > 0\">\n                <pre class=\"zero-code-data-display-pre\">{{ formatToReadableJson(individualParts) }}</pre>\n              </div>\n              <div v-else>\n                <p>個別パーツデータがありません</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- パーツ登録モーダル -->\n    <PartRegistrationModal\n      v-if=\"showPartRegistration\"\n      :existing-types=\"existingPartTypes\"\n      :render-part-preview=\"renderPartPreview\"\n      :editing-part=\"editingPart\"\n      :is-editing=\"!!editingPart\"\n      :part-category=\"currentPartCategory\"\n      @close=\"closeRegistration\"\n      @save=\"savePart\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { ref, computed } from 'vue'\n  import PartsManager from '@/components/parts/PartsManager.vue'\n  import PartRegistrationModal from '@/components/parts/PartRegistrationModal.vue'\n  import type { PartSection } from '@types'\n\n  type PartsTab = 'common' | 'individual' | 'data'\n  type PartCategory = 'common' | 'individual'\n\n  // パーツセクションをカテゴリ付きで拡張\n  interface CategorizedPartSection extends PartSection {\n    category?: PartCategory\n  }\n\n  // Props定義\n  interface Props {\n    localParts: PartSection[]\n    localCommonParts?: PartSection[]\n    localIndividualParts?: PartSection[]\n    showPartRegistration: boolean\n    existingPartTypes: string[]\n    editingPart: any\n    renderPartPreview: (part: any) => string\n  }\n\n  // Emits定義\n  interface Emits {\n    (e: 'update-parts', parts: PartSection[]): void\n    (e: 'edit-part', part: any): void\n    (e: 'delete-part', part: { type: string; title: string }): void\n    (e: 'show-registration'): void\n    (e: 'close-registration'): void\n    (e: 'save-part', partData: any): void\n  }\n\n  const props = defineProps<Props>()\n  const emit = defineEmits<Emits>()\n\n  // リアクティブデータ\n  const activePartsTab = ref<PartsTab>('common')\n  const currentPartCategory = ref<PartCategory>('common')\n  const activeDataSubTab = ref<'common' | 'individual'>('common')\n\n  // タブの一覧\n  const partsTabs: PartsTab[] = ['common', 'individual', 'data']\n\n  // タブのラベルを取得\n  const getPartsTabLabel = (tab: PartsTab): string => {\n    const labels: Record<PartsTab, string> = {\n      common: '共通パーツ',\n      individual: '個別パーツ',\n      data: 'データ表示',\n    }\n    return labels[tab]\n  }\n\n  // 共通パーツを取得\n  const commonParts = computed(() => {\n    // 新しいpropsが存在する場合はそれを使用、なければ従来の方法でフィルタリング\n    if (props.localCommonParts && props.localCommonParts.length > 0) {\n      return props.localCommonParts\n    }\n    \n    return props.localParts.map(section => ({\n      ...section,\n      module: section.module.filter(part => {\n        const extendedPart = part as any\n        return !extendedPart.category || extendedPart.category === 'common'\n      })\n    })).filter(section => section.module.length > 0)\n  })\n\n  // 個別パーツを取得\n  const individualParts = computed(() => {\n    // 新しいpropsが存在する場合はそれを使用、なければ従来の方法でフィルタリング\n    if (props.localIndividualParts && props.localIndividualParts.length > 0) {\n      return props.localIndividualParts\n    }\n    \n    return props.localParts.map(section => ({\n      ...section,\n      module: section.module.filter(part => {\n        const extendedPart = part as any\n        return extendedPart.category === 'individual'\n      })\n    })).filter(section => section.module.length > 0)\n  })\n\n  // パーツ登録モーダルを開く\n  const openRegistration = (category: PartCategory) => {\n    currentPartCategory.value = category\n    emit('show-registration')\n  }\n\n  // パーツ登録モーダルを閉じる\n  const closeRegistration = () => {\n    emit('close-registration')\n  }\n\n  // パーツ編集\n  const editPart = (part: any) => {\n    // 編集時のカテゴリを設定\n    const extendedPart = part.module as any\n    currentPartCategory.value = extendedPart.category || 'common'\n    emit('edit-part', part)\n  }\n\n  // パーツ削除\n  const deletePart = (part: { type: string; title: string }) => {\n    emit('delete-part', part)\n  }\n\n  // パーツ保存\n  const savePart = (partData: any) => {\n    // カテゴリ情報を付加\n    const extendedPartData = {\n      ...partData,\n      category: currentPartCategory.value\n    }\n    emit('save-part', extendedPartData)\n  }\n\n  // 読みやすいJSON形式に変換\n  const formatToReadableJson = (data: unknown): string => {\n    const formatValue = (obj: unknown, depth: number = 0): string => {\n      const indent = '  '.repeat(depth)\n      const nextIndent = '  '.repeat(depth + 1)\n\n      if (Array.isArray(obj)) {\n        if (obj.length === 0) return '[]'\n        const items = obj.map(item => nextIndent + formatValue(item, depth + 1)).join(',\\n')\n        return `[\\n${items}\\n${indent}]`\n      }\n\n      if (typeof obj === 'object' && obj !== null) {\n        const entries = Object.entries(obj as Record<string, unknown>)\n        if (entries.length === 0) return '{}'\n        \n        const items = entries.map(([key, value]) => {\n          let formattedValue: string\n          \n          if (typeof value === 'string') {\n            // 文字列の場合はエスケープ文字を実際の文字に変換してから表示\n            const cleanString = value\n              .replace(/\\\\n/g, '\\n')\n              .replace(/\\\\t/g, '\\t')\n              .replace(/\\\\\"/g, '\"')\n              .replace(/\\\\'/g, \"'\")\n              .replace(/\\\\\\\\/g, '\\\\')\n            \n            // 改行が含まれる場合はテンプレートリテラル風に表示\n            if (cleanString.includes('\\n')) {\n              const lines = cleanString.split('\\n')\n              const formattedLines = lines.map((line, index) => {\n                if (index === 0) return `\\`${line}`\n                if (index === lines.length - 1) return `${nextIndent}${line}\\``\n                return `${nextIndent}${line}`\n              }).join('\\n')\n              formattedValue = formattedLines\n            } else {\n              formattedValue = `\"${cleanString}\"`\n            }\n          } else {\n            formattedValue = formatValue(value, depth + 1)\n          }\n          \n          return `${nextIndent}\"${key}\": ${formattedValue}`\n        }).join(',\\n')\n        \n        return `{\\n${items}\\n${indent}}`\n      }\n\n      if (typeof obj === 'string') {\n        return `\"${obj.replace(/\"/g, '\\\\\"')}\"`\n      }\n\n      return JSON.stringify(obj)\n    }\n\n    return formatValue(data)\n  }\n\n</script>\n\n","/**\n * Z-Directive処理ユーティリティ\n * processZDirectives関数から分割された機能別の処理モジュール\n */\n\nimport type { Component, ArrayItem } from '@types'\nimport { logger } from '@shared/utils/logger'\n\n/**\n * JavaScript文字列内で安全に使用するためのエスケープ処理\n * @param str エスケープする文字列\n * @returns エスケープされた文字列\n */\nfunction escapeJSString(str: string): string {\n  if (!str) return ''\n  return str\n    .replace(/\\\\/g, '\\\\\\\\') // バックスラッシュ\n    .replace(/'/g, \"\\\\'\") // シングルクォート\n    .replace(/\"/g, '\\\\\"') // ダブルクォート\n    .replace(/\\n/g, '\\\\n') // 改行\n    .replace(/\\r/g, '\\\\r') // キャリッジリターン\n    .replace(/\\t/g, '\\\\t') // タブ\n}\n\n\n// 配列アイテム処理関数を参照（循環インポートを避けるため型のみ定義）\nlet processArrayItemTextReplacement: (\n  itemHtml: string,\n  item: ArrayItem,\n  component: Component,\n  template: string,\n  arrayName: string\n) => string\n\nlet processArrayItemParameterReplacement: (itemHtml: string, item: ArrayItem) => string\n\n// 関数の初期化（useTemplateProcessorから注入）\nexport function injectArrayProcessors(\n  textReplacement: typeof processArrayItemTextReplacement,\n  parameterReplacement: typeof processArrayItemParameterReplacement\n) {\n  processArrayItemTextReplacement = textReplacement\n  processArrayItemParameterReplacement = parameterReplacement\n}\n\n/**\n * z-if条件処理\n */\nexport function processZIf(doc: Document, component: Component): void {\n  const ifElements = doc.querySelectorAll('[z-if]')\n\n  ifElements.forEach((element: Element) => {\n    const condition = element.getAttribute('z-if')\n    if (condition) {\n      const shouldShow = component[condition]\n      if (!shouldShow) {\n        element.remove()\n        // z-if要素を非表示\n      } else {\n        // 条件が満たされた場合、z-if属性を除去\n        element.removeAttribute('z-if')\n        // z-if要素を表示\n      }\n    }\n  })\n}\n\n/**\n * z-for-wrapper処理\n */\nexport function processZForWrapper(doc: Document, component: Component): void {\n  const wrapperElements = doc.querySelectorAll('[z-for-wrapper]')\n  if (wrapperElements.length > 0) {\n    wrapperElements.forEach((element: Element) => {\n      const arrayName = element.getAttribute('z-for-wrapper')\n      if (arrayName) {\n        const arrayData = component[arrayName]\n        if (!Array.isArray(arrayData) || arrayData.length === 0) {\n          element.removeAttribute('z-for-wrapper')\n        } else {\n          element.removeAttribute('z-for-wrapper')\n        }\n      }\n    })\n  }\n}\n\n/**\n * z-for要素の追加ボタン生成\n */\nexport function createAddArrayButton(componentId: string, arrayName: string): string {\n  return `\n    <div class=\"zero-code-add-array-item-button-container\">\n      <button class=\"zero-code-add-array-item-button\" onclick=\"window.addArrayItem('${escapeJSString(componentId)}', '${escapeJSString(arrayName)}')\">\n        <span class=\"zero-code-plus-icon\">＋</span>\n        <span class=\"zero-code-button-text\">${arrayName}を追加</span>\n      </button>\n    </div>\n  `\n}\n\n/**\n * 配列アイテム操作コントロール生成\n */\nfunction createArrayItemControls(componentId: string, arrayName: string, index: number): string {\n  return `\n    <div class=\"zero-code-z-for-controls\" data-component-id=\"${componentId}\" data-array-name=\"${arrayName}\" data-index=\"${index}\">\n      <div class=\"zero-code-z-for-controls-inner\">\n        <button class=\"zero-code-z-for-btn zero-code-z-for-add-btn\" onclick=\"window.addZForArrayItem('${escapeJSString(componentId)}', '${escapeJSString(arrayName)}', ${index})\" title=\"上に追加\">\n          <span class=\"zero-code-control-icon\">＋</span>\n        </button>\n        <span class=\"zero-code-z-for-drag-handle\"\n              draggable=\"true\"\n              onDragStart=\"window.handleZForDragStart(event, '${escapeJSString(componentId)}', '${escapeJSString(arrayName)}', ${index})\"\n              style=\"cursor: grab;\"\n              title=\"ドラッグして並び替え\">⠿</span>\n        <button class=\"zero-code-z-for-btn zero-code-z-for-edit-btn\" onclick=\"window.editZForArrayItem('${escapeJSString(componentId)}', '${escapeJSString(arrayName)}', ${index})\" title=\"編集\">\n          <span class=\"zero-code-control-icon\">✎</span>\n        </button>\n        <button class=\"zero-code-z-for-btn zero-code-z-for-delete-btn\" onclick=\"window.removeZForArrayItem('${escapeJSString(componentId)}', '${escapeJSString(arrayName)}', ${index})\" title=\"削除\">\n          <span class=\"zero-code-control-icon\">✕</span>\n        </button>\n      </div>\n    </div>\n  `\n}\n\n/**\n * z-for要素を配列データでレンダリング\n */\n// 注意: この関数は現在の実装では使用されていません（元の複雑な処理を再現するため）\n// 将来的にシンプルな処理が必要な場合に使用\nexport function renderZForElements(\n  element: Element,\n  arrayData: any[],\n  _component: Component,\n  currentDepth: number,\n  renderNestedComponentWithDepth: (\n    comp: Component,\n    getTemplate: (type: string, moduleName: string) => string,\n    depth: number\n  ) => string,\n  getTemplate: (type: string, moduleName: string) => string\n): string {\n  let content = ''\n\n  arrayData.forEach((item, index) => {\n    // z-for要素の内容を取得\n    let itemHtml = element.innerHTML\n\n    // アイテムのフィールド値を置換\n    Object.keys(item).forEach(key => {\n      if (key !== 'id') {\n        const value = item[key]\n        if (typeof value === 'string') {\n          // テキストフィールドの置換\n          const fieldPattern = new RegExp(`\\\\{\\\\$${key}:([^}]+)\\\\}`, 'g')\n          itemHtml = itemHtml.replace(fieldPattern, value)\n        } else if (Array.isArray(value)) {\n          // 配列フィールド（チェックボックスなど）の置換\n          const fieldPattern = new RegExp(`\\\\(\\\\$${key}\\\\?:([^)]+)\\\\)`, 'g')\n          itemHtml = itemHtml.replace(fieldPattern, value.join(' '))\n        } else {\n          // その他のフィールドの置換\n          const fieldPattern = new RegExp(`\\\\(\\\\$${key}:([^)]+)\\\\)`, 'g')\n          itemHtml = itemHtml.replace(fieldPattern, String(value))\n        }\n      }\n    })\n\n    // ネストした要素がある場合の処理\n    if (item.nested_parts && Array.isArray(item.nested_parts)) {\n      item.nested_parts.forEach((nestedComponent: Component) => {\n        const nestedHtml = renderNestedComponentWithDepth(\n          nestedComponent,\n          getTemplate,\n          currentDepth + 1\n        )\n        itemHtml += nestedHtml\n      })\n    }\n\n    content += `<div class=\"zero-code-z-for-item\" data-item-id=\"${item.id}\" data-index=\"${index}\">${itemHtml}</div>`\n  })\n\n  return content\n}\n\n/**\n * DOM要素でのz-for処理（メイン処理）\n */\nexport function processZForElements(\n  doc: Document,\n  component: Component,\n  _currentDepth: number,\n  _renderNestedComponentWithDepth: (\n    comp: Component,\n    getTemplate: (type: string, moduleName: string) => string,\n    depth: number\n  ) => string,\n  getTemplate: (type: string, moduleName: string) => string\n): void {\n\n  const forElements = doc.querySelectorAll('[z-for]')\n  if (forElements.length > 0) {\n    forElements.forEach((element: Element) => {\n      const arrayName = element.getAttribute('z-for')\n      if (arrayName) {\n        const arrayData = component[arrayName]\n        // z-for配列処理\n\n        if (Array.isArray(arrayData) && arrayData.length > 0) {\n          // 元のテンプレートからz-for要素のテンプレートを取得\n          const originalTemplate = getTemplate(component.type, component.module_name)\n\n          // z-for要素のマッチング（任意要素に対応）\n          const startPattern = new RegExp(`<(\\\\w+)[^>]*z-for=\"${arrayName}\"[^>]*>`)\n          const startMatch = originalTemplate.match(startPattern)\n          const startIndex = startMatch ? originalTemplate.indexOf(startMatch[0]) : -1\n\n          if (startIndex !== -1 && startMatch) {\n            // 開始位置から文字列を検索（任意要素対応）\n            const tagName = startMatch[1] // キャプチャグループからタグ名を取得\n            let depth = 0\n            let endIndex = startIndex\n\n            for (let i = startIndex; i < originalTemplate.length; i++) {\n              // 該当タグの開始をチェック\n              if (originalTemplate.substring(i, i + tagName.length + 1) === `<${tagName}`) {\n                depth++\n              }\n              // 該当タグの終了をチェック\n              else if (originalTemplate.substring(i, i + tagName.length + 3) === `</${tagName}>`) {\n                depth--\n                if (depth === 0) {\n                  endIndex = i + tagName.length + 3\n                  break\n                }\n              }\n            }\n\n            const fullMatch = originalTemplate.substring(startIndex, endIndex)\n            const zForMatch = [fullMatch]\n\n            if (zForMatch && zForMatch[0]) {\n              let itemsHtml = ''\n\n              // z-for属性を除いた属性を抽出（任意要素対応）\n              const startTagMatch = fullMatch.match(new RegExp(`<${tagName}([^>]*z-for=\"[^\"]*\"[^>]*)>`))\n              let attributes = ''\n              if (startTagMatch && startTagMatch[1]) {\n                attributes = startTagMatch[1].replace(/\\s*z-for=\"[^\"]*\"\\s*/, '').trim()\n              }\n\n              // 内容を抽出（完全なテンプレートを取得）\n              const openTagEndIndex = fullMatch.indexOf('>') + 1\n              const closeTagStartIndex = fullMatch.lastIndexOf(`</${tagName}>`)\n              const extractedContent = fullMatch\n                .substring(openTagEndIndex, closeTagStartIndex)\n                .trim()\n\n              if (extractedContent) {\n                const itemTemplate = extractedContent\n                // console.log(`[Z-FOR] ${arrayName}: ${arrayData.length}件処理開始`)\n                // console.log(`[Z-FOR] ${arrayName}配列データ:`, JSON.stringify(arrayData.map((item: any, idx: number) => ({ index: idx, id: item.id, name: item.name }))))\n\n                arrayData.forEach((item: Record<string, unknown>, index: number) => {\n                  let itemHtml = itemTemplate\n\n\n                  // z-for要素編集用のコントロールボタン\n                  const editControls = `<div class=\"zero-code-z-for-controls\" data-component-id=\"${escapeJSString(component.id)}\" data-array-name=\"${escapeJSString(arrayName)}\" data-index=\"${index}\">\n<div class=\"zero-code-z-for-controls-inner\">\n<button class=\"zero-code-z-for-btn zero-code-z-for-add-btn\" onclick=\"window.addZForArrayItem('${escapeJSString(component.id)}', '${escapeJSString(arrayName)}', ${index})\" title=\"上に追加\">\n<span class=\"zero-code-control-icon\">＋</span>\n</button>\n<span class=\"zero-code-z-for-drag-handle\" draggable=\"true\" onDragStart=\"window.handleZForDragStart(event, '${escapeJSString(component.id)}', '${escapeJSString(arrayName)}', ${index})\" title=\"ドラッグして並び替え\">⠿</span>\n<button class=\"zero-code-z-for-btn zero-code-z-for-edit-btn\" onclick=\"window.editZForArrayItem('${escapeJSString(component.id)}', '${escapeJSString(arrayName)}', ${index})\" title=\"編集\">\n<span class=\"zero-code-control-icon\">✎</span>\n</button>\n<button class=\"zero-code-z-for-btn zero-code-z-for-delete-btn\" onclick=\"window.removeZForArrayItem('${escapeJSString(component.id)}', '${escapeJSString(arrayName)}', ${index})\" title=\"削除\">\n<span class=\"zero-code-control-icon\">✕</span>\n</button>\n</div>\n</div>`\n\n                  // テキスト置換の処理（配列アイテム用）\n                  if (processArrayItemTextReplacement) {\n                    itemHtml = processArrayItemTextReplacement(\n                      itemHtml,\n                      item as any,\n                      component,\n                      originalTemplate,\n                      arrayName\n                    )\n                  }\n\n                  // 選択記法の処理（配列アイテム用）\n                  if (processArrayItemParameterReplacement) {\n                    itemHtml = processArrayItemParameterReplacement(itemHtml, item as any)\n                  }\n\n                  // z-記法をネストしたアイテムに対して処理\n                  if (\n                    itemHtml.includes('z-if') ||\n                    itemHtml.includes('z-slot') ||\n                    itemHtml.includes('z-for')\n                  ) {\n                    // アイテムデータを一時的なコンポーネントとして扱って z-記法を処理\n                    const itemDoc = new DOMParser().parseFromString(\n                      `<div>${itemHtml}</div>`,\n                      'text/html'\n                    )\n                    // z-for配列アイテム用の適切なパス生成\n                    const arrayItemPath = `${component.id}_${arrayName}_${index}`\n                    \n                    // 親コンポーネントのデータを継承し、配列アイテムデータをマージ（DOM版）\n                    // ZeroCodeエディタから最新データを取得（並び替え後のデータを確保）\n                    let parentComponent = component\n                    if (typeof window !== 'undefined' && (window as any).getLatestComponentData) {\n                      const latestData = (window as any).getLatestComponentData(component.id)\n                      if (latestData) {\n                        parentComponent = latestData\n                        // console.log(`[Z-FOR検証] ${component.id}の最新データを取得しました`)\n                      }\n                    }\n\n                    const itemComponent = {\n                      ...parentComponent, // 親コンポーネントの最新データを継承（outer_items等を保持）\n                      ...item, // 配列アイテムデータで上書き\n                      type: parentComponent.type,\n                      module_name: parentComponent.module_name,\n                      id: arrayItemPath,\n                    } as Component\n\n                    // z-if処理\n                    processZIf(itemDoc, itemComponent)\n\n                    // z-slot処理（ネストした場合）\n                    const slotElements = itemDoc.querySelectorAll('[z-slot]')\n                    slotElements.forEach((slotElement: Element) => {\n                      const slotName = slotElement.getAttribute('z-slot')\n                      if (slotName && itemComponent[slotName]) {\n                        \n                        // z-for内は簡易表示のみ（編集UIなし）\n                        const nestedParts = itemComponent[slotName]\n                        if (Array.isArray(nestedParts) && nestedParts.length > 0) {\n                          let slotContent = '<div class=\"zero-code-z-for-nested-parts\">'\n                          nestedParts.forEach((part: any, partIndex: number) => {\n                            // 各パーツの前に「上にパーツを追加」ボタンを配置\n                            const addAboveButtonPath = `${component.id}.${arrayName}[${index}].${slotName}`\n                            slotContent += `\n                            <div class=\"zero-code-add-nested-part-button-container\">\n                              <button class=\"zero-code-add-position-part-button\" onclick=\"event.stopPropagation(); window.openNestedPartSelector('${escapeJSString(addAboveButtonPath)}', ${partIndex})\">\n                                <span class=\"zero-code-plus-icon\">＋</span>\n                                <span class=\"zero-code-button-text\">上にパーツを追加</span>\n                              </button>\n                            </div>\n                          `\n                            // z-for内でも完全なレンダリングを実行（メインパーツと同等の処理）\n                            const renderedContent = _renderNestedComponentWithDepth(\n                              part as Component,\n                              getTemplate,\n                              _currentDepth + 2\n                            )\n                            // z-for内のネストパーツ用の特別なパス形式: 親ID.配列名[配列インデックス].スロット名[パーツインデックス]\n                            const nestedPartPath = `${component.id}.${arrayName}[${index}].${slotName}[${partIndex}]`\n                            // 通常のネストパーツと統一されたUI\n                            const depth = _currentDepth + 2\n                            const indentLevel = Math.max(0, depth - 1) * 16\n                            slotContent += `\n                            <div class=\"zero-code-nested-component zero-code-nested-depth-${depth} zero-code-z-for-nested-part\" \n                                 draggable=\"true\"\n                                 data-component-id=\"${part.id}\" \n                                 data-path=\"${nestedPartPath}\" \n                                 data-parent-path=\"${component.id}.${arrayName}[${index}].${slotName}\"\n                                 data-index=\"${partIndex}\"\n                                 data-nested-path=\"${nestedPartPath}\"\n                                 data-slot-name=\"${slotName}\"\n                                 data-part-index=\"${partIndex}\"\n                                 ondragstart=\"window.handleNestedPartDragStart && window.handleNestedPartDragStart(event)\"\n                                 ondragend=\"window.handleNestedPartDragEnd && window.handleNestedPartDragEnd(event)\"\n                                 class=\"zero-code-nested-component\"\n                                 onmousedown=\"this.style.cursor = 'grabbing'\"\n                                 onmouseup=\"this.style.cursor = 'grab'\">\n                              <div class=\"zero-code-component-header zero-code-nested-header\">\n                                <!-- ドラッグハンドル（視覚的インジケーター） -->\n                                <div class=\"zero-code-drag-handle-nested\" title=\"ドラッグして並び替え\">\n                                  ⠿\n                                </div>\n                                <div class=\"zero-code-component-meta\">\n                                  <span class=\"zero-code-component-type\">${part.type}</span>\n                                  <span class=\"zero-code-component-module\">${part.module_name}</span>\n                                </div>\n                                <div class=\"zero-code-header-actions\">\n                                  <button \n                                    class=\"zero-code-collapse-btn\"\n                                    onclick=\"window.toggleNestedCollapse('${escapeJSString(nestedPartPath)}')\"\n                                    title=\"折りたたみ切り替え\"\n                                    id=\"collapse-btn-${escapeJSString(nestedPartPath)}\"\n                                  >\n                                    －\n                                  </button>\n                                  <button class=\"zero-code-edit-button\" onclick=\"window.openNestedEditor('${escapeJSString(nestedPartPath)}')\">編集</button>\n                                  <button class=\"zero-code-delete-button\" onclick=\"window.deleteNestedPart('${escapeJSString(nestedPartPath)}')\">削除</button>\n                                </div>\n                              </div>\n                              <div class=\"zero-code-nested-component-content\" \n                                   id=\"nested-content-${escapeJSString(nestedPartPath)}\"\n                                   ondragover=\"window.handleNestedPartDragOver && window.handleNestedPartDragOver(event)\"\n                                   ondrop=\"window.handleNestedPartDrop && window.handleNestedPartDrop(event)\"\n                                   data-slot-name=\"${slotName}\" \n                                   data-part-index=\"${partIndex}\" \n                                   data-parent-path=\"${component.id}.${arrayName}[${index}].${slotName}\">${renderedContent}</div>\n                            </div>\n                          `\n                          })\n                          // パーツ追加ボタンも追加\n                          const addButtonPath = `${component.id}.${arrayName}[${index}].${slotName}`\n                          slotContent += `\n                          <div class=\"zero-code-add-nested-part-button-container\">\n                            <button class=\"zero-code-add-position-part-button\" onclick=\"event.stopPropagation(); window.openNestedPartSelector('${escapeJSString(addButtonPath)}', ${nestedParts.length})\">\n                              <span class=\"zero-code-plus-icon\">＋</span>\n                              <span class=\"zero-code-button-text\">下にパーツを追加</span>\n                            </button>\n                          </div>\n                        `\n                          slotContent += '</div>'\n                          // 子要素保持: 既存の静的コンテンツのみを保持し、動的コンテンツは置換\n                          const existingContent = slotElement.innerHTML\n                          // zero-code-* クラスの動的要素を除外して静的コンテンツのみ取得\n                          const tempDiv = document.createElement('div')\n                          tempDiv.innerHTML = existingContent\n                          const dynamicElements = tempDiv.querySelectorAll('[class*=\"zero-code-\"]')\n                          dynamicElements.forEach(el => el.remove())\n                          const staticContent = tempDiv.innerHTML.trim()\n                          slotElement.innerHTML = staticContent + slotContent\n                        } else {\n                          const emptySlotPath = `${component.id}.${arrayName}[${index}].${slotName}`\n                          // 子要素保持: 既存の静的コンテンツのみを保持し、動的コンテンツは置換\n                          const existingContent = slotElement.innerHTML\n                          // zero-code-* クラスの動的要素を除外して静的コンテンツのみ取得\n                          const tempDiv = document.createElement('div')\n                          tempDiv.innerHTML = existingContent\n                          const dynamicElements = tempDiv.querySelectorAll('[class*=\"zero-code-\"]')\n                          dynamicElements.forEach(el => el.remove())\n                          const staticContent = tempDiv.innerHTML.trim()\n                          slotElement.innerHTML = staticContent + `\n                          <div class=\"zero-code-z-for-empty-slot\">\n                            スロット \"${slotName}\" は空です\n                            <div class=\"zero-code-add-nested-part-button-container\">\n                              <button class=\"zero-code-add-nested-part-button\" onclick=\"event.stopPropagation(); window.openNestedPartSelector('${escapeJSString(emptySlotPath)}', 0)\">\n                                <span class=\"zero-code-plus-icon\">＋</span>\n                                <span class=\"zero-code-button-text\">パーツを追加</span>\n                              </button>\n                            </div>\n                          </div>\n                        `\n                        }\n                        slotElement.removeAttribute('z-slot')\n                      } else if (slotName) {\n                        const noDataSlotPath = `${component.id}.${arrayName}[${index}].${slotName}`\n                        // 子要素保持: 既存の静的コンテンツのみを保持し、動的コンテンツは置換\n                        const existingContent = slotElement.innerHTML\n                        // zero-code-* クラスの動的要素を除外して静的コンテンツのみ取得\n                        const tempDiv = document.createElement('div')\n                        tempDiv.innerHTML = existingContent\n                        const dynamicElements = tempDiv.querySelectorAll('[class*=\"zero-code-\"]')\n                        dynamicElements.forEach(el => el.remove())\n                        const staticContent = tempDiv.innerHTML.trim()\n                        slotElement.innerHTML = staticContent + `\n                        <div class=\"zero-code-z-for-empty-slot\">\n                          スロット \"${slotName}\" にデータがありません\n                          <div class=\"zero-code-add-nested-part-button-container\">\n                            <button class=\"zero-code-add-nested-part-button\" onclick=\"window.openNestedPartSelector('${escapeJSString(noDataSlotPath)}', 0)\">\n                              <span class=\"zero-code-plus-icon\">＋</span>\n                              <span class=\"zero-code-button-text\">パーツを追加</span>\n                            </button>\n                          </div>\n                        </div>\n                      `\n                        slotElement.removeAttribute('z-slot')\n                      }\n                    })\n\n                    // ネストした z-for 処理\n                    const nestedForElements = itemDoc.querySelectorAll('[z-for]')\n                    if (nestedForElements.length > 0) {\n                      processZForElements(\n                        itemDoc,\n                        itemComponent,\n                        _currentDepth + 1,\n                        _renderNestedComponentWithDepth,\n                        getTemplate\n                      )\n                    }\n\n                    itemHtml = itemDoc.body.innerHTML.replace(/^<div>|<\\/div>$/g, '')\n                    \n                  }\n\n                  // 各アイテムのコンテナと属性を処理\n                  let finalAttributes = attributes\n                  if (finalAttributes.includes('($') && processArrayItemParameterReplacement) {\n                    finalAttributes = processArrayItemParameterReplacement(\n                      finalAttributes,\n                      item as any\n                    )\n                  }\n\n                  // class属性を抽出して統合\n                  let originalClasses = ''\n                  let otherAttributes = finalAttributes\n\n                  let originalStyle = ''\n                  if (finalAttributes) {\n                    // class属性を抽出\n                    const classMatch = finalAttributes.match(/class=\"([^\"]*)\"/)\n                    if (classMatch) {\n                      originalClasses = classMatch[1]\n                    }\n                    \n                    // style属性を抽出\n                    const styleMatch = finalAttributes.match(/style=\"([^\"]*)\"/)\n                    if (styleMatch) {\n                      originalStyle = styleMatch[1]\n                    }\n                    \n                    // class属性とstyle属性以外の属性を取得\n                    otherAttributes = finalAttributes.replace(/\\s*class=\"[^\"]*\"\\s*/, '').replace(/\\s*style=\"[^\"]*\"\\s*/, '').trim()\n                  }\n\n                  // パーツ本来のクラスにzero-code編集クラスを追加\n                  const allClasses = `${originalClasses ? originalClasses + ' ' : ''}zero-code-z-for-item-wrapper`\n                  \n                  // パーツ本来のstyleにcursorを追加\n                  const allStyles = originalStyle ? `${originalStyle}; cursor: grab;` : 'cursor: grab;'\n\n                  // 編集機能用の属性（引用符バランスを保持）\n                  const wrapperAttributes = [\n                    `class=\"${allClasses}\"`,\n                    `draggable=\"true\"`,\n                    `data-component-id=\"${escapeJSString(component.id)}\"`,\n                    `data-array-name=\"${escapeJSString(arrayName)}\"`,\n                    `data-item-index=\"${index}\"`,\n                    `ondragstart=\"window.handleZForDragStart && window.handleZForDragStart(event, '${escapeJSString(component.id)}', '${escapeJSString(arrayName)}', ${index})\"`,\n                    `ondragend=\"window.handleZForDragEnd && window.handleZForDragEnd(event)\"`,\n                    `ondragover=\"window.handleZForArrayItemDragOver && window.handleZForArrayItemDragOver(event)\"`,\n                    `ondrop=\"window.handleZForArrayItemDrop && window.handleZForArrayItemDrop(event)\"`,\n                    `style=\"${allStyles}\"`,\n                    `onmousedown=\"this.style.cursor = 'grabbing'\"`,\n                    `onmouseup=\"this.style.cursor = 'grab'\"`\n                  ].join(' ')\n\n                  // class以外の属性がある場合は追加\n                  let finalWrapperAttributes = wrapperAttributes\n                  if (otherAttributes) {\n                    finalWrapperAttributes += ` ${otherAttributes}`\n                  }\n\n                  // z-for要素をコンテナで包み、編集コントロールを追加\n                  const wrappedItemHtml = `<div ${finalWrapperAttributes}>\n${editControls}\n${itemHtml}\n</div>`\n\n                  itemsHtml += wrappedItemHtml\n                })\n\n\n                // 配列の最後に「追加」ボタンを配置\n                const addLastButton = `<div class=\"zero-code-z-for-add-last-button\">\n<button class=\"zero-code-z-for-btn zero-code-z-for-add-last-btn\" onclick=\"window.addZForArrayItem('${escapeJSString(component.id)}', '${escapeJSString(arrayName)}', ${arrayData.length})\" title=\"最後に追加\">\n<span class=\"zero-code-control-icon\">＋</span>\n</button>\n</div>`\n                itemsHtml += addLastButton\n\n                // z-for処理完了\n\n                // z-for要素を配列展開結果で置換\n                const parent = element.parentNode\n                if (parent) {\n                  const tempDiv = document.createElement('div')\n                  tempDiv.innerHTML = itemsHtml\n\n                  // 生成された各子要素を元の位置に挿入\n                  const fragment = document.createDocumentFragment()\n                  while (tempDiv.firstChild) {\n                    fragment.appendChild(tempDiv.firstChild)\n                  }\n\n                  parent.replaceChild(fragment, element)\n                } else {\n                  element.outerHTML = itemsHtml\n                }\n              }\n            }\n          }\n        } else {\n          // 配列が空または存在しない場合は追加ボタンを表示\n          const emptyArrayButton = `<div class=\"zero-code-z-for-empty-array\">\n<div class=\"zero-code-z-for-empty-message\">\n<p class=\"zero-code-empty-text\">${arrayName}はまだ追加されていません</p>\n<button class=\"zero-code-z-for-btn zero-code-z-for-add-first-btn\" onclick=\"window.addZForArrayItem('${escapeJSString(component.id)}', '${escapeJSString(arrayName)}', 0)\" title=\"最初の要素を追加\">\n<span class=\"zero-code-control-icon\">＋</span>\n<span class=\"zero-code-button-text\">最初の${arrayName}を追加</span>\n</button>\n</div>\n</div>`\n          element.innerHTML = emptyArrayButton\n          element.removeAttribute('z-for')\n        }\n      }\n    })\n\n    // z-for処理後に、すべてのz-for-wrapper属性を除去\n    const remainingWrappers = doc.querySelectorAll('[z-for-wrapper]')\n    remainingWrappers.forEach(element => {\n      element.removeAttribute('z-for-wrapper')\n    })\n  }\n}\n\n/**\n * 正規表現ベースのz-for処理（DOMParserで見つからない場合のフォールバック）\n */\nexport function processZForWithRegex(\n  html: string,\n  component: Component,\n  getTemplate?: (type: string, moduleName: string) => string\n): string {\n  let processedHtml = html\n\n  // 自己終了タグのz-for処理\n  const selfClosingPattern = /<(\\w+)([^>]*z-for=\"([^\"]*)\"[^>]*)\\s*\\/>/g\n  let selfClosingMatch\n  \n  while ((selfClosingMatch = selfClosingPattern.exec(html)) !== null) {\n    const [fullMatch, tagName, attributes, arrayName] = selfClosingMatch\n    const arrayData = component[arrayName]\n    \n    if (Array.isArray(arrayData) && arrayData.length > 0) {\n      let itemsHtml = ''\n      \n      arrayData.forEach((item: Record<string, unknown>, index: number) => {\n        // 自己終了タグのコピーを作成（z-for属性は除去）\n        let itemAttributes = attributes.replace(/\\s*z-for=\"[^\"]*\"\\s*/, '').trim()\n        \n        // 選択記法の処理\n        if (itemAttributes.includes('($') && processArrayItemParameterReplacement) {\n          itemAttributes = processArrayItemParameterReplacement(itemAttributes, item as any)\n        }\n        \n        // テキスト置換の処理\n        Object.keys(item).forEach(key => {\n          if (key !== 'id') {\n            const value = item[key]\n            if (typeof value === 'string') {\n              const fieldPattern = new RegExp(`\\\\{\\\\$${key}:[^}]*\\\\}`, 'g')\n              itemAttributes = itemAttributes.replace(fieldPattern, value)\n            }\n          }\n        })\n        \n        const wrappedSelfClosingTag = `\n          <div class=\"zero-code-z-for-item-wrapper\" \n               data-component-id=\"${component.id}\"\n               data-array-name=\"${arrayName}\"\n               data-item-index=\"${index}\">\n            ${createArrayItemControls(component.id, arrayName, index)}\n            <${tagName}${itemAttributes ? ' ' + itemAttributes : ''} />\n          </div>\n        `\n        \n        itemsHtml += wrappedSelfClosingTag\n      })\n      \n      // 最後に追加ボタン\n      const addLastButton = `\n        <div class=\"zero-code-z-for-add-last-button\">\n          <button class=\"zero-code-z-for-btn zero-code-z-for-add-last-btn\" onclick=\"window.addZForArrayItem('${component.id}', '${arrayName}', ${arrayData.length})\" title=\"最後に追加\">\n            <span class=\"zero-code-control-icon\">＋</span>\n          </button>\n        </div>\n      `\n      itemsHtml += addLastButton\n      \n      processedHtml = processedHtml.replace(fullMatch, itemsHtml)\n    } else {\n      // 空配列の場合は追加ボタン表示\n      processedHtml = processedHtml.replace(fullMatch, createAddArrayButton(component.id, arrayName))\n    }\n  }\n\n  // 通常の要素のz-for処理（任意要素対応）\n  const zForPattern = /<(\\w+)([^>]*z-for=\"([^\"]*)\"[^>]*)>([\\s\\S]*?)<\\/\\1>/g\n  let match\n\n  while ((match = zForPattern.exec(html)) !== null) {\n    const [fullMatch, tagName, attributes, arrayName, content] = match\n    const arrayData = component[arrayName]\n\n    if (Array.isArray(arrayData) && arrayData.length > 0) {\n      // console.log(`[Z-FOR] Regex処理: ${arrayName} ${arrayData.length}件`)\n    }\n\n    if (Array.isArray(arrayData) && arrayData.length > 0) {\n      // 配列データがある場合、各アイテムを処理\n      let itemsHtml = ''\n\n      arrayData.forEach((item: Record<string, unknown>, index: number) => {\n        let itemHtml = content\n\n        // 上に追加ボタン（正規表現版）\n        const addAboveButton = `\n          <div class=\"zero-code-z-for-add-button zero-code-add-above\">\n            <button class=\"zero-code-z-for-add-btn\" onclick=\"window.addArrayItemAt('${escapeJSString(component.id)}', '${escapeJSString(arrayName)}', ${index})\" title=\"上に追加\">\n              <span class=\"zero-code-plus-icon\">＋</span>\n            </button>\n          </div>\n        `\n\n        // テキスト置換の処理（配列アイテム用）\n        if (processArrayItemTextReplacement) {\n          itemHtml = processArrayItemTextReplacement(\n            itemHtml,\n            item as any,\n            component,\n            html,\n            arrayName\n          )\n        }\n\n        // 選択記法の処理（配列アイテム用）\n        if (processArrayItemParameterReplacement) {\n          itemHtml = processArrayItemParameterReplacement(itemHtml, item as any)\n        }\n\n        // z-記法をネストしたアイテムに対して処理\n        if (\n          itemHtml.includes('z-if') ||\n          itemHtml.includes('z-slot') ||\n          itemHtml.includes('z-for')\n        ) {\n          // アイテムデータを一時的なコンポーネントとして扱って z-記法を処理\n          const itemDoc = new DOMParser().parseFromString(`<div>${itemHtml}</div>`, 'text/html')\n          // z-for配列アイテム用の適切なパス生成\n          const arrayItemPath = `${component.id}_${arrayName}_0`\n          // ZeroCodeエディタから最新データを取得（並び替え後のデータを確保）\n          let parentComponent = component\n          if (typeof window !== 'undefined' && (window as any).getLatestComponentData) {\n            const latestData = (window as any).getLatestComponentData(component.id)\n            if (latestData) {\n              parentComponent = latestData\n              // console.log(`[Z-FOR検証] 正規表現版: ${component.id}の最新データを取得しました`)\n            }\n          }\n\n          // itemを優先してcomponentの基本情報のみ継承\n          const itemComponent = {\n            ...item,\n            type: parentComponent.type,\n            module_name: parentComponent.module_name,\n            id: arrayItemPath,\n          } as Component\n\n          // z-if処理\n          processZIf(itemDoc, itemComponent)\n\n          // z-slot処理（正規表現版も簡易表示のみ）\n          const slotElements = itemDoc.querySelectorAll('[z-slot]')\n          slotElements.forEach((slotElement: Element) => {\n            const slotName = slotElement.getAttribute('z-slot')\n            if (slotName && itemComponent[slotName]) {\n              const nestedParts = itemComponent[slotName]\n              if (Array.isArray(nestedParts) && nestedParts.length > 0) {\n                let slotContent = '<div class=\"zero-code-z-for-nested-parts\">'\n                nestedParts.forEach((part: any, partIndex: number) => {\n                  // 各パーツの前に「上にパーツを追加」ボタンを配置（正規表現版）\n                  const addAboveButtonPath = `${component.id}.${arrayName}[0].${slotName}`\n                  slotContent += `\n                    <div class=\"zero-code-add-nested-part-button-container\">\n                      <button class=\"zero-code-add-position-part-button\" onclick=\"window.openNestedPartSelector('${escapeJSString(addAboveButtonPath)}', ${partIndex})\">\n                        <span class=\"zero-code-plus-icon\">＋</span>\n                        <span class=\"zero-code-button-text\">上にパーツを追加</span>\n                      </button>\n                    </div>\n                  `\n                  // ネストパーツの基本的なレンダリング（正規表現版）\n                  let renderedContent = part.content || part.title || part.name || '(内容なし)'\n                  // テンプレートが取得できる場合は簡易処理を試行\n                  if (typeof getTemplate === 'function' && part.type && part.module_name) {\n                    try {\n                      const template = getTemplate(part.type, part.module_name)\n                      if (template) {\n                        // テンプレート記法の完全処理（正規表現版）\n                        let basicHtml = template\n                        Object.keys(part).forEach(key => {\n                          if (key !== 'id' && key !== 'type' && key !== 'module_name') {\n                            const value = part[key]\n                            // テキストフィールドの置換 {$field:default}\n                            const textPattern = new RegExp(`\\\\{\\\\$${key}:[^}]*\\\\}`, 'g')\n                            basicHtml = basicHtml.replace(textPattern, String(value || ''))\n\n                            // 選択記法の置換 ($field:option1|option2)\n                            const selectPattern = new RegExp(`\\\\(\\\\$${key}:([^)]+)\\\\)`, 'g')\n                            basicHtml = basicHtml.replace(selectPattern, String(value || ''))\n\n                            // 条件付き記法の置換 ($field?:option1|option2)\n                            if (Array.isArray(value)) {\n                              const conditionalPattern = new RegExp(\n                                `\\\\(\\\\$${key}\\\\?:([^)]+)\\\\)`,\n                                'g'\n                              )\n                              basicHtml = basicHtml.replace(conditionalPattern, value.join(' '))\n                            } else {\n                              const conditionalPattern = new RegExp(\n                                `\\\\(\\\\$${key}\\\\?:([^)]+)\\\\)`,\n                                'g'\n                              )\n                              basicHtml = basicHtml.replace(conditionalPattern, String(value || ''))\n                            }\n                          }\n                        })\n                        // z-記法（z-slot等）を除去してシンプルなHTMLにする\n                        renderedContent = basicHtml\n                          .replace(/<[^>]*z-[^>]*>/g, '')\n                          .replace(/<div[^>]*z-slot[^>]*>.*?<\\/div>/gs, '')\n                      }\n                    } catch (error) {\n                      logger.warn('z-for内ネストパーツのテンプレート処理エラー:', error)\n                    }\n                  }\n                  // z-for内のネストパーツ用の特別なパス形式（正規表現版）\n                  const nestedPartPath = `${component.id}.${arrayName}[0].${slotName}[${partIndex}]`\n                  slotContent += `\n                    <div class=\"zero-code-z-for-nested-part\">\n                      <div class=\"zero-code-z-for-part-header\">\n                        <small>${part.type || 'unknown'} (ID: ${part.id}) [z-for内]</small>\n                        <div class=\"zero-code-z-for-part-actions\">\n                          <button class=\"zero-code-edit-button\" onclick=\"window.openNestedEditor('${escapeJSString(nestedPartPath)}')\">編集</button>\n                          <button class=\"zero-code-delete-button\" onclick=\"window.deleteNestedPart('${escapeJSString(nestedPartPath)}')\">削除</button>\n                        </div>\n                      </div>\n                      <div>${renderedContent}</div>\n                    </div>\n                  `\n                })\n                // パーツ追加ボタンも追加（正規表現版）\n                const addButtonPath = `${component.id}.${arrayName}[0].${slotName}`\n                slotContent += `\n                  <div class=\"zero-code-add-nested-part-button-container\">\n                    <button class=\"zero-code-add-nested-part-button\" onclick=\"window.openNestedPartSelector('${escapeJSString(addButtonPath)}', ${nestedParts.length})\">\n                      <span class=\"zero-code-plus-icon\">＋</span>\n                      <span class=\"zero-code-button-text\">ネストパーツを追加</span>\n                    </button>\n                  </div>\n                `\n                slotContent += '</div>'\n                // 子要素保持: 既存の静的コンテンツのみを保持し、動的コンテンツは置換\n                const existingContent = slotElement.innerHTML\n                // zero-code-* クラスの動的要素を除外して静的コンテンツのみ取得\n                const tempDiv = document.createElement('div')\n                tempDiv.innerHTML = existingContent\n                const dynamicElements = tempDiv.querySelectorAll('[class*=\"zero-code-\"]')\n                dynamicElements.forEach(el => el.remove())\n                const staticContent = tempDiv.innerHTML.trim()\n                slotElement.innerHTML = staticContent + slotContent\n              } else {\n                // 子要素保持: 既存の静的コンテンツのみを保持し、動的コンテンツは置換\n                const existingContent = slotElement.innerHTML\n                // zero-code-* クラスの動的要素を除外して静的コンテンツのみ取得\n                const tempDiv = document.createElement('div')\n                tempDiv.innerHTML = existingContent\n                const dynamicElements = tempDiv.querySelectorAll('[class*=\"zero-code-\"]')\n                dynamicElements.forEach(el => el.remove())\n                const staticContent = tempDiv.innerHTML.trim()\n                slotElement.innerHTML = staticContent + `\n                  <div class=\"zero-code-z-for-empty-slot\">\n                    スロット \"${slotName}\" は空です\n                    <div class=\"zero-code-add-nested-part-button-container\">\n                      <button class=\"zero-code-add-nested-part-button\" onclick=\"window.openNestedPartSelector('${escapeJSString(component.id)}', 0)\">\n                        <span class=\"zero-code-plus-icon\">＋</span>\n                        <span class=\"zero-code-button-text\">ネストパーツを追加</span>\n                      </button>\n                    </div>\n                  </div>\n                `\n              }\n              slotElement.removeAttribute('z-slot')\n            } else if (slotName) {\n              // 子要素保持: 既存の静的コンテンツのみを保持し、動的コンテンツは置換\n              const existingContent = slotElement.innerHTML\n              // zero-code-* クラスの動的要素を除外して静的コンテンツのみ取得\n              const tempDiv = document.createElement('div')\n              tempDiv.innerHTML = existingContent\n              const dynamicElements = tempDiv.querySelectorAll('[class*=\"zero-code-\"]')\n              dynamicElements.forEach(el => el.remove())\n              const staticContent = tempDiv.innerHTML.trim()\n              slotElement.innerHTML = staticContent + `\n                <div class=\"zero-code-z-for-empty-slot\">\n                  スロット \"${slotName}\" にデータがありません\n                  <div class=\"zero-code-add-nested-part-button-container\">\n                    <button class=\"zero-code-add-nested-part-button\" onclick=\"window.openNestedPartSelector('${escapeJSString(component.id)}', 0)\">\n                      <span class=\"zero-code-plus-icon\">＋</span>\n                      <span class=\"zero-code-button-text\">ネストパーツを追加</span>\n                    </button>\n                  </div>\n                </div>\n              `\n              slotElement.removeAttribute('z-slot')\n            }\n          })\n\n          itemHtml = itemDoc.body.innerHTML.replace(/^<div>|<\\/div>$/g, '')\n        }\n\n        // 各アイテムのコンテナと属性を処理\n        let finalAttributes = attributes.replace(/\\s*z-for=\"[^\"]*\"\\s*/, '').trim()\n        if (finalAttributes.includes('($') && processArrayItemParameterReplacement) {\n          finalAttributes = processArrayItemParameterReplacement(finalAttributes, item as any)\n        }\n\n        // class属性とstyle属性を抽出して統合（正規表現版）\n        let originalClasses = ''\n        let originalStyle = ''\n        let otherAttributes = finalAttributes\n\n        if (finalAttributes) {\n          // class属性を抽出\n          const classMatch = finalAttributes.match(/class=\"([^\"]*)\"/)\n          if (classMatch) {\n            originalClasses = classMatch[1]\n          }\n          \n          // style属性を抽出\n          const styleMatch = finalAttributes.match(/style=\"([^\"]*)\"/)\n          if (styleMatch) {\n            originalStyle = styleMatch[1]\n          }\n          \n          // class属性とstyle属性以外の属性を取得\n          otherAttributes = finalAttributes.replace(/\\s*class=\"[^\"]*\"\\s*/, '').replace(/\\s*style=\"[^\"]*\"\\s*/, '').trim()\n        }\n\n        // パーツ本来のクラスにzero-code編集クラスを追加\n        const allClasses = `${originalClasses ? originalClasses + ' ' : ''}zero-code-z-for-item-wrapper`\n        \n        // パーツ本来のstyleにcursorを追加\n        const allStyles = originalStyle ? `${originalStyle}; cursor: grab;` : 'cursor: grab;'\n\n        // 配列アイテム操作コントロールを追加（正規表現版）\n        const arrayItemControls = `\n          <div class=\"zero-code-z-for-controls\" data-component-id=\"${component.id}\" data-array-name=\"${arrayName}\" data-index=\"${index}\">\n            <div class=\"zero-code-z-for-controls-inner\">\n              <button class=\"zero-code-z-for-btn zero-code-z-for-add-btn\" onclick=\"window.addZForArrayItem('${escapeJSString(component.id)}', '${escapeJSString(arrayName)}', ${index})\" title=\"上に追加\">\n                <span class=\"zero-code-control-icon\">＋</span>\n              </button>\n              <span class=\"zero-code-z-for-drag-handle\"\n                    draggable=\"true\"\n                    onDragStart=\"window.handleZForDragStart(event, '${escapeJSString(component.id)}', '${escapeJSString(arrayName)}', ${index})\"\n                    style=\"cursor: grab;\"\n                    title=\"ドラッグして並び替え\">⠿</span>\n              <button class=\"zero-code-z-for-btn zero-code-z-for-edit-btn\" onclick=\"window.editZForArrayItem('${escapeJSString(component.id)}', '${escapeJSString(arrayName)}', ${index})\" title=\"編集\">\n                <span class=\"control-icon\">✎</span>\n              </button>\n              <button class=\"zero-code-z-for-btn zero-code-z-for-delete-btn\" onclick=\"window.removeZForArrayItem('${escapeJSString(component.id)}', '${escapeJSString(arrayName)}', ${index})\" title=\"削除\">\n                <span class=\"control-icon\">✕</span>\n              </button>\n            </div>\n          </div>\n        `\n\n        // wrapperAttributesの構築（DOM版と統一）\n        let wrapperAttributes = `class=\"${allClasses}\" \n               draggable=\"true\"\n               data-component-id=\"${component.id}\"\n               data-array-name=\"${arrayName}\"\n               data-item-index=\"${index}\"\n               ondragstart=\"window.handleZForDragStart && window.handleZForDragStart(event, '${component.id}', '${arrayName}', ${index})\"\n               ondragend=\"window.handleZForDragEnd && window.handleZForDragEnd(event)\"\n               ondragover=\"window.handleZForArrayItemDragOver && window.handleZForArrayItemDragOver(event)\"\n               ondrop=\"window.handleZForArrayItemDrop && window.handleZForArrayItemDrop(event)\"\n               style=\"${allStyles}\"\n               onmousedown=\"this.style.cursor = 'grabbing'\"\n               onmouseup=\"this.style.cursor = 'grab'\"`\n\n        // class以外の属性がある場合は追加\n        if (otherAttributes) {\n          wrapperAttributes += ` ${otherAttributes}`\n        }\n\n        // 各アイテムを適切なコンテナで包む（DOM版と統一）\n        const wrappedItemHtml = `\n          <div ${wrapperAttributes}>\n            ${arrayItemControls}\n            ${itemHtml}\n          </div>\n        `\n\n        itemsHtml += wrappedItemHtml\n      })\n\n      // 配列の最後に「追加」ボタンを配置（DOM版と統一）\n      const addLastButton = `\n        <div class=\"zero-code-z-for-add-last-button\">\n          <button class=\"zero-code-z-for-btn zero-code-z-for-add-last-btn\" onclick=\"window.addZForArrayItem('${component.id}', '${arrayName}', ${arrayData.length})\" title=\"最後に追加\">\n            <span class=\"zero-code-control-icon\">＋</span>\n          </button>\n        </div>\n      `\n      itemsHtml += addLastButton\n\n      // z-for要素を配列展開結果で置換\n      processedHtml = processedHtml.replace(fullMatch, itemsHtml)\n    } else {\n      // 空配列または存在しない場合は追加ボタンをHTMLに直接挿入\n      // 正規表現z-for空配列に追加ボタンを設置\n      processedHtml = processedHtml.replace(\n        fullMatch,\n        createAddArrayButton(component.id, arrayName)\n      )\n    }\n  }\n\n  return processedHtml\n}\n\n/**\n * z-slot処理\n */\nexport function processZSlot(\n  doc: Document,\n  component: Component,\n  currentDepth: number,\n  renderNestedComponentWithDepth: (\n    comp: Component,\n    getTemplate: (type: string, moduleName: string) => string,\n    depth: number\n  ) => string,\n  _getTemplate: (type: string, moduleName: string) => string\n): void {\n  const slotElements = doc.querySelectorAll('[z-slot]')\n  // z-slot要素発見\n\n  slotElements.forEach((element: Element) => {\n    const slotName = element.getAttribute('z-slot')\n    // z-slot処理\n\n    if (slotName) {\n      const nestedParts = component[slotName]\n      const components = Array.isArray(nestedParts) ? nestedParts : []\n      // ネストパーツ数確認\n\n      if (components.length === 0) {\n        // 空の場合は追加ボタンを設置（子要素保持対応）\n        const existingContent = element.innerHTML\n        // zero-code-* クラスの動的要素を除外して静的コンテンツのみ取得\n        const tempDiv = document.createElement('div')\n        tempDiv.innerHTML = existingContent\n        const dynamicElements = tempDiv.querySelectorAll('[class*=\"zero-code-\"]')\n        dynamicElements.forEach(el => el.remove())\n        const staticContent = tempDiv.innerHTML.trim()\n        element.innerHTML = staticContent + `\n          <div class=\"zero-code-add-nested-part-button-container\">\n            <button class=\"zero-code-add-nested-part-button\" onclick=\"window.openNestedPartSelector('${component.id}', 0)\">\n              <span class=\"zero-code-plus-icon\">＋</span>\n              <span class=\"zero-code-button-text\">ネストパーツを追加</span>\n            </button>\n          </div>\n        `\n        // 空のネストパーツに追加ボタンを設置\n      } else {\n        // ネストパーツがある場合は、編集UI付きで表示（重複防止のため簡易版を使用）\n        // 階層深度を動的に計算\n        let nestedHtml = ''\n\n        components.forEach((child: Component, index: number) => {\n          // コンポーネントIDを直接使用（階層に関係なく一意識別）\n          const childPath = child.id // コンポーネントIDを直接使用\n          const parentPath = component.id\n\n          // 現在の深度を使用（親の深度 + 1）\n          const depth = currentDepth + 1\n          const indentLevel = Math.max(0, depth - 1) * 20 // 階層ごとに20pxずつインデント\n\n          // パーツの上にパーツ追加ボタン\n          nestedHtml += `\n            <div class=\"zero-code-add-nested-part-button-container\">\n              <button class=\"zero-code-add-position-part-button\" onclick=\"window.openNestedPartSelector('${escapeJSString(parentPath)}', ${index})\">\n                <span class=\"zero-code-plus-icon\">＋</span>\n                <span class=\"zero-code-button-text\">上にパーツを追加（${depth}階層目）</span>\n              </button>\n            </div>\n          `\n\n          // パーツ本体（ドラッグ可能）\n          nestedHtml += `\n            <div class=\"nested-component nested-depth-${depth} draggable-nested\" \n                 draggable=\"true\" \n                 data-component-id=\"${child.id}\" \n                 data-path=\"${childPath}\" \n                 data-parent-path=\"${parentPath}\"\n                 data-index=\"${index}\"\n                 class=\"zero-code-nested-component\">\n              <div class=\"zero-code-component-header zero-code-nested-header\">\n                <!-- ドラッグハンドル -->\n                <div class=\"zero-code-drag-handle-nested\">\n                  ⠿\n                </div>\n                <div class=\"zero-code-component-meta\">\n                  <span class=\"zero-code-component-type\">${child.type}</span>\n                  <span class=\"zero-code-component-module\">${child.module_name}</span>\n                </div>\n                <div class=\"zero-code-header-actions\">\n                  <button \n                    class=\"zero-code-collapse-btn\"\n                    onclick=\"window.toggleNestedCollapse('${childPath}')\"\n                    title=\"折りたたみ切り替え\"\n                    id=\"collapse-btn-${childPath}\"\n                  >\n                    －\n                  </button>\n                  <button class=\"zero-code-edit-button\" onclick=\"window.openNestedEditor('${childPath}')\">編集</button>\n                  <button class=\"zero-code-delete-button\" onclick=\"window.deleteNestedPart('${childPath}')\">削除</button>\n                </div>\n              </div>\n              <div class=\"zero-code-nested-component-content\" id=\"nested-content-${childPath}\">\n                ${renderNestedComponentWithDepth(child, _getTemplate, depth)}\n              </div>\n            </div>\n          `\n        })\n\n        // 最後にパーツ追加ボタン\n        nestedHtml += `\n          <div class=\"zero-code-add-nested-part-button-container\">\n            <button class=\"zero-code-add-position-part-button\" onclick=\"window.openNestedPartSelector('${escapeJSString(component.id)}', ${components.length})\">\n              <span class=\"zero-code-plus-icon\">＋</span>\n              <span class=\"zero-code-button-text\">下にパーツを追加（${currentDepth + 1}階層目）</span>\n            </button>\n          </div>\n        `\n\n        // 子要素保持: 既存の静的コンテンツのみを保持し、動的コンテンツは置換\n        const existingContent = element.innerHTML\n        // zero-code-* クラスの動的要素を除外して静的コンテンツのみ取得\n        const tempDiv = document.createElement('div')\n        tempDiv.innerHTML = existingContent\n        const dynamicElements = tempDiv.querySelectorAll('[class*=\"zero-code-\"]')\n        dynamicElements.forEach(el => el.remove())\n        const staticContent = tempDiv.innerHTML.trim()\n        element.innerHTML = staticContent + nestedHtml\n        // ネストパーツを編集UI付きで表示（重複防止版）\n      }\n\n      // z-slot属性を除去\n      element.removeAttribute('z-slot')\n      logger.success(`z-slot属性を除去: ${slotName}`)\n    }\n  })\n}\n","/**\n * Vue.js ディレクティブ保護ユーティリティ\n * 繰り返し記法処理時にv-記法を確実に保持\n */\n\nimport { logger } from '@shared/utils/logger'\nimport { errorHandler, safeExecute, ErrorType } from '@shared/utils/errorHandler'\n\n/**\n * JavaScript文字列内で安全に使用するためのエスケープ処理\n * @param str エスケープする文字列\n * @returns エスケープされた文字列\n */\nfunction escapeJSString(str: string): string {\n  if (!str) return ''\n  return str\n    .replace(/\\\\/g, '\\\\\\\\')    // バックスラッシュ\n    .replace(/'/g, \"\\\\'\")      // シングルクォート\n    .replace(/\"/g, '\\\\\"')      // ダブルクォート\n    .replace(/\\n/g, '\\\\n')     // 改行\n    .replace(/\\r/g, '\\\\r')     // キャリッジリターン\n    .replace(/\\t/g, '\\\\t')     // タブ\n}\n\n/**\n * v-記法の検出パターン\n */\nconst VUE_DIRECTIVE_PATTERNS = [\n  // v-if, v-show, v-for, v-model等\n  /v-[a-zA-Z-]+(?::[a-zA-Z-\\.]+)?=\"[^\"]*\"/g,\n  // @click, @input等のイベントハンドラ\n  /@[a-zA-Z-]+(?:\\.[a-zA-Z-]+)*=\"[^\"]*\"/g,\n  // :class, :style等のバインディング\n  /:[a-zA-Z-]+(?:\\.[a-zA-Z-]+)*=\"[^\"]*\"/g,\n  // v-slot記法\n  /v-slot:[a-zA-Z-]+=\"[^\"]*\"/g,\n  // #slotName記法\n  /#[a-zA-Z-]+=\"[^\"]*\"/g,\n]\n\n/**\n * Vue補間記法の検出パターン\n */\nconst VUE_INTERPOLATION_PATTERNS = [\n  // {{ variable }}\n  /\\{\\{[^}]+\\}\\}/g,\n  // v-text, v-html の内容\n  /v-text=\"[^\"]*\"/g,\n  /v-html=\"[^\"]*\"/g,\n]\n\n/**\n * ディレクティブ保護情報\n */\ninterface DirectivePreservation {\n  html: string\n  directives: Map<string, string>\n  interpolations: Map<string, string>\n}\n\n/**\n * v-記法を一時的なプレースホルダーに置換して保護\n */\nexport function preserveVueDirectives(html: string): DirectivePreservation {\n  return (\n    safeExecute(\n      () => {\n        const directives = new Map<string, string>()\n        const interpolations = new Map<string, string>()\n        let protectedHtml = html\n\n        logger.debug('Vue.jsディレクティブ保護開始', {\n          htmlLength: html.length,\n        })\n\n        // 1. ディレクティブの保護\n        VUE_DIRECTIVE_PATTERNS.forEach((pattern, patternIndex) => {\n          protectedHtml = protectedHtml.replace(pattern, match => {\n            const placeholder = `__VUE_DIR_${patternIndex}_${directives.size}__`\n            directives.set(placeholder, match)\n            logger.debug(`ディレクティブ保護: ${match} → ${placeholder}`)\n            return placeholder\n          })\n        })\n\n        // 2. 補間記法の保護\n        VUE_INTERPOLATION_PATTERNS.forEach((pattern, patternIndex) => {\n          protectedHtml = protectedHtml.replace(pattern, match => {\n            const placeholder = `__VUE_INT_${patternIndex}_${interpolations.size}__`\n            interpolations.set(placeholder, match)\n            logger.debug(`補間記法保護: ${match} → ${placeholder}`)\n            return placeholder\n          })\n        })\n\n        logger.success('Vue.jsディレクティブ保護完了', {\n          directiveCount: directives.size,\n          interpolationCount: interpolations.size,\n          resultLength: protectedHtml.length,\n        })\n\n        return {\n          html: protectedHtml,\n          directives,\n          interpolations,\n        }\n      },\n      errorHandler,\n      'Vue.jsディレクティブ保護中にエラーが発生しました',\n      ErrorType.TEMPLATE\n    ) || {\n      html,\n      directives: new Map(),\n      interpolations: new Map(),\n    }\n  )\n}\n\n/**\n * 保護されたv-記法を復元\n */\nexport function restoreVueDirectives(html: string, preservation: DirectivePreservation): string {\n  return (\n    safeExecute(\n      () => {\n        let restoredHtml = html\n\n        logger.debug('Vue.jsディレクティブ復元開始', {\n          directiveCount: preservation.directives.size,\n          interpolationCount: preservation.interpolations.size,\n        })\n\n        // 1. ディレクティブの復元\n        preservation.directives.forEach((directive, placeholder) => {\n          restoredHtml = restoredHtml.replace(new RegExp(placeholder, 'g'), directive)\n          logger.debug(`ディレクティブ復元: ${placeholder} → ${directive}`)\n        })\n\n        // 2. 補間記法の復元\n        preservation.interpolations.forEach((interpolation, placeholder) => {\n          restoredHtml = restoredHtml.replace(new RegExp(placeholder, 'g'), interpolation)\n          logger.debug(`補間記法復元: ${placeholder} → ${interpolation}`)\n        })\n\n        logger.success('Vue.jsディレクティブ復元完了', {\n          resultLength: restoredHtml.length,\n        })\n\n        return restoredHtml\n      },\n      errorHandler,\n      'Vue.jsディレクティブ復元中にエラーが発生しました',\n      ErrorType.TEMPLATE\n    ) || html\n  )\n}\n\n/**\n * 安全なDOMParser（v-記法保護付き）\n */\nexport function safeDOMParse(html: string): { doc: Document; preservation: DirectivePreservation } {\n  return (\n    safeExecute(\n      () => {\n        // 1. v-記法を保護\n        const preservation = preserveVueDirectives(html)\n\n        // 2. 安全にパース\n        const parser = new DOMParser()\n        const doc = parser.parseFromString(preservation.html, 'text/html')\n\n        logger.debug('安全DOMパース完了', {\n          originalLength: html.length,\n          protectedLength: preservation.html.length,\n          parsedElementCount: doc.body.children.length,\n        })\n\n        return { doc, preservation }\n      },\n      errorHandler,\n      '安全DOMパース中にエラーが発生しました',\n      ErrorType.TEMPLATE\n    ) || {\n      doc: new DOMParser().parseFromString('<div></div>', 'text/html'),\n      preservation: { html, directives: new Map(), interpolations: new Map() },\n    }\n  )\n}\n\n/**\n * v-記法対応のz-for処理\n */\nexport function processZForWithVueSupport(\n  html: string,\n  component: any,\n  arrayName: string,\n  arrayData: any[]\n): string {\n  return (\n    safeExecute(\n      () => {\n        logger.debug('Vue対応z-for処理開始', {\n          arrayName,\n          arrayLength: arrayData.length,\n        })\n\n        // v-記法を保護してからz-for処理\n        const preservation = preserveVueDirectives(html)\n\n        // z-for要素のパターンマッチング（保護されたHTML用・任意要素対応）\n        const zForPattern = new RegExp(\n          `<(\\\\w+)([^>]*z-for=\"${arrayName}\"[^>]*)>([\\\\s\\\\S]*?)</\\\\1>`,\n          'g'\n        )\n        const match = preservation.html.match(zForPattern)\n\n        if (!match || arrayData.length === 0) {\n          // 空配列の場合は追加ボタン\n          return `\n          <div class=\"add-array-item-button-container\">\n            <button class=\"add-array-item-button\" onclick=\"window.addArrayItem('${escapeJSString(component.id)}', '${escapeJSString(arrayName)}')\">\n              <span class=\"plus-icon\">＋</span>\n              <span class=\"button-text\">${arrayName}を追加</span>\n            </button>\n          </div>\n        `\n        }\n\n        // 配列アイテムのレンダリング\n        const itemTemplate = match[0].replace(zForPattern, '$2')\n        const renderedItems = arrayData\n          .map((item: any) => {\n            let itemHtml = itemTemplate\n\n            // フィールド置換\n            Object.keys(item).forEach(key => {\n              if (key !== 'id') {\n                const value = item[key]\n                const patterns = [\n                  new RegExp(`\\\\{\\\\$${key}:([^}]+)\\\\}`, 'g'),\n                  new RegExp(`\\\\(\\\\$${key}:([^)]+)\\\\)`, 'g'),\n                ]\n                patterns.forEach(pattern => {\n                  itemHtml = itemHtml.replace(pattern, String(value))\n                })\n              }\n            })\n\n            return itemHtml\n          })\n          .join('')\n\n        // v-記法を復元\n        const finalHtml = restoreVueDirectives(renderedItems, preservation)\n\n        logger.success('Vue対応z-for処理完了', {\n          arrayName,\n          resultLength: finalHtml.length,\n        })\n\n        return finalHtml\n      },\n      errorHandler,\n      `Vue対応z-for処理中にエラーが発生しました (arrayName: ${arrayName})`,\n      ErrorType.TEMPLATE\n    ) || html\n  )\n}\n\n/**\n * v-記法の検証\n */\nexport function validateVueDirectives(html: string): {\n  isValid: boolean\n  issues: string[]\n  directives: string[]\n} {\n  const issues: string[] = []\n  const directives: string[] = []\n\n  // ディレクティブの抽出\n  VUE_DIRECTIVE_PATTERNS.forEach(pattern => {\n    const matches = html.match(pattern)\n    if (matches) {\n      directives.push(...matches)\n    }\n  })\n\n  // 一般的な問題の検出\n  if (html.includes('v-for') && html.includes('z-for')) {\n    issues.push('v-forとz-forが混在しています。競合の可能性があります。')\n  }\n\n  if (html.includes('{{') && html.includes('{$')) {\n    issues.push('Vue補間記法{{}}とテンプレート記法{$}が混在しています。')\n  }\n\n  return {\n    isValid: issues.length === 0,\n    issues,\n    directives,\n  }\n}\n\n/**\n * 統計情報の取得\n */\nexport function getDirectiveStats(html: string): {\n  directiveCount: number\n  interpolationCount: number\n  directiveTypes: Record<string, number>\n} {\n  let directiveCount = 0\n  let interpolationCount = 0\n  const directiveTypes: Record<string, number> = {}\n\n  VUE_DIRECTIVE_PATTERNS.forEach(pattern => {\n    const matches = html.match(pattern)\n    if (matches) {\n      directiveCount += matches.length\n      matches.forEach(match => {\n        const type = match.split('=')[0].split(':')[0]\n        directiveTypes[type] = (directiveTypes[type] || 0) + 1\n      })\n    }\n  })\n\n  VUE_INTERPOLATION_PATTERNS.forEach(pattern => {\n    const matches = html.match(pattern)\n    if (matches) {\n      interpolationCount += matches.length\n    }\n  })\n\n  return {\n    directiveCount,\n    interpolationCount,\n    directiveTypes,\n  }\n}\n","/**\n * HTML関連のユーティリティ関数\n * 重複していたHTML処理関数を統合\n */\n\n/**\n * HTMLエンティティをデコードする関数\n * @param str HTMLエンティティを含む文字列\n * @returns デコードされた文字列\n */\nexport function decodeHTMLEntities(str: string): string {\n  if (!str) return ''\n  return str\n    .replace(/&lt;/g, '<')\n    .replace(/&gt;/g, '>')\n    .replace(/&amp;/g, '&')\n    .replace(/&quot;/g, '\"')\n    .replace(/&#39;/g, \"'\")\n    .replace(/&nbsp;/g, ' ')\n}\n\n/**\n * JavaScript文字列内で安全に使用するためのエスケープ処理\n * @param str エスケープする文字列\n * @returns エスケープされた文字列\n */\nexport function escapeJSString(str: string): string {\n  if (!str) return ''\n  return str\n    .replace(/\\\\/g, '\\\\\\\\') // バックスラッシュ\n    .replace(/'/g, \"\\\\'\") // シングルクォート\n    .replace(/\"/g, '\\\\\"') // ダブルクォート\n    .replace(/\\n/g, '\\\\n') // 改行\n    .replace(/\\r/g, '\\\\r') // キャリッジリターン\n    .replace(/\\t/g, '\\\\t') // タブ\n}\n\n/**\n * HTMLタグを安全に削除する関数\n * @param str HTMLタグを含む文字列\n * @returns プレーンテキスト\n */\nexport function stripHtmlTags(str: string): string {\n  if (!str) return ''\n  return str.replace(/<[^>]*>/g, '')\n}\n\n/**\n * HTMLコンテンツのクリーンアップ関数\n * @param html クリーンアップするHTML文字列\n * @returns クリーンアップされたHTML文字列\n */\nexport function cleanupHtmlContent(html: string): string {\n  if (!html) return html\n\n  // 末尾の<br>タグを削除（複数の連続する<br>にも対応）\n  let cleaned = html.replace(/(<br\\s*\\/?>)+$/gi, '')\n\n  // 末尾の空白文字も削除\n  cleaned = cleaned.replace(/\\s+$/, '')\n\n  return cleaned\n}","/**\n * 最適化されたテンプレート処理ユーティリティ\n * 複数段階の正規表現処理を統合し、パフォーマンスを大幅に向上\n */\n\nimport type { Component, ArrayItem } from '@types'\nimport { logger } from '@shared/utils/logger'\nimport { errorHandler, safeExecute, ErrorType } from '@shared/utils/errorHandler'\nimport { decodeHTMLEntities } from '@shared/utils/htmlHelpers'\n\n\n/**\n * 統合テンプレート処理\n * 従来の4段階処理を1回のパスで実行\n */\nexport function processTemplateNotationOptimized(\n  html: string,\n  component: Component,\n  template: string\n): string {\n  return (\n    safeExecute(\n      () => {\n        logger.debug(`統合テンプレート処理開始`, {\n          componentId: component.id,\n          htmlLength: html.length,\n        })\n\n        let processedHtml = html\n\n        // 統合正規表現処理：全ての記法を1回のパスで処理\n        processedHtml = processedHtml.replace(\n          /(\\(\\$[^:)]+\\?:[^)]*\\)|\\(\\$[^:)]+:[^)]*\\)|\\{\\$[^:}]+:[^}]*\\})/g,\n          match => {\n            // 条件付き記法の処理 ($param?:option1|option2|)\n            if (match.includes('?:')) {\n              return processConditionalMatch(match, component)\n            }\n\n            // 選択記法の処理 ($param:option1|option2|option3)\n            if (match.startsWith('(') && match.includes(':')) {\n              return processSelectionMatch(match, component)\n            }\n\n            // テキスト置換記法の処理 {$param:デフォルトテキスト}\n            if (match.startsWith('{') && match.includes(':')) {\n              return processTextReplacementMatch(match, component, template)\n            }\n\n            return match\n          }\n        )\n\n        logger.success(`統合テンプレート処理完了`, {\n          componentId: component.id,\n          resultLength: processedHtml.length,\n        })\n\n        return processedHtml\n      },\n      errorHandler,\n      `統合テンプレート処理中にエラーが発生しました (componentId: ${component.id})`,\n      ErrorType.TEMPLATE\n    ) || html\n  )\n}\n\n/**\n * 条件付き記法の最適化処理\n */\nfunction processConditionalMatch(match: string, component: Component): string {\n  const conditionalMatch = match.match(/\\(\\$([^:?]+)\\?:([^)]*)\\)/)\n  if (!conditionalMatch) return match\n\n  const [, paramName, optionsStr] = conditionalMatch\n  const options = optionsStr.split('|')\n  const value = component[paramName]\n\n  if (Array.isArray(value)) {\n    return value.join(' ')\n  } else if (value && options.includes(String(value))) {\n    return String(value)\n  }\n\n  return options[0] || ''\n}\n\n/**\n * 選択記法の最適化処理\n */\nfunction processSelectionMatch(match: string, component: Component): string {\n  const selectionMatch = match.match(/\\(\\$([^:]+):([^)]*)\\)/)\n  if (!selectionMatch) return match\n\n  const [, paramName, optionsStr] = selectionMatch\n  const options = optionsStr.split('|')\n  const value = component[paramName]\n\n  if (value && options.includes(String(value))) {\n    return String(value)\n  }\n\n  return options[0] || ''\n}\n\n/**\n * テキスト置換記法の最適化処理\n */\nfunction processTextReplacementMatch(\n  match: string,\n  component: Component,\n  template: string\n): string {\n  const textMatch = match.match(/\\{\\$([^:]+):([^}]*)\\}/)\n  if (!textMatch) return match\n\n  const [, paramName, defaultText] = textMatch\n  const rawValue = component[paramName]\n  \n  // HTMLエンティティをデコードしてから使用\n  const value = rawValue ? decodeHTMLEntities(String(rawValue)) : decodeHTMLEntities(defaultText)\n\n  // Tiptap適用判定（最適化版）\n  if (shouldApplyTiptapOptimized(template, paramName)) {\n    return `<div class=\"tiptap-content\" data-component-id=\"${component.id}\" data-param-name=\"${paramName}\">${value}</div>`\n  }\n\n  return value\n}\n\n/**\n * Tiptap適用判定の最適化版\n */\nfunction shouldApplyTiptapOptimized(template: string, paramName: string): boolean {\n  // 事前計算済みの正規表現を使用（通常形とエスケープ形の両方）\n  const escapedParamName = paramName.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n  const paramPattern = new RegExp(\n    `\\\\{\\\\$${escapedParamName}:[^}]*\\\\}`,\n    'g'\n  )\n  const escapedParamPattern = new RegExp(\n    `\\\\{\\\\$${escapedParamName}:[^}]*\\\\}`.replace(/\\{/g, '&lt;').replace(/\\}/g, '&gt;'),\n    'g'\n  )\n  \n  let match\n  while ((match = paramPattern.exec(template)) !== null) {\n    const matchStart = match.index\n    \n    // マッチした位置の前後を確認して、属性内かどうかを判定\n    const beforeMatch = template.substring(0, matchStart)\n    const lastOpenBracket = beforeMatch.lastIndexOf('<')\n    const lastCloseBracket = beforeMatch.lastIndexOf('>')\n    \n    // 直前に '<' があり、その後に '>' がない場合は属性内\n    if (lastOpenBracket > lastCloseBracket) {\n      // 属性内のパラメータは編集対象外\n      continue\n    }\n    \n    // コードブロック内かどうかをチェック（複数のパターンに対応）\n    const codeBlockRanges: Array<{ start: number; end: number }> = []\n    \n    // pre, code タグ\n    const preCodePattern = /<(pre|code)[^>]*>[\\s\\S]*?<\\/(pre|code)>/gi\n    // code-block クラスを持つ div\n    const codeBlockDivPattern = /<div[^>]*class=\"[^\"]*code-block[^\"]*\"[^>]*>[\\s\\S]*?<\\/div>/gi\n    \n    const patterns = [preCodePattern, codeBlockDivPattern]\n    \n    patterns.forEach(pattern => {\n      pattern.lastIndex = 0\n      let match: RegExpExecArray | null\n      while ((match = pattern.exec(template)) !== null) {\n        codeBlockRanges.push({\n          start: match.index,\n          end: match.index + match[0].length\n        })\n      }\n    })\n    \n    // マッチした位置がコードブロック内にあるかチェック\n    const isInCodeBlock = codeBlockRanges.some(range => \n      matchStart >= range.start && matchStart <= range.end\n    )\n    \n    if (isInCodeBlock) {\n      continue\n    }\n    \n    // タグ外かつコードブロック外のパラメータが見つかった場合は編集対象\n    return true\n  }\n\n  return false\n}\n\n/**\n * キャッシュ機能付きテンプレート取得\n */\nconst templateCache = new Map<string, string>()\n\nexport function getTemplateOptimized(\n  type: string,\n  moduleName: string,\n  getTemplate: (type: string, moduleName: string) => string\n): string {\n  const key = `${type}:${moduleName}`\n\n  if (templateCache.has(key)) {\n    return templateCache.get(key)!\n  }\n\n  const template = getTemplate(type, moduleName)\n  templateCache.set(key, template)\n\n  return template\n}\n\n/**\n * キャッシュクリア（必要時のみ使用）\n */\nexport function clearTemplateCache(): void {\n  templateCache.clear()\n  logger.debug('テンプレートキャッシュをクリアしました')\n}\n\n/**\n * 配列処理の最適化\n */\nexport function processArrayItemOptimized(\n  itemHtml: string,\n  item: ArrayItem,\n  component: Component,\n  template: string,\n  arrayName: string\n): string {\n  return (\n    safeExecute(\n      () => {\n        let processedHtml = itemHtml\n\n        // アイテムフィールドの一括置換\n        Object.keys(item).forEach(key => {\n          if (key !== 'id') {\n            const value = item[key]\n\n            if (typeof value === 'string') {\n              // HTMLエンティティをデコードしてから使用\n              const decodedValue = decodeHTMLEntities(value)\n              \n              // テキストフィールドの置換\n              const patterns = [\n                { regex: new RegExp(`\\\\{\\\\$${key}:([^}]+)\\\\}`, 'g'), replacement: decodedValue },\n                { regex: new RegExp(`\\\\(\\\\$${key}:([^)]+)\\\\)`, 'g'), replacement: decodedValue },\n              ]\n\n              patterns.forEach(({ regex, replacement }) => {\n                processedHtml = processedHtml.replace(regex, replacement)\n              })\n            } else if (Array.isArray(value)) {\n              // 配列フィールドの置換\n              const regex = new RegExp(`\\\\(\\\\$${key}\\\\?:([^)]+)\\\\)`, 'g')\n              processedHtml = processedHtml.replace(regex, value.join(' '))\n            }\n          }\n        })\n\n        return processedHtml\n      },\n      errorHandler,\n      `配列アイテム処理中にエラーが発生しました`,\n      ErrorType.TEMPLATE\n    ) || itemHtml\n  )\n}\n","/**\n * 最適化されたDOM処理ユーティリティ\n * DOMParserの使用を最適化し、再利用とキャッシュで性能向上\n */\n\nimport type { Component } from '@types'\nimport { logger } from '@shared/utils/logger'\nimport { errorHandler, safeExecute, ErrorType } from '@shared/utils/errorHandler'\nimport { escapeJSString } from '@shared/utils/htmlHelpers'\n\n\n/**\n * 共有DOMParserインスタンス\n */\nconst sharedDOMParser = new DOMParser()\n\n/**\n * パース結果のキャッシュ（同一HTMLの再パースを避ける）\n */\nconst parseCache = new Map<string, Document>()\nconst maxCacheSize = 50 // キャッシュサイズ制限\n\n/**\n * 最適化されたHTML解析\n */\nexport function parseHTMLOptimized(html: string): Document {\n  return (\n    safeExecute(\n      () => {\n        // キャッシュから取得を試行\n        if (parseCache.has(html)) {\n          const cached = parseCache.get(html)\n          if (cached) {\n            logger.debug('DOMParser: キャッシュからヒット')\n            return cached.cloneNode(true) as Document\n          }\n        }\n\n        // 新規パース\n        const doc = sharedDOMParser.parseFromString(html, 'text/html')\n\n        // キャッシュサイズ管理\n        if (parseCache.size >= maxCacheSize) {\n          // 古いエントリを削除（FIFO）\n          const firstKey = parseCache.keys().next().value\n          if (firstKey) {\n            parseCache.delete(firstKey)\n          }\n        }\n\n        // キャッシュに保存\n        parseCache.set(html, doc.cloneNode(true) as Document)\n        logger.debug('DOMParser: 新規パース＆キャッシュ保存')\n\n        return doc\n      },\n      errorHandler,\n      'HTML解析中にエラーが発生しました',\n      ErrorType.TEMPLATE\n    ) || sharedDOMParser.parseFromString('<div></div>', 'text/html')\n  )\n}\n\n/**\n * 軽量な要素検索（DOMParserを使わない版）\n */\nexport function findElementsWithAttribute(\n  html: string,\n  attributeName: string\n): Array<{\n  fullMatch: string\n  attributeValue: string\n  innerContent: string\n}> {\n  return (\n    safeExecute(\n      () => {\n        const results: Array<{ fullMatch: string; attributeValue: string; innerContent: string }> =\n          []\n\n        // 正規表現で要素を検索\n        const pattern = new RegExp(\n          `<([^>]*${attributeName}=\"([^\"]*)\"[^>]*)>([\\\\s\\\\S]*?)</\\\\1>`,\n          'g'\n        )\n        let match\n\n        while ((match = pattern.exec(html)) !== null) {\n          results.push({\n            fullMatch: match[0],\n            attributeValue: match[2],\n            innerContent: match[3],\n          })\n        }\n\n        logger.debug(`軽量要素検索: ${attributeName}属性で${results.length}個発見`)\n        return results\n      },\n      errorHandler,\n      `要素検索中にエラーが発生しました (attribute: ${attributeName})`,\n      ErrorType.TEMPLATE\n    ) || []\n  )\n}\n\n/**\n * z-directive処理の最適化版\n */\nexport function processZDirectivesOptimized(\n  html: string,\n  component: Component,\n  getTemplate: (type: string, moduleName: string) => string,\n  currentDepth: number = 1\n): string {\n  return (\n    safeExecute(\n      () => {\n        logger.debug(`最適化z-directive処理開始`, {\n          componentId: component.id,\n          currentDepth,\n        })\n\n        let processedHtml = html\n\n        // z-if処理（軽量版）\n        processedHtml = processZIfOptimized(processedHtml, component)\n\n        // z-for処理（軽量版）\n        processedHtml = processZForOptimized(processedHtml, component, getTemplate)\n\n        // z-slot処理（従来のDOMParser使用、但し共有インスタンス）\n        processedHtml = processZSlotOptimized(processedHtml, component, currentDepth, getTemplate)\n\n        logger.success(`最適化z-directive処理完了`, {\n          componentId: component.id,\n          resultLength: processedHtml.length,\n        })\n\n        return processedHtml\n      },\n      errorHandler,\n      `z-directive処理中にエラーが発生しました (componentId: ${component.id})`,\n      ErrorType.TEMPLATE\n    ) || html\n  )\n}\n\n/**\n * z-if処理の軽量版（正規表現ベース）\n */\nfunction processZIfOptimized(html: string, component: Component): string {\n  return html.replace(\n    /<([^>]*z-if=\"([^\"]*)\"[^>]*)>([\\\\s\\\\S]*?)<\\/[^>]*>/g,\n    (match, tagAttributes, condition, innerContent) => {\n      const shouldShow = component[condition]\n\n      if (!shouldShow) {\n        logger.debug(`z-if要素を非表示: ${condition}`)\n        return '' // 要素を削除\n      }\n\n      // z-if属性を除去\n      const cleanAttributes = tagAttributes.replace(/\\s*z-if=\"[^\"]*\"\\s*/, ' ').trim()\n      logger.debug(`z-if要素を表示: ${condition}`)\n\n      return `<div ${cleanAttributes}>${innerContent}</div>`\n    }\n  )\n}\n\n/**\n * z-for処理の軽量版（正規表現ベース）\n */\nfunction processZForOptimized(\n  html: string,\n  component: Component,\n  getTemplate: (type: string, moduleName: string) => string\n): string {\n  return html.replace(\n    /<(\\w+)([^>]*z-for=\"([^\"]*)\"[^>]*)>([\\s\\S]*?)<\\/\\1>/g,\n    (match, tagName, attributes, arrayName, innerContent) => {\n      const arrayData = component[arrayName]\n      logger.debug(`z-for処理: ${arrayName}`, {\n        length: Array.isArray(arrayData) ? arrayData.length : 'not array',\n      })\n\n      if (!Array.isArray(arrayData) || arrayData.length === 0) {\n        // 空配列の場合は追加ボタンを表示\n        return `\n          <div class=\"add-array-item-button-container\">\n            <button class=\"add-array-item-button\" onclick=\"window.addArrayItem('${component.id}', '${arrayName}')\">\n              <span class=\"zero-code-plus-icon\">＋</span>\n              <span class=\"zero-code-button-text\">${arrayName}を追加</span>\n            </button>\n          </div>\n        `\n      }\n\n      // 配列アイテムをレンダリング\n      const renderedItems = arrayData\n        .map((item: Record<string, unknown>) => {\n          let itemHtml = innerContent\n\n          // アイテムフィールドの置換\n          Object.keys(item).forEach(key => {\n            if (key !== 'id') {\n              const value = item[key]\n              if (typeof value === 'string') {\n                const patterns = [\n                  new RegExp(`\\\\{\\\\$${key}:([^}]+)\\\\}`, 'g'),\n                  new RegExp(`\\\\(\\\\$${key}:([^)]+)\\\\)`, 'g'),\n                ]\n                patterns.forEach(pattern => {\n                  itemHtml = itemHtml.replace(pattern, value)\n                })\n              } else if (Array.isArray(value)) {\n                const pattern = new RegExp(`\\\\(\\\\$${key}\\\\?:([^)]+)\\\\)`, 'g')\n                itemHtml = itemHtml.replace(pattern, value.join(' '))\n              }\n            }\n          })\n\n          return itemHtml\n        })\n        .join('')\n\n      return renderedItems\n    }\n  )\n}\n\n/**\n * z-slot処理（最適化版、共有DOMParserを使用）\n */\nfunction processZSlotOptimized(\n  html: string,\n  component: Component,\n  currentDepth: number,\n  getTemplate: (type: string, moduleName: string) => string\n): string {\n  const doc = parseHTMLOptimized(html)\n  const slotElements = doc.querySelectorAll('[z-slot]')\n\n  logger.debug(`z-slot要素発見: ${slotElements.length}個`)\n\n  slotElements.forEach((element: Element) => {\n    const slotName = element.getAttribute('z-slot')\n\n    if (slotName) {\n      const nestedParts = component[slotName]\n      const components = Array.isArray(nestedParts) ? nestedParts : []\n\n      if (components.length === 0) {\n        // 空の場合は追加ボタン\n        // 子要素保持対応で追加ボタンを追加\n        const existingContent = element.innerHTML\n        element.innerHTML = existingContent + `\n          <div class=\"zero-code-add-nested-part-button-container\">\n            <button class=\"zero-code-add-nested-part-button\" onclick=\"window.openNestedPartSelector('${escapeJSString(component.id)}', 0)\">\n              <span class=\"zero-code-plus-icon\">＋</span>\n              <span class=\"zero-code-button-text\">ネストパーツを追加</span>\n            </button>\n          </div>\n        `\n      } else {\n        // ネストパーツの編集UI生成（簡略版）\n        const nestedHtml = components\n          .map((child: Component, index: number) => {\n            const depth = currentDepth + 1\n            const indentLevel = Math.max(0, depth - 1) * 20\n\n            return `\n            <div class=\"nested-component nested-depth-${depth}\" style=\"margin-left: ${indentLevel}px;\">\n              <div class=\"component-header\">\n                <span class=\"component-type\">${child.type}</span>\n                <span class=\"component-module\">${child.module_name}</span>\n                <button onclick=\"window.openNestedEditor('${child.id}')\">編集</button>\n                <button onclick=\"window.deleteNestedPart('${child.id}')\">削除</button>\n              </div>\n            </div>\n          `\n          })\n          .join('')\n\n        // 子要素保持対応でネストHTMLを追加\n        const existingContent = element.innerHTML\n        element.innerHTML = existingContent + nestedHtml\n      }\n\n      element.removeAttribute('z-slot')\n    }\n  })\n\n  return doc.body.innerHTML\n}\n\n/**\n * キャッシュクリア\n */\nexport function clearDOMCache(): void {\n  parseCache.clear()\n  logger.debug('DOMキャッシュをクリアしました')\n}\n\n/**\n * メモリ使用量の統計\n */\nexport function getDOMCacheStats(): {\n  cacheSize: number\n  maxSize: number\n  hitRate: number\n} {\n  return {\n    cacheSize: parseCache.size,\n    maxSize: maxCacheSize,\n    hitRate: parseCache.size > 0 ? 1 : 0, // 簡易実装\n  }\n}\n","import { ref } from 'vue'\nimport type { Component, ArrayItem, EditingTextState } from '@types'\nimport {\n  processZIf,\n  processZForWrapper,\n  processZForElements,\n  processZForWithRegex,\n  processZSlot,\n  injectArrayProcessors,\n} from './utils/zDirectiveProcessors'\nimport { restoreVueDirectives, safeDOMParse } from './utils/vueDirectivePreserver'\nimport {\n  processTemplateNotationOptimized,\n  getTemplateOptimized,\n  clearTemplateCache,\n} from './utils/optimizedTemplateProcessor'\nimport { processZDirectivesOptimized, clearDOMCache } from './utils/optimizedDOMProcessor'\nimport { errorHandler, safeExecute, ErrorType } from '@shared/utils/errorHandler'\nimport { escapeJSString, decodeHTMLEntities } from '@shared/utils/htmlHelpers'\n\nexport function useTemplateProcessor(): {\n  editingText: ReturnType<typeof ref<EditingTextState | null>>\n  shouldApplyTiptap: (template: string, paramName: string) => boolean\n  processTextReplacementWithTemplate: (\n    html: string,\n    component: Component,\n    template: string\n  ) => string\n  processArrayItemTextReplacement: (\n    itemHtml: string,\n    item: ArrayItem,\n    component: Component,\n    template: string,\n    arrayName: string\n  ) => string\n  processArrayItemParameterReplacement: (itemHtml: string, item: ArrayItem) => string\n  processSelectionSyntax: (html: string, component: Component) => string\n  processConditionalClassSyntax: (html: string, component: Component) => string\n  processZDirectives: (\n    html: string,\n    component: Component,\n    getTemplate: (type: string, moduleName: string) => string,\n    _parentIndex?: number,\n    currentDepth?: number\n  ) => string\n  renderComponentWithNested: (\n    component: Component,\n    parentIndex: number,\n    getTemplate: (type: string, moduleName: string) => string,\n    renderNestedComponentsWithUICallback: (\n      components: Component[],\n      currentPath: number[],\n      stringifyHierarchyPath: (path: number[]) => string,\n      getTemplate?: (type: string, moduleName: string) => string\n    ) => string\n  ) => string\n  renderComponentWithoutSlot: (\n    component: Component,\n    getTemplate: (type: string, moduleName: string) => string,\n    componentIndex?: number\n  ) => string\n  renderNestedComponentWithDepth: (\n    component: Component,\n    getTemplate: (type: string, moduleName: string) => string,\n    currentDepth: number\n  ) => string\n  renderNestedComponentsWithUI: (\n    components: Component[],\n    currentPath: number[],\n    stringifyHierarchyPath: (path: number[]) => string,\n    getTemplate?: (type: string, moduleName: string) => string\n  ) => string\n  hasNestedSlot: (\n    component: Component,\n    getTemplate: (type: string, moduleName: string) => string\n  ) => boolean\n  renderComponentOptimized: (\n    component: Component,\n    getTemplate: (type: string, moduleName: string) => string,\n    options?: { isPreviewMode?: boolean; maxRecursionDepth?: number }\n  ) => string\n  clearAllCaches: () => void\n} {\n  // 編集状態の管理\n  const editingText = ref<EditingTextState | null>(null)\n\n  // 配列処理関数を注入（遅延評価により循環参照を回避）\n  let injectedArrayProcessors = false\n\n  // テンプレートベースでTiptap適用を判定する関数\n  const shouldApplyTiptap = (template: string, paramName: string): boolean => {\n    // {$param:default}記法が存在すればTiptap対象とする（属性内は使用想定外）\n    const paramPattern = `\\\\{\\\\$${paramName.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')}:[^}]*\\\\}`\n    const regex = new RegExp(paramPattern, 'g')\n\n    let match\n    while ((match = regex.exec(template)) !== null) {\n      const matchStart = match.index\n\n      // マッチした位置の前後を確認して、属性内かどうかを判定\n      const beforeMatch = template.substring(0, matchStart)\n      const lastOpenBracket = beforeMatch.lastIndexOf('<')\n      const lastCloseBracket = beforeMatch.lastIndexOf('>')\n\n      // 直前に '<' があり、その後に '>' がない場合は属性内\n      if (lastOpenBracket > lastCloseBracket) {\n        // 属性内のパラメータは編集対象外\n        continue\n      }\n\n      // コードブロック内かどうかをチェック（複数のパターンに対応）\n      const codeBlockRanges: Array<{ start: number; end: number }> = []\n\n      // pre, code タグ\n      const preCodePattern = /<(pre|code)[^>]*>[\\s\\S]*?<\\/(pre|code)>/gi\n      // code-block クラスを持つ div\n      const codeBlockDivPattern = /<div[^>]*class=\"[^\"]*code-block[^\"]*\"[^>]*>[\\s\\S]*?<\\/div>/gi\n\n      const patterns = [preCodePattern, codeBlockDivPattern]\n\n      patterns.forEach(pattern => {\n        pattern.lastIndex = 0\n        let match: RegExpExecArray | null\n        while ((match = pattern.exec(template)) !== null) {\n          codeBlockRanges.push({\n            start: match.index,\n            end: match.index + match[0].length,\n          })\n        }\n      })\n\n      // マッチした位置がコードブロック内にあるかチェック\n      const isInCodeBlock = codeBlockRanges.some(\n        range => matchStart >= range.start && matchStart <= range.end\n      )\n\n      if (isInCodeBlock) {\n        continue\n      }\n\n      // タグ外かつコードブロック外のパラメータが見つかった場合は編集対象\n      return true\n    }\n\n    return false\n  }\n\n  // シンプルなテキスト置換処理（新アーキテクチャ）\n  const processTextReplacementWithTemplate = (\n    html: string,\n    component: Component,\n    template: string\n  ): string => {\n    return html.replace(/\\{\\$([^:]+):(.*?)\\}/g, (_match, paramName, defaultValue) => {\n      // HTMLエンティティをデコードしてから使用\n      const rawTextValue = String(component[paramName] || defaultValue)\n      const textValue = decodeHTMLEntities(rawTextValue)\n\n      // テンプレートベースでテキスト編集対象かを判定\n      const shouldBeEditable = shouldApplyTiptap(template, paramName)\n\n      if (shouldBeEditable) {\n        // contentパラメータの場合はブロック要素、それ以外はインライン要素\n        if (paramName === 'content') {\n          return `<div class=\"zero-code-rich-editable-text block-editable\" data-component-id=\"${component.id}\" data-param=\"${paramName}\" onclick=\"event.stopPropagation(); if(window.getSelection && window.getSelection().toString().length > 0) return; if(window.startRichTextEdit) window.startRichTextEdit('${component.id}', '${paramName}', this.innerHTML, this);\">${textValue}</div>`\n        } else {\n          return `<span class=\"zero-code-rich-editable-text inline-editable\" data-component-id=\"${component.id}\" data-param=\"${paramName}\" onclick=\"event.stopPropagation(); if(window.getSelection && window.getSelection().toString().length > 0) return; if(window.startRichTextEdit) window.startRichTextEdit('${component.id}', '${paramName}', this.innerHTML, this);\">${textValue}</span>`\n        }\n      }\n\n      return textValue\n    })\n  }\n\n  // 配列アイテムのテキスト置換処理（シンプル版）\n  const processArrayItemTextReplacement = (\n    itemHtml: string,\n    item: ArrayItem,\n    component: Component,\n    template: string,\n    arrayName: string\n  ): string => {\n    return itemHtml.replace(\n      /\\{\\$([^:]+):(.*?)\\}/g,\n      (_innerMatch: string, paramName: string, defaultValue: string) => {\n        // HTMLエンティティをデコードしてから使用\n        const rawTextValue = String(item[paramName] || defaultValue)\n        const textValue = decodeHTMLEntities(rawTextValue)\n\n        // 配列アイテムのテキスト編集対象かを判定\n        const shouldBeEditable = shouldApplyTiptap(template, paramName)\n\n        if (shouldBeEditable) {\n          // 配列アイテム用のユニークID生成\n          const arrayData = component[arrayName] as ArrayItem[]\n          const itemIndex = arrayData.indexOf(item)\n          const uniqueItemId = `${component.id}_${arrayName}_${itemIndex}_${paramName}`\n\n          // contentパラメータの場合はブロック要素、それ以外はインライン要素\n          if (paramName === 'content') {\n            return `<div class=\"zero-code-rich-editable-text array-item-text block-editable\" data-component-id=\"${uniqueItemId}\" data-param=\"${paramName}\" data-array-name=\"${arrayName}\" data-item-index=\"${itemIndex}\" onclick=\"event.stopPropagation(); if(window.getSelection && window.getSelection().toString().length > 0) return; if(window.startRichTextEdit) window.startRichTextEdit('${uniqueItemId}', '${paramName}', this.innerHTML, this);\">${textValue}</div>`\n          } else {\n            return `<span class=\"zero-code-rich-editable-text array-item-text inline-editable\" data-component-id=\"${uniqueItemId}\" data-param=\"${paramName}\" data-array-name=\"${arrayName}\" data-item-index=\"${itemIndex}\" onclick=\"event.stopPropagation(); if(window.getSelection && window.getSelection().toString().length > 0) return; if(window.startRichTextEdit) window.startRichTextEdit('${uniqueItemId}', '${paramName}', this.innerHTML, this);\">${textValue}</span>`\n          }\n        }\n\n        return textValue\n      }\n    )\n  }\n\n  // 配列アイテムのパラメータ置換処理\n  const processArrayItemParameterReplacement = (itemHtml: string, item: ArrayItem): string => {\n    // 1. 条件付き記法（チェックボックス用）: ($param?:option1|option2)\n    let result = itemHtml.replace(\n      /\\(\\$([^:?]+)\\?:(.*?)\\)/g,\n      (_match: string, paramName: string, options: string) => {\n        const value = item[paramName]\n        if (Array.isArray(value)) {\n          // 配列の場合はスペース区切りで結合\n          return value.join(' ')\n        }\n        // 配列でない場合はデフォルト値（最初のオプション）を使用\n        const optionList = options.split('|').filter((opt: string) => opt.trim())\n        return optionList[0] || ''\n      }\n    )\n\n    // 2. 選択記法（ラジオボタン用）: ($param:option1|option2)\n    result = result.replace(\n      /\\(\\$([^:?]+):(.*?)\\)/g,\n      (_innerMatch: string, paramName: string, options: string) => {\n        // まず直接的なプロパティ名をチェック\n        if (item[paramName]) {\n          let value = item[paramName]\n          // 「指定無し」が選択されている場合は空文字列として扱う\n          if (value === '指定無し') {\n            value = ''\n          }\n          // 配列の場合（チェックボックス値）は空白区切りで連結\n          if (Array.isArray(value)) {\n            return value.join(' ')\n          }\n          return String(value)\n        }\n\n        // プロパティ名を直接チェック\n        const propKey = paramName\n        if (item[propKey]) {\n          let value = item[propKey]\n          // 「指定無し」が選択されている場合は空文字列として扱う\n          if (value === '指定無し') {\n            value = ''\n          }\n          // 配列の場合（チェックボックス値）は空白区切りで連結\n          if (Array.isArray(value)) {\n            return value.join(' ')\n          }\n          return String(value)\n        }\n\n        // デフォルト値として最初のオプションを使用\n        const optionList = options.split('|').filter((opt: string) => opt.trim())\n        return optionList[0] || ''\n      }\n    )\n\n    return result\n  }\n\n  // 選択記法の処理\n  const processSelectionSyntax = (html: string, component: Component): string => {\n    return html.replace(/\\(\\$([^:?]+):(.*?)\\)/g, (_match, paramName, options) => {\n      let value = component[paramName]\n\n      // 「指定無し」が選択されている場合は空文字列として扱う\n      if (value === '指定無し') {\n        value = ''\n      }\n\n      // 配列の場合（チェックボックス値）は空白区切りで連結\n      if (Array.isArray(value)) {\n        return value.join(' ')\n      }\n\n      if (value) return String(value)\n\n      // デフォルト値として最初のオプションを使用\n      const optionList = options.split('|').filter((opt: string) => opt.trim())\n      return optionList[0] || ''\n    })\n  }\n\n  // 条件付きクラス記法の処理\n  const processConditionalClassSyntax = (html: string, component: Component): string => {\n    return html.replace(\n      /\\(\\$([^:?]+)\\?:(.*?)\\)/g,\n      (_match: string, paramName: string, _options: string) => {\n        const value = component[paramName]\n        if (Array.isArray(value)) {\n          return value.join(' ')\n        }\n        return String(value || '')\n      }\n    )\n  }\n\n\n  // ネストコンポーネントを含むレンダリング関数\n  const _renderComponentWithNested = (\n    component: Component,\n    parentIndex: number,\n    getTemplate: (type: string, moduleName: string) => string,\n    renderNestedComponentsWithUICallback: (\n      components: Component[],\n      currentPath: number[],\n      stringifyHierarchyPath: (path: number[]) => string,\n      getTemplate?: (type: string, moduleName: string) => string\n    ) => string\n  ): string => {\n    const template = getTemplate(component.type, component.module_name)\n\n    if (!template) {\n      return `<div>テンプレートが見つかりません: ${component.type}/${component.module_name}</div>`\n    }\n\n    let html = template\n\n    // 1. 選択記法の解析 ($param:option1|option2|option3)\n    html = processSelectionSyntax(html, component)\n\n    // 2. 条件付きクラス記法の解析 ($param?:option1|option2|)\n    html = processConditionalClassSyntax(html, component)\n\n    // 3. テキスト置換記法の解析 {$param:デフォルトテキスト}（テンプレートベース判定）\n    html = processTextReplacementWithTemplate(html, component, template)\n\n\n    // 6. z-記法の処理 (z-for, z-slot, z-if, z-for-wrapper)\n    html = processZDirectives(html, component, getTemplate, parentIndex, 1)\n\n    return html\n  }\n\n  // スロット処理を除いたコンポーネントレンダリング（重複防止用）\n  const renderComponentWithoutSlot = (\n    component: Component,\n    getTemplate: (type: string, moduleName: string) => string,\n    componentIndex: number = 0\n  ): string => {\n    // renderComponentWithoutSlot実行\n\n    const template = getTemplate(component.type, component.module_name)\n    if (!template)\n      return `<div>テンプレートが見つかりません: ${component.type}/${component.module_name}</div>`\n\n    let html = template\n\n    // 1. 選択記法の解析 ($param:option1|option2|option3)\n    html = processSelectionSyntax(html, component)\n\n    // 2. 条件付きクラス記法の解析 ($param?:option1|option2|)\n    html = processConditionalClassSyntax(html, component)\n\n    // 3. テキスト置換記法の解析 {$param:デフォルトテキスト}（テンプレートベース判定）\n    html = processTextReplacementWithTemplate(html, component, template)\n\n    // 5. スロット記法は処理しない（重複防止のため）\n\n    // 6. z-記法の処理（ネストコンポーネント用）\n    html = processZDirectives(html, component, getTemplate, componentIndex, 1)\n\n    // renderComponentWithoutSlot完了\n    return html\n  }\n\n  // 深度を考慮したネストコンポーネントレンダリング\n  const renderNestedComponentWithDepth = (\n    component: Component,\n    getTemplate: (type: string, moduleName: string) => string,\n    currentDepth: number,\n    zForContext?: {\n      parentId: string\n      arrayName: string\n      arrayIndex: number\n      slotName: string\n    }\n  ): string => {\n    // renderNestedComponentWithDepth実行\n\n    const template = getTemplate(component.type, component.module_name)\n    if (!template)\n      return `<div>テンプレートが見つかりません: ${component.type}/${component.module_name}</div>`\n\n    let html = template\n\n    // 1. 選択記法の解析 ($param:option1|option2|option3)\n    html = processSelectionSyntax(html, component)\n\n    // 2. 条件付きクラス記法の解析 ($param?:option1|option2|)\n    html = processConditionalClassSyntax(html, component)\n\n    // 3. テキスト置換記法の解析 {$param:デフォルトテキスト}（テンプレートベース判定）\n    html = processTextReplacementWithTemplate(html, component, template)\n\n    // 5. スロット記法は処理しない（重複防止のため）\n\n    // 6. z-記法の処理（深度パラメータ付き）\n    html = processZDirectives(html, component, getTemplate, 0, currentDepth)\n\n    // renderNestedComponentWithDepth完了\n    return html\n  }\n\n  // テンプレート内のスロットで使用する、完全なUIを含むネストコンポーネントレンダリング\n  const renderNestedComponentsWithUI = (\n    components: Component[],\n    currentPath: number[] = [],\n    stringifyHierarchyPath: (path: number[]) => string,\n    getTemplate?: (type: string, moduleName: string) => string\n  ): string => {\n    if (!components || components.length === 0) {\n      return `\n        <div class=\"zero-code-add-nested-part-button-container\">\n          <button class=\"zero-code-add-nested-part-button\" onclick=\"window.openNestedPartSelector('${escapeJSString(stringifyHierarchyPath(currentPath))}', 0)\">\n            <span class=\"zero-code-plus-icon\">＋</span>\n            <span class=\"zero-code-button-text\">ネストパーツを追加（${currentPath.length + 1}階層目）</span>\n          </button>\n        </div>\n      `\n    }\n\n    let html = ''\n\n    components.forEach((child: Component, index: number) => {\n      const childPath = [...currentPath, index]\n      const pathString = stringifyHierarchyPath(childPath)\n      const depth = childPath.length\n      const indentLevel = Math.max(0, depth - 1) * 16\n\n      // パーツの上にパーツ追加ボタン\n      html += `\n        <div class=\"zero-code-add-nested-part-button-container\">\n          <button class=\"zero-code-add-position-part-button\" onclick=\"window.openNestedPartSelector('${escapeJSString(stringifyHierarchyPath(currentPath))}', ${index})\">\n            <span class=\"zero-code-plus-icon\">＋</span>\n            <span class=\"zero-code-button-text\">上にパーツを追加（${currentPath.length + 1}階層目）</span>\n          </button>\n        </div>\n      `\n\n      // パーツ本体（ドラッグ可能）\n      html += `\n        <div class=\"zero-code-nested-component zero-code-nested-depth-${depth} zero-code-draggable-nested\" \n             draggable=\"true\" \n             data-component-id=\"${child.id}\" \n             data-path=\"${pathString}\" \n             data-parent-path=\"${stringifyHierarchyPath(currentPath)}\"\n             data-index=\"${index}\"\n>\n          <div class=\"zero-code-component-header zero-code-nested-header\">\n            <!-- ドラッグハンドル -->\n            <div class=\"zero-code-drag-handle-nested\">\n              ⠿\n            </div>\n            <div class=\"zero-code-component-meta\">\n              <span class=\"zero-code-component-type\">${child.type}</span>\n              <span class=\"zero-code-component-module\">${child.module_name}</span>\n            </div>\n            <div class=\"zero-code-header-actions\">\n              <button \n                class=\"zero-code-collapse-btn\"\n                onclick=\"window.toggleNestedCollapse('${pathString}')\"\n                title=\"折りたたみ切り替え\"\n                id=\"collapse-btn-${pathString}\"\n              >\n                －\n              </button>\n              <button class=\"zero-code-edit-button\" onclick=\"window.openNestedEditor('${pathString}')\">編集</button>\n              <button class=\"zero-code-delete-button\" onclick=\"window.deleteNestedPart('${pathString}')\">削除</button>\n            </div>\n          </div>\n          <div class=\"zero-code-nested-component-content\" id=\"nested-content-${pathString}\">\n            ${getTemplate ? renderComponentWithoutSlot(child, getTemplate) : `<div>テンプレートが見つかりません: ${child.type}/${child.module_name}</div>`}\n          </div>\n          <script>\n            // 折りたたみ状態の初期化\n            if (typeof window !== 'undefined' && window.isNestedCollapsed) {\n              setTimeout(() => {\n                const isCollapsed = window.isNestedCollapsed('${pathString}')\n                const contentElement = document.getElementById('nested-content-${pathString}')\n                const buttonElement = document.getElementById('collapse-btn-${pathString}')\n                \n                if (contentElement && buttonElement) {\n                  if (isCollapsed) {\n                    contentElement.style.display = 'none'\n                    buttonElement.textContent = '＋'\n                    buttonElement.setAttribute('title', '展開')\n                  } else {\n                    contentElement.style.display = 'block'\n                    buttonElement.textContent = '－'\n                    buttonElement.setAttribute('title', '折りたたみ')\n                  }\n                }\n              }, 0)\n            }\n          </script>\n        </div>\n      `\n\n      // 子要素が存在する場合は再帰的にレンダリング\n      if (\n        child.nested_parts &&\n        Array.isArray(child.nested_parts) &&\n        child.nested_parts.length > 0\n      ) {\n        html += renderNestedComponentsWithUI(\n          child.nested_parts,\n          childPath,\n          stringifyHierarchyPath,\n          getTemplate\n        )\n      }\n    })\n\n    // 最後にパーツ追加ボタン\n    html += `\n      <div class=\"zero-code-add-nested-part-button-container\">\n        <button class=\"zero-code-add-position-part-button\" onclick=\"window.openNestedPartSelector('${escapeJSString(stringifyHierarchyPath(currentPath))}', ${components.length})\">\n          <span class=\"zero-code-plus-icon\">＋</span>\n          <span class=\"zero-code-button-text\">下にパーツを追加（${currentPath.length + 1}階層目）</span>\n        </button>\n      </div>\n    `\n\n    return html\n  }\n\n  // 未使用のため削除\n\n  // z-記法の処理\n  const processZDirectives = (\n    html: string,\n    component: Component,\n    getTemplate: (type: string, moduleName: string) => string,\n    _parentIndex: number = 0,\n    currentDepth: number = 1\n  ): string => {\n    return (\n      safeExecute(\n        () => {\n          // z-for処理開始\n\n          // 配列処理関数を注入（初回のみ）\n          if (!injectedArrayProcessors) {\n            injectArrayProcessors(\n              processArrayItemTextReplacement,\n              processArrayItemParameterReplacement\n            )\n            injectedArrayProcessors = true\n          }\n\n          // Vue.jsディレクティブを保護してからDOMParserで解析\n          const { doc, preservation } = safeDOMParse(html)\n\n          // ネスト対応のレンダリング関数（既存の関数をそのまま利用）\n          const renderNestedWithTemplate = (\n            comp: Component,\n            template: (type: string, moduleName: string) => string,\n            depth: number\n          ): string => {\n            return renderNestedComponentWithDepth(comp, template, depth)\n          }\n\n          // 各z-directive処理を順次実行\n          processZIf(doc, component)\n          processZForWrapper(doc, component)\n          \n          // if (component.id === 'div_nested_zfor_001') {\n          // }\n          \n          processZForElements(doc, component, currentDepth, renderNestedWithTemplate, getTemplate)\n          \n          // if (component.id === 'div_nested_zfor_001') {\n          // }\n\n          // DOMParserで見つからない場合の正規表現フォールバック\n          // ※注意：DOM処理が完了していればスキップする\n          const originalForElements = preservation.html.match(/z-for=\"[^\"]*\"/g)\n          const processedForElements = doc.querySelectorAll('[z-for]')\n\n          if (\n            originalForElements &&\n            originalForElements.length > 0 &&\n            processedForElements.length === 0\n          ) {\n            // DOM処理完了のためフォールバックスキップ\n          } else if (processedForElements.length > 0) {\n            // 正規表現フォールバックでもVue.jsディレクティブを保護\n            const processedHtml = processZForWithRegex(preservation.html, component)\n            if (processedHtml !== preservation.html) {\n              // 正規表現で処理された場合、Vue.jsディレクティブを復元して返す\n              return restoreVueDirectives(processedHtml, preservation)\n            }\n          }\n\n          processZSlot(doc, component, currentDepth, renderNestedWithTemplate, getTemplate)\n\n          // エディターコンテンツ内の画像に編集対象クラスを追加\n          const images = doc.querySelectorAll('img')\n          images.forEach((img: Element) => {\n            img.classList.add('zero-code-editable-image')\n          })\n\n          // Vue.jsディレクティブを復元\n          const processedHtml = doc.body.innerHTML\n          const result = restoreVueDirectives(processedHtml, preservation)\n\n          // z-for処理完了\n          // if (component.id === 'div_nested_zfor_001') {\n          //   const hasInnerItems = result.includes('inner_items') || result.includes('ネスト1-1')\n          // }\n\n          return result\n        },\n        errorHandler,\n        `Z-Directive処理中にエラーが発生しました (componentId: ${component.id})`,\n        ErrorType.TEMPLATE\n      ) || html\n    ) // エラー時は元のHTMLを返す\n  }\n\n  // コンポーネントのテンプレートに@slot($nested_parts)@が含まれているかチェック\n  const _hasNestedSlot = (\n    component: Component,\n    getTemplate: (type: string, moduleName: string) => string\n  ): boolean => {\n    const template = getTemplate(component.type, component.module_name)\n    if (!template) return false\n    return template.includes('@slot($nested_parts)@')\n  }\n\n  // 最適化版レンダリング関数\n  const renderComponentOptimized = (\n    component: Component,\n    getTemplate: (type: string, moduleName: string) => string,\n    options: { isPreviewMode?: boolean; maxRecursionDepth?: number } = {}\n  ): string => {\n    return (\n      safeExecute(\n        () => {\n          \n          if (options && options.isPreviewMode === true) {\n            // プレビューモード：編集UI要素なしの軽量レンダリング\n            const previewOptions = { \n              maxRecursionDepth: options.maxRecursionDepth,\n              isPreviewMode: true  // プレビューモードフラグを渡す\n            }\n            const result = renderComponentForPreview(component, getTemplate, previewOptions)\n            return result\n          }\n\n          // 最適化版テンプレート取得\n          const template = getTemplateOptimized(component.type, component.module_name, getTemplate)\n\n          if (!template) {\n            return `<div>テンプレートが見つかりません: ${component.type}/${component.module_name}</div>`\n          }\n\n          // 統合テンプレート処理（4段階を1段階に統合）\n          let html = processTemplateNotationOptimized(template, component, template)\n\n          // 最適化版z-directive処理\n          html = processZDirectivesOptimized(html, component, getTemplate, 1)\n\n          return html\n        },\n        errorHandler,\n        `最適化レンダリング中にエラーが発生しました (componentId: ${component.id})`,\n        ErrorType.TEMPLATE\n      ) || `<div>レンダリングエラー: ${component.id}</div>`\n    )\n  }\n\n  // プレビュー専用レンダリング関数\n  const renderComponentForPreview = (\n    component: Component,\n    getTemplate: (type: string, moduleName: string) => string,\n    options: { maxRecursionDepth?: number; isPreviewMode?: boolean } = {}\n  ): string => {\n    // デバッグログ：プレビューモード処理開始\n    // プレビューモードでも最新データを取得\n    let latestComponent = component\n    if (typeof window !== 'undefined' && (window as any).getLatestComponentData) {\n      const latestData = (window as any).getLatestComponentData(component.id)\n      if (latestData) {\n        latestComponent = latestData\n      }\n    }\n    \n    const template = getTemplate(component.type, component.module_name)\n    if (!template) return ''\n\n    let html = template\n\n    // 自動深度判定またはマニュアル設定\n    let maxDepth = options.maxRecursionDepth\n    if (!maxDepth) {\n      // 自動判定を実行\n      maxDepth = analyzeZForDepth(template)\n    }\n    \n    // プレビューモード用の処理\n    if (options.isPreviewMode) {\n      console.log('🔍 プレビューモード開始 - 元のHTML:', html.substring(0, 200))\n      \n      // プレビューモードでは編集UI要素を生成しない簡素な処理を行う\n      // 1. 選択記法の処理\n      html = processSelectionSyntax(html, latestComponent)\n      console.log('🔍 選択記法処理後:', html.substring(0, 200))\n      \n      // 2. 条件付きクラス記法の処理\n      html = processConditionalClassSyntax(html, latestComponent)\n      console.log('🔍 条件付きクラス処理後:', html.substring(0, 200))\n      \n      // 3. テキスト置換記法の処理  \n      html = processTextReplacementForPreview(html, latestComponent)\n      console.log('🔍 テキスト置換処理後:', html.substring(0, 200))\n      \n      // 4. z-for処理（編集UI要素なし）\n      html = processZForForPreviewOnly(html, latestComponent)\n      console.log('🔍 z-for処理後:', html.substring(0, 200))\n      \n      // 5. 編集UI要素の完全除去\n      html = removeZeroCodeUIClasses(html)\n      console.log('🔍 クリーンアップ後:', html.substring(0, 200))\n    } else {\n      // 通常の編集モード処理\n      // 1. z-directive処理を先に実行（選択記法を処理する前に）\n      html = processZDirectivesForPreview(html, latestComponent, getTemplate, 0, maxDepth)\n      \n      // 2. 選択記法の処理（z-directive処理後に実行）\n      html = processSelectionSyntax(html, latestComponent)\n\n      // 3. 条件付きクラス記法の処理\n      html = processConditionalClassSyntax(html, latestComponent)\n      \n      // 4. テキスト置換記法の処理  \n      html = processTextReplacementForPreview(html, latestComponent)\n\n      // 編集UI要素のみを除去（データは確実に反映済み）\n      html = removeZeroCodeUIClasses(html)\n    }\n\n    return html\n  }\n\n  // z-for要素を除外したz-directive処理（プレビュー専用）\n  const processZDirectivesForPreviewExceptZFor = (\n    html: string,\n    component: Component,\n    getTemplate: (type: string, moduleName: string) => string\n  ): string => {\n    \n    // DOMParserでHTMLを解析\n    const parser = new (globalThis as any).DOMParser()\n    const doc = parser.parseFromString(html, 'text/html')\n\n    // z-if処理\n    const ifElements = doc.querySelectorAll('[z-if]')\n    ifElements.forEach((element: Element) => {\n      const condition = element.getAttribute('z-if')\n      if (condition) {\n        const shouldShow = component[condition]\n        if (!shouldShow) {\n          element.remove()\n        } else {\n          element.removeAttribute('z-if')\n        }\n      }\n    })\n\n    // z-for-wrapper処理\n    const wrapperElements = doc.querySelectorAll('[z-for-wrapper]')\n    wrapperElements.forEach((element: Element) => {\n      const arrayName = element.getAttribute('z-for-wrapper')\n      if (arrayName) {\n        const arrayData = component[arrayName]\n        if (!Array.isArray(arrayData) || arrayData.length === 0) {\n          element.remove()\n        } else {\n          element.removeAttribute('z-for-wrapper')\n        }\n      }\n    })\n\n    // z-slot処理\n    const slotElements = doc.querySelectorAll('[z-slot]')\n    slotElements.forEach((element: Element) => {\n      const slotName = element.getAttribute('z-slot')\n      if (slotName) {\n        if (component[slotName] && Array.isArray(component[slotName])) {\n          const nestedComponents = component[slotName] as Component[]\n          const nestedHtml = nestedComponents\n            .map(child => renderComponentForPreview(child, getTemplate, options))\n            .join('')\n          element.outerHTML = nestedHtml\n        } else {\n          element.remove()\n        }\n      }\n    })\n\n    // プレビューモードでない場合のみ、エディターコンテンツ内の画像に編集対象クラスを追加\n    if (!options.isPreviewMode) {\n      const images = doc.querySelectorAll('img')\n      images.forEach((img: Element) => {\n        img.classList.add('zero-code-editable-image')\n      })\n    }\n\n    return doc.body.innerHTML\n  }\n\n  // zero-code UI装飾クラスを除去（プレビュー専用）\n  const removeZeroCodeUIClasses = (html: string): string => {\n    console.log('🧹 クリーンアップ開始 - 入力HTML:', html.substring(0, 300))\n    \n    // まずHTMLエンティティをデコード\n    let cleanHtml = html\n      .replace(/&lt;/g, '<')\n      .replace(/&gt;/g, '>')\n      .replace(/&amp;/g, '&')\n      .replace(/&quot;/g, '\"')\n      .replace(/&#x27;/g, \"'\")\n    \n    console.log('🧹 HTMLエンティティデコード後:', cleanHtml.substring(0, 300))\n    \n    // DOM解析でクリーンな処理\n    const parser = new DOMParser()\n    const doc = parser.parseFromString(cleanHtml, 'text/html')\n    \n    // zero-code関連のクラスと要素を除去\n    const zeroCodeClasses = [\n      'zero-code-z-for-item-wrapper',\n      'zero-code-field-wrapper', \n      'zero-code-array-item',\n      'zero-code-nested-array',\n      'field-editor',\n      'tiptap-content',\n      'zero-code-z-for-controls',\n      'zero-code-z-for-controls-inner',\n      'zero-code-z-for-btn',\n      'zero-code-z-for-add-btn',\n      'zero-code-z-for-edit-btn',\n      'zero-code-z-for-delete-btn',\n      'zero-code-z-for-drag-handle',\n      'zero-code-nested-part',\n      'zero-code-add-nested-part-button-container',\n      'zero-code-add-nested-part-button',\n      'zero-code-rich-editable-text',\n      'inline-editable',\n      'zero-code-editable-image'\n    ]\n    \n    // 編集用UI要素を先に完全除去\n    const editUISelectors = [\n      '.zero-code-z-for-controls',\n      '.zero-code-add-nested-part-button-container', \n      '.zero-code-z-for-add-last-button',\n      '[onclick*=\"ZForArrayItem\"]',\n      '[onclick*=\"NestedPartSelector\"]',\n      '[onclick*=\"NestedEditor\"]',\n      '[onclick*=\"addZForArrayItem\"]',\n      '[onclick*=\"editZForArrayItem\"]',\n      '[onclick*=\"removeZForArrayItem\"]',\n      '[onclick*=\"startRichTextEdit\"]',\n      '.zero-code-rich-editable-text',\n      '.inline-editable',\n      'span[data-component-id]',\n      'span[onclick*=\"startRichTextEdit\"]'\n    ]\n    \n    editUISelectors.forEach(selector => {\n      const elements = doc.querySelectorAll(selector)\n      elements.forEach(element => {\n        // spanタグの場合は内容だけ残す\n        if (element.tagName.toLowerCase() === 'span') {\n          element.outerHTML = element.innerHTML\n        } else {\n          element.remove()\n        }\n      })\n    })\n    \n    // 全要素からzero-codeクラスを除去\n    const allElements = doc.querySelectorAll('*')\n    allElements.forEach(element => {\n      const classList = element.classList\n      zeroCodeClasses.forEach(className => {\n        if (classList.contains(className)) {\n          classList.remove(className)\n        }\n      })\n      \n      // クラス名にzero-codeを含むものも除去\n      Array.from(classList).forEach(className => {\n        if (className.includes('zero-code')) {\n          classList.remove(className)\n        }\n      })\n      \n      // 空のclass属性を除去\n      if (element.className === '') {\n        element.removeAttribute('class')\n      }\n    })\n    \n    // data属性（編集関連）とonclick属性も除去\n    allElements.forEach(element => {\n      Array.from(element.attributes).forEach(attr => {\n        if (attr.name.startsWith('data-component-id') || \n            attr.name.startsWith('data-field-') ||\n            attr.name.startsWith('data-param-') ||\n            attr.name.startsWith('data-edit-') ||\n            attr.name.includes('contenteditable') ||\n            attr.name === 'onclick' ||\n            attr.name === 'draggable') {\n          element.removeAttribute(attr.name)\n        }\n      })\n    })\n    \n    // 残ったspanタグで囲まれた編集可能テキストを展開\n    const editableSpans = doc.querySelectorAll('span')\n    editableSpans.forEach(span => {\n      // data属性やonclick属性があるspanは編集用なので展開\n      if (span.hasAttribute('data-component-id') || \n          span.hasAttribute('onclick') ||\n          span.classList.contains('zero-code-rich-editable-text') ||\n          span.classList.contains('inline-editable')) {\n        span.outerHTML = span.innerHTML\n      }\n    })\n    \n    // 壊れたimg属性を修正\n    const images = doc.querySelectorAll('img')\n    images.forEach(img => {\n      const alt = img.getAttribute('alt')\n      if (alt && alt.includes('<') && alt.includes('>')) {\n        // altが壊れている場合はシンプルな値に置き換え\n        const cleanAlt = alt.replace(/<[^>]*>/g, '').replace(/&[^;]+;/g, '').trim()\n        img.setAttribute('alt', cleanAlt || 'ロゴ')\n      }\n    })\n    \n    return doc.body.innerHTML\n  }\n\n  // プレビュー専用テキスト置換処理\n  const processTextReplacementForPreview = (html: string, component: Component): string => {\n    return html.replace(/\\{\\$([^:]+):(.*?)\\}/g, (match, paramName, defaultValue) => {\n      const textValue = String(component[paramName] || defaultValue)\n      return decodeHTMLEntities(textValue)\n    })\n  }\n\n  // プレビュー専用z-for処理（編集UI要素なし）\n  const processZForForPreviewOnly = (html: string, component: Component): string => {\n    const parser = new (globalThis as any).DOMParser()\n    const doc = parser.parseFromString(html, 'text/html')\n\n    // z-for要素を処理\n    const zForElements = doc.querySelectorAll('[z-for]')\n    zForElements.forEach((element: Element) => {\n      const arrayName = element.getAttribute('z-for')\n      if (!arrayName) return\n\n      const arrayData = component[arrayName]\n      if (!Array.isArray(arrayData) || arrayData.length === 0) {\n        element.remove()\n        return\n      }\n\n      // 配列データでz-for要素を複製（編集UI要素なし）\n      let htmlToInsert = ''\n      arrayData.forEach((item: any) => {\n        let itemHtml = element.outerHTML\n        // z-for属性を除去\n        itemHtml = itemHtml.replace(/\\s*z-for=\"[^\"]*\"/g, '')\n        \n        // 配列アイテムのパラメータを置換\n        Object.keys(item).forEach(key => {\n          const regex = new RegExp(`\\\\(\\\\$${key}:([^)]+)\\\\)`, 'g')\n          itemHtml = itemHtml.replace(regex, item[key] || '$1')\n        })\n        \n        htmlToInsert += itemHtml\n      })\n\n      element.outerHTML = htmlToInsert\n    })\n\n    return doc.body.innerHTML\n  }\n\n  // テンプレート内のz-forネスト深度を解析する関数\n  const analyzeZForDepth = (template: string): number => {\n    const parser = new (globalThis as any).DOMParser()\n    const doc = parser.parseFromString(`<root>${template}</root>`, 'text/html')\n    \n    // 再帰的に最大ネスト深度を計算\n    const calculateMaxDepth = (element: Element, currentDepth: number = 0): number => {\n      let maxDepth = currentDepth\n      \n      for (const child of Array.from(element.children)) {\n        let childDepth = currentDepth\n        \n        // z-for属性がある場合は深度+1\n        if (child.hasAttribute('z-for')) {\n          childDepth += 1\n        }\n        \n        // 子要素の最大深度を再帰的に計算\n        const childMaxDepth = calculateMaxDepth(child, childDepth)\n        maxDepth = Math.max(maxDepth, childMaxDepth)\n      }\n      \n      return maxDepth\n    }\n    \n    const rootElement = doc.body.querySelector('root')\n    if (!rootElement) return 3 // フォールバック\n    \n    const depth = calculateMaxDepth(rootElement)\n    // 安全マージンとして+2を追加\n    return Math.max(depth + 2, 3)\n  }\n\n  // プレビュー専用z-directive処理\n  const processZDirectivesForPreview = (\n    html: string,\n    component: Component,\n    getTemplate: (type: string, moduleName: string) => string,\n    recursionDepth: number = 0,\n    maxRecursionDepth?: number\n  ): string => {\n    \n    // DOMParserでHTMLを解析\n    const parser = new (globalThis as any).DOMParser()\n    const doc = parser.parseFromString(html, 'text/html')\n\n    // z-if処理\n    const ifElements = doc.querySelectorAll('[z-if]')\n    ifElements.forEach((element: Element) => {\n      const condition = element.getAttribute('z-if')\n      if (condition) {\n        const shouldShow = component[condition]\n        if (!shouldShow) {\n          element.remove()\n        } else {\n          element.removeAttribute('z-if')\n        }\n      }\n    })\n\n    // z-for-wrapper処理\n    const wrapperElements = doc.querySelectorAll('[z-for-wrapper]')\n    wrapperElements.forEach((element: Element) => {\n      const arrayName = element.getAttribute('z-for-wrapper')\n      if (arrayName) {\n        const arrayData = component[arrayName]\n        if (!Array.isArray(arrayData) || arrayData.length === 0) {\n          element.remove()\n        } else {\n          element.removeAttribute('z-for-wrapper')\n        }\n      }\n    })\n\n    // 初回呼び出し時に自動深度判定を実行\n    if (recursionDepth === 0 && !maxRecursionDepth) {\n      const originalTemplate = getTemplate(component.type, component.module_name)\n      maxRecursionDepth = analyzeZForDepth(originalTemplate)\n    }\n    \n    // デフォルト値設定\n    const finalMaxDepth = maxRecursionDepth ?? 5\n    \n    // 動的再帰深度制限\n    if (recursionDepth >= finalMaxDepth) {\n      // 深度制限に達した場合は z-for以外のみ処理\n      return processZDirectivesForPreviewExceptZFor(html, component, getTemplate)\n    }\n    \n    // z-for処理（ネスト対応版）- 複数パスで処理\n    let processedAnyZFor = true\n    let passCount = 0\n    \n    while (processedAnyZFor && passCount < 3) { // 最大3パスまで処理\n      processedAnyZFor = false\n      passCount++\n      \n      const forElements = Array.from(doc.querySelectorAll('[z-for]')) as Element[]\n      \n      \n      forElements.forEach((element: Element) => {\n        const arrayName = element.getAttribute('z-for')\n        \n        // 処理済みマーキングをチェック（重複処理防止）\n        if (element.hasAttribute('data-zfor-processed')) {\n          return // 既に処理済みの要素はスキップ\n        }\n      \n      if (arrayName) {\n        // プレビューモードでも最新データを取得（ネストしたz-for要素用）\n        let sourceComponent = component\n        if (typeof window !== 'undefined' && (window as any).getLatestComponentData) {\n          // ルートコンポーネントから最新データを取得\n          const rootId = component.id.split('_')[0] + '_' + component.id.split('_')[1] + '_' + component.id.split('_')[2] + '_' + component.id.split('_')[3]\n          const latestData = (window as any).getLatestComponentData(rootId)\n          if (latestData) {\n            sourceComponent = latestData\n          }\n        }\n        \n        // 配列データを適切なソースから取得\n        let arrayData = component[arrayName]\n        if (!arrayData && sourceComponent[arrayName]) {\n          arrayData = sourceComponent[arrayName]\n        }\n        \n        // ネストしたz-for要素の場合、より具体的な検索を実行\n        if (!arrayData && arrayName === 'items') {\n          // items配列は、categories配列内の各要素に存在する\n          if (typeof window !== 'undefined' && (window as any).getLatestComponentData) {\n            const rootId = component.id.includes('_categories_') ? component.id.split('_categories_')[0] : \n                          component.id.split('_')[0] + '_' + component.id.split('_')[1] + '_' + component.id.split('_')[2] + '_' + component.id.split('_')[3]\n            \n            const latestRootData = (window as any).getLatestComponentData(rootId)\n            \n            if (latestRootData && latestRootData.categories) {\n              // 現在のコンポーネントIDからカテゴリインデックスを特定\n              const categoryMatch = component.id.match(/_categories_(\\d+)/)\n              \n              if (categoryMatch) {\n                const categoryIndex = parseInt(categoryMatch[1])\n                \n                if (latestRootData.categories[categoryIndex] && latestRootData.categories[categoryIndex].items) {\n                  arrayData = latestRootData.categories[categoryIndex].items\n                }\n              }\n            }\n          }\n        }\n        \n        \n        \n        if (Array.isArray(arrayData) && arrayData.length > 0) {\n          // 処理開始前に要素をマーキング\n          element.setAttribute('data-zfor-processed', 'true')\n          // テンプレート抽出のため必要な情報のみ取得\n          \n          // 元テンプレートから完全な内容を抽出（編集モードと同じ方式）\n          const originalTemplate = getTemplate(component.type, component.module_name)\n          const startPattern = new RegExp(`<(\\\\w+)[^>]*z-for=\"${arrayName}\"[^>]*>`)\n          const startMatch = originalTemplate.match(startPattern)\n          const startIndex = startMatch ? originalTemplate.indexOf(startMatch[0]) : -1\n          \n          let templateContent = element.innerHTML // デフォルト\n          \n          if (startIndex !== -1 && startMatch) {\n            // 編集モードと同じ完全な抽出ロジック（任意要素対応）\n            const tagMatch = startMatch[0].match(/<(\\w+)/)\n            const tagName = tagMatch ? tagMatch[1] : 'div'\n            let depth = 0\n            let endIndex = startIndex\n            \n            for (let i = startIndex; i < originalTemplate.length; i++) {\n              if (originalTemplate.substring(i, i + tagName.length + 1) === `<${tagName}`) {\n                depth++\n              } else if (originalTemplate.substring(i, i + tagName.length + 3) === `</${tagName}>`) {\n                depth--\n                if (depth === 0) {\n                  endIndex = i + tagName.length + 3\n                  break\n                }\n              }\n            }\n            \n            const fullMatch = originalTemplate.substring(startIndex, endIndex)\n            // 開始タグの属性（選択記法含む）も保持するため、完全な要素を使用\n            // ただし、z-for属性は除去\n            templateContent = fullMatch.replace(/\\s+z-for=\"[^\"]*\"/, '')\n            \n          }\n          \n          // 各配列アイテム用のHTMLを生成\n          const itemsHtml = arrayData\n            .map((item: any, index: number) => {\n              let itemHtml = templateContent\n\n\n              // 配列アイテムのデータでマージしたコンポーネントを作成（深いマージでネスト配列も含む）\n              const mergedComponent = { \n                ...component, \n                ...item,\n                // 編集済みデータを確実に反映させるため、親の最新データを保持\n                type: component.type,\n                module_name: component.module_name,\n                id: `${component.id}_${arrayName}_${index}`\n              }\n              \n              // 最新データの確実な反映（特にネスト配列用）\n              if (typeof window !== 'undefined' && (window as any).getLatestComponentData) {\n                const rootId = component.id.includes('_categories_') ? component.id.split('_categories_')[0] : \n                              component.id.includes('_items_') ? component.id.split('_items_')[0] :\n                              component.id.split('_')[0] + '_' + component.id.split('_')[1] + '_' + component.id.split('_')[2] + '_' + component.id.split('_')[3]\n                const latestRootData = (window as any).getLatestComponentData(rootId)\n                if (latestRootData && arrayName === 'categories' && latestRootData.categories && latestRootData.categories[index]) {\n                  // categoriesアイテムの最新データを使用\n                  Object.assign(mergedComponent, latestRootData.categories[index])\n                }\n              }\n              \n\n\n              \n              // 再帰的にz-directive処理（深度制御で重複を防止）\n              itemHtml = processZDirectivesForPreview(itemHtml, mergedComponent, getTemplate, recursionDepth + 1, finalMaxDepth)\n\n              // 統一記法の処理\n              itemHtml = processSelectionSyntax(itemHtml, item)\n              itemHtml = processConditionalClassSyntax(itemHtml, item)\n\n              // テキスト記法の処理（mergedComponentを使用）\n              itemHtml = processTextReplacementForPreview(itemHtml, mergedComponent)\n\n              // itemHtmlは既に完全なHTMLコンテンツ（タグ込み）なのでそのまま返す\n              return itemHtml\n            })\n            .join('')\n\n          // z-for要素を生成されたアイテムで置き換え\n          element.outerHTML = itemsHtml\n          \n          // 実際にz-for処理を実行した場合のみ、次のパスを実行\n          processedAnyZFor = true\n          \n          // パス間でDOMを再解析（新しく生成されたHTML要素を検出するため）\n          const newDoc = new DOMParser().parseFromString(doc.body.innerHTML, 'text/html')\n          doc.body.innerHTML = newDoc.body.innerHTML\n        } else {\n          element.remove()\n        }\n      }\n      })\n    }\n\n    // z-slot処理\n    const slotElements = doc.querySelectorAll('[z-slot]')\n    slotElements.forEach((element: Element) => {\n      const slotName = element.getAttribute('z-slot')\n      if (slotName) {\n        if (component[slotName] && Array.isArray(component[slotName])) {\n          const nestedComponents = component[slotName] as Component[]\n          const nestedHtml = nestedComponents\n            .map(child => renderComponentForPreview(child, getTemplate, options))\n            .join('')\n          element.outerHTML = nestedHtml\n        } else {\n          element.remove()\n        }\n      }\n    })\n\n    // エディターコンテンツ内の画像に編集対象クラスを追加\n    const images = doc.querySelectorAll('img')\n    images.forEach((img: Element) => {\n      img.classList.add('zero-code-editable-image')\n    })\n\n    return doc.body.innerHTML\n  }\n\n  // キャッシュクリア関数\n  const clearAllCaches = (): void => {\n    clearTemplateCache()\n    clearDOMCache()\n    // 全ての最適化キャッシュをクリア\n  }\n\n  return {\n    editingText,\n    shouldApplyTiptap,\n    processTextReplacementWithTemplate,\n    processArrayItemTextReplacement,\n    processArrayItemParameterReplacement,\n    processSelectionSyntax,\n    processConditionalClassSyntax,\n    processZDirectives,\n    renderComponentWithNested: _renderComponentWithNested,\n    renderComponentWithoutSlot,\n    renderNestedComponentWithDepth,\n    renderNestedComponentsWithUI,\n    hasNestedSlot: _hasNestedSlot,\n    // 最適化版関数\n    renderComponentOptimized,\n    clearAllCaches,\n  }\n}\n","/**\n * 画像表示用のコンポーザブル\n * Base64データがあれば優先的に表示し、なければURLを使用\n */\n\nimport { computed } from 'vue'\nimport type { ImageData } from '@types'\n\nexport function useImageDisplay() {\n  /**\n   * 画像のソースURLを取得\n   * Base64データがあれば優先的に使用、なければURLを使用\n   */\n  const getImageSrc = (image: ImageData | any): string => {\n    // Base64データがある場合は優先的に使用\n    if (image.fileData?.base64 && image.fileData.base64.trim() !== '') {\n      const mimeType = image.fileData.type || image.type || 'image/jpeg'\n      return `data:${mimeType};base64,${image.fileData.base64}`\n    }\n    \n    // Base64がない場合はURLを使用\n    return image.url || ''\n  }\n\n  /**\n   * 画像が更新されているかチェック\n   */\n  const isImageUpdated = (image: ImageData | any): boolean => {\n    return !!(image.fileData?.base64 && image.fileData.base64.trim() !== '')\n  }\n\n  /**\n   * 画像のalt属性を取得\n   */\n  const getImageAlt = (image: ImageData | any): string => {\n    return image.alt || image.name || '画像'\n  }\n\n  /**\n   * 画像データを更新（差し替え用）\n   */\n  const updateImageData = (\n    originalImage: ImageData | any,\n    newFile: File,\n    newBase64: string\n  ): ImageData | any => {\n    return {\n      ...originalImage,\n      fileData: {\n        ...originalImage.fileData,\n        base64: newBase64,\n        type: newFile.type,\n        size: newFile.size,\n      },\n      // 必要に応じて他のプロパティも更新\n      type: newFile.type,\n      size: newFile.size,\n      uploadedAt: new Date().toISOString(),\n    }\n  }\n\n  return {\n    getImageSrc,\n    isImageUpdated,\n    getImageAlt,\n    updateImageData,\n  }\n}\n\n/**\n * リアクティブな画像ソース計算プロパティ\n */\nexport function useReactiveImageSrc(image: any) {\n  const { getImageSrc, getImageAlt } = useImageDisplay()\n  \n  const imageSrc = computed(() => getImageSrc(image.value || image))\n  const imageAlt = computed(() => getImageAlt(image.value || image))\n  \n  return {\n    imageSrc,\n    imageAlt,\n  }\n}","<template>\n  <div class=\"zero-code-page-preview\">\n    <div class=\"zero-code-page-preview-content\">\n      <!-- eslint-disable-next-line vue/no-v-html -->\n      <div v-html=\"renderedPageHtml\" />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { computed } from 'vue'\n  import type { Component, PartSection, Part } from '@types'\n  import { useTemplateProcessor } from '../../composables/useTemplateProcessor'\n  import { useImageDisplay } from '../../composables/useImageDisplay'\n\n  // Props定義\n  interface Props {\n    pageData: Component[]\n    parts: PartSection[]\n    commonImages: any[]\n    individualImages: any[]\n  }\n\n  const props = defineProps<Props>()\n  \n  // テンプレート処理用コンポーザブル\n  const templateProcessor = useTemplateProcessor()\n  \n  // 画像表示用コンポーザブル\n  const { getImageSrc } = useImageDisplay()\n\n  // 全画像データの統合\n  const allImages = computed(() => [...props.commonImages, ...props.individualImages])\n\n  // 画像URLを解決する関数\n  const resolveImageUrls = (html: string): string => {\n    if (!html || allImages.value.length === 0) return html\n\n    let processedHtml = html\n    \n    // img要素のsrc属性を置換\n    processedHtml = processedHtml.replace(\n      /<img([^>]*?)src=[\"']([^\"']+)[\"']([^>]*?)>/gi,\n      (match, beforeSrc, originalSrc, afterSrc) => {\n        // 画像IDまたはURLを使って画像データを検索\n        const imageData = allImages.value.find(img => {\n          // 完全一致チェック\n          if (img.id === originalSrc || img.url === originalSrc || img.name === originalSrc) {\n            return true\n          }\n          \n          // URLパスの一致チェック（例: /img/hero_image.jpg と hero_image.jpg）\n          if (originalSrc.endsWith('/' + img.name) || img.url.endsWith(originalSrc)) {\n            return true\n          }\n          \n          // ファイル名部分のマッチング\n          const originalFileName = originalSrc.split('/').pop()\n          if (originalFileName === img.name) {\n            return true\n          }\n          \n          return false\n        })\n        \n        if (imageData) {\n          const resolvedSrc = getImageSrc(imageData)\n          return `<img${beforeSrc}src=\"${resolvedSrc}\"${afterSrc}>`\n        }\n        \n        return match\n      }\n    )\n\n    return processedHtml\n  }\n\n  // 画像データの変更を監視（計算プロパティで自動的に再レンダリングされるため、監視は削除）\n\n  // ローカル状態（削除済み）\n\n  // HTMLを美しくフォーマットする関数\n  const formatHtmlSource = (html: string): string => {\n    if (!html) return ''\n\n    try {\n      // DOMParserでHTMLを正確に解析\n      const parser = new (globalThis as any).DOMParser()\n      const doc = parser.parseFromString(`<root>${html}</root>`, 'text/html')\n      const rootElement = doc.body.firstChild as Element\n\n      if (!rootElement) return html\n\n      // 自己閉じタグ一覧\n      const voidElements = new Set([\n        'img',\n        'br',\n        'hr',\n        'input',\n        'meta',\n        'link',\n        'area',\n        'base',\n        'col',\n        'embed',\n        'source',\n        'track',\n        'wbr',\n      ])\n\n      // インライン要素一覧（改行を入れない要素）\n      const inlineElements = new Set([\n        'span',\n        'a',\n        'strong',\n        'em',\n        'u',\n        'mark',\n        'code',\n        'small',\n        'sub',\n        'sup',\n        'i',\n        'b',\n      ])\n\n      // 再帰的にHTMLをフォーマット\n      const formatElement = (\n        element: Element,\n        depth: number = 0,\n        parentIsInline: boolean = false\n      ): string => {\n        const tagName = element.tagName.toLowerCase()\n        const indent = parentIsInline ? '' : '  '.repeat(depth)\n        const isVoidElement = voidElements.has(tagName)\n        const isInlineElement = inlineElements.has(tagName)\n\n        // 開始タグを作成\n        let startTag = `<${tagName}`\n\n        // 属性を追加\n        for (let i = 0; i < element.attributes.length; i++) {\n          const attr = element.attributes[i]\n          startTag += ` ${attr.name}=\"${attr.value}\"`\n        }\n        startTag += '>'\n\n        let result = indent + startTag\n\n        // 自己閉じタグの場合は終了\n        if (isVoidElement) {\n          return result\n        }\n\n        // 子要素を処理\n        let hasElementChildren = false\n        let hasTextContent = false\n        const childrenResults: string[] = []\n        let textContent = ''\n\n        for (let i = 0; i < element.childNodes.length; i++) {\n          const child = element.childNodes[i]\n\n          if (child.nodeType === 1) {\n            // Element node\n            hasElementChildren = true\n            const childElement = child as Element\n            const childResult = formatElement(\n              childElement,\n              depth + 1,\n              isInlineElement || parentIsInline\n            )\n            childrenResults.push(childResult)\n          } else if (child.nodeType === 3) {\n            // Text node\n            const text = child.textContent?.replace(/\\s+/g, ' ').trim()\n            if (text) {\n              hasTextContent = true\n              textContent += text\n            }\n          }\n        }\n\n        // 内容の処理\n        if (hasElementChildren && hasTextContent) {\n          // テキストと要素の両方がある場合（インラインコンテンツ）\n          if (isInlineElement || parentIsInline) {\n            result += textContent + childrenResults.join('')\n          } else {\n            result += textContent + '\\n' + childrenResults.join('\\n')\n            if (childrenResults.length > 0) result += '\\n' + indent\n          }\n        } else if (hasElementChildren) {\n          // 要素のみの場合\n          if (isInlineElement || parentIsInline) {\n            result += childrenResults.join('')\n          } else {\n            result += '\\n' + childrenResults.join('\\n')\n            if (childrenResults.length > 0) result += '\\n' + indent\n          }\n        } else if (hasTextContent) {\n          // テキストのみの場合\n          result += textContent\n        }\n\n        // 終了タグを追加\n        result += `</${tagName}>`\n\n        return result\n      }\n\n      // rootElementの子要素をフォーマット\n      let formattedHtml = ''\n      for (let i = 0; i < rootElement.childNodes.length; i++) {\n        const child = rootElement.childNodes[i]\n        if (child.nodeType === 1) {\n          // Element node\n          formattedHtml += formatElement(child as Element) + '\\n'\n        }\n      }\n\n      return formattedHtml\n        .replace(/\\n{3,}/g, '\\n\\n') // 3回以上の連続改行を2回に制限\n        .replace(/\\n\\s*\\n\\s*</g, '\\n<') // 空行と要素間の無駄な改行を除去\n        .trim()\n    } catch (error) {\n      // フォールバック: より簡潔なフォーマット\n      return html\n        .replace(/>\\s*</g, '>\\n<')\n        .split('\\n')\n        .filter(line => line.trim()) // 空行を除去\n        .map((line, index, array) => {\n          const trimmed = line.trim()\n          if (!trimmed) return ''\n\n          let depth = 0\n          for (let i = 0; i < index; i++) {\n            const prevLine = array[i].trim()\n            if (prevLine.match(/<[^\\/!][^>]*[^\\/]>$/)) depth++\n            if (prevLine.match(/<\\/[^>]+>$/)) depth--\n          }\n          if (trimmed.startsWith('</')) depth--\n\n          return '  '.repeat(Math.max(0, depth)) + trimmed\n        })\n        .join('\\n')\n    }\n  }\n\n  // テンプレートを取得する関数\n  const getTemplate = (type: string, moduleName: string): string => {\n    if (!Array.isArray(props.parts)) return ''\n\n    const section = props.parts.find((s: PartSection) => s.type === type)\n    if (!section) return ''\n\n    const module = section.module.find((m: Part) => m.title === moduleName)\n    return module ? module.body : ''\n  }\n\n  // プレビュー専用：編集UIを含まないクリーンなHTMLを生成（計算プロパティ）\n  const renderedPageHtml = computed((): string => {\n    if (!Array.isArray(props.pageData) || props.pageData.length === 0) {\n      return '<div class=\"zero-code-no-content\">ページにコンテンツがありません</div>'\n    }\n\n    let pageHtml = '<div class=\"zero-code-page-container\">'\n\n    props.pageData.forEach((pageComponent) => {\n      const componentHtml = renderCleanComponent(pageComponent)\n\n      if (!componentHtml || componentHtml.trim() === '') {\n        pageHtml += `<div class=\"zero-code-error-component\">テンプレートが見つかりません: ${pageComponent.type}/${pageComponent.module_name}</div>`\n      } else {\n        pageHtml += componentHtml\n      }\n    })\n\n    pageHtml += '</div>'\n    \n    return pageHtml\n  })\n\n  // クリーンなコンポーネントレンダリング（編集UI要素なし）\n  const renderCleanComponent = (component: Component): string => {\n    // プレビューモードを使用（編集UI要素なしのクリーンなレンダリング）\n    const html = templateProcessor.renderComponentOptimized(component, getTemplate, { isPreviewMode: true })\n    // 画像URLを解決\n    return resolveImageUrls(html)\n  }\n\n  // ネストコンポーネントのクリーンなレンダリング（編集UI要素なし）\n  const renderNestedComponentsClean = (components: Component[]): string => {\n    if (!components || components.length === 0) {\n      return ''\n    }\n\n    let html = ''\n\n    components.forEach((child: Component) => {\n      const componentHtml = renderCleanComponent(child)\n\n      if (componentHtml && componentHtml.trim() !== '') {\n        html += componentHtml\n      }\n    })\n\n    return html\n  }\n\n  // 旧版（編集用UIも含む版）- 後方互換性のため残す\n  const renderNestedComponentsFromParts = (components: unknown[]): string => {\n    if (!components || components.length === 0) {\n      return ''\n    }\n\n    let html = ''\n\n    components.forEach((child: unknown) => {\n      const childComponent = child as Component\n      const componentHtml = renderCleanComponent(childComponent)\n\n      if (componentHtml && componentHtml.trim() !== '') {\n        html += componentHtml\n      }\n    })\n\n    return html\n  }\n</script>\n","<template>\n  <div class=\"zero-code-tab-content\">\n    <!-- プレビュータブ -->\n    <div class=\"zero-code-data-tabs\">\n      <div class=\"zero-code-tab-buttons\">\n        <button\n          v-for=\"tab in previewTabs\"\n          :key=\"tab\"\n          :class=\"['zero-code-data-tab-button', { active: activePreviewTab === tab }]\"\n          @click=\"activePreviewTab = tab\"\n        >\n          {{ getPreviewTabLabel(tab) }}\n        </button>\n      </div>\n    </div>\n\n    <div class=\"zero-code-preview-content\">\n      <!-- プレビュー表示タブ -->\n      <div v-if=\"activePreviewTab === 'preview'\" class=\"zero-code-preview-section\">\n        <PagePreview\n          :key=\"previewKey\"\n          :page-data=\"editablePageData\"\n          :parts=\"localParts && localParts.length > 0 ? localParts : parts || []\"\n          :common-images=\"commonImages\"\n          :individual-images=\"individualImages\"\n        />\n      </div>\n\n      <!-- HTMLソースタブ -->\n      <div v-if=\"activePreviewTab === 'source'\" class=\"zero-code-preview-section\">\n        <div class=\"zero-code-html-source\">\n          <div class=\"zero-code-source-header\">\n            <p class=\"zero-code-source-description\">パーツごとに改行・インデントされたHTMLソース</p>\n          </div>\n          <pre class=\"zero-code-html-source-pre\"><code>{{ formatHtmlSource(renderedPageHtml) }}</code></pre>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import PagePreview from '@/components/preview/PagePreview.vue'\n  import type { Component, PartSection, Part } from '@types'\n  import { watch, ref, computed } from 'vue'\n  import { useTemplateProcessor } from '../../composables/useTemplateProcessor'\n\n  type PreviewTab = 'preview' | 'source'\n\n  // Props定義\n  interface Props {\n    editablePageData: Component[]\n    localParts: PartSection[]\n    parts: PartSection[]\n    commonImages: any[]\n    individualImages: any[]\n  }\n  \n  const props = defineProps<Props>()\n  \n  // テンプレート処理用コンポーザブル\n  const templateProcessor = useTemplateProcessor()\n  \n  // リアクティブデータ\n  const activePreviewTab = ref<PreviewTab>('preview')\n  const previewKey = ref(0)\n\n  // タブの一覧\n  const previewTabs: PreviewTab[] = ['preview', 'source']\n\n  // タブのラベルを取得\n  const getPreviewTabLabel = (tab: PreviewTab): string => {\n    const labels: Record<PreviewTab, string> = {\n      preview: 'プレビュー表示',\n      source: 'HTMLソース',\n    }\n    return labels[tab]\n  }\n\n  // 読みやすいJSON形式に変換（PartsManagementPanelと同じ関数）\n  const formatToReadableJson = (data: unknown): string => {\n    const formatValue = (obj: unknown, depth: number = 0): string => {\n      const indent = '  '.repeat(depth)\n      const nextIndent = '  '.repeat(depth + 1)\n\n      if (Array.isArray(obj)) {\n        if (obj.length === 0) return '[]'\n        const items = obj.map(item => nextIndent + formatValue(item, depth + 1)).join(',\\n')\n        return `[\\n${items}\\n${indent}]`\n      }\n\n      if (typeof obj === 'object' && obj !== null) {\n        const entries = Object.entries(obj as Record<string, unknown>)\n        if (entries.length === 0) return '{}'\n        \n        const items = entries.map(([key, value]) => {\n          let formattedValue: string\n          \n          if (typeof value === 'string') {\n            // 文字列の場合はエスケープ文字を実際の文字に変換してから表示\n            const cleanString = value\n              .replace(/\\\\n/g, '\\n')\n              .replace(/\\\\t/g, '\\t')\n              .replace(/\\\\\"/g, '\"')\n              .replace(/\\\\'/g, \"'\")\n              .replace(/\\\\\\\\/g, '\\\\')\n            \n            // 改行が含まれる場合はテンプレートリテラル風に表示\n            if (cleanString.includes('\\n')) {\n              const lines = cleanString.split('\\n')\n              const formattedLines = lines.map((line, index) => {\n                if (index === 0) return `\\`${line}`\n                if (index === lines.length - 1) return `${nextIndent}${line}\\``\n                return `${nextIndent}${line}`\n              }).join('\\n')\n              formattedValue = formattedLines\n            } else {\n              formattedValue = `\"${cleanString}\"`\n            }\n          } else {\n            formattedValue = formatValue(value, depth + 1)\n          }\n          \n          return `${nextIndent}\"${key}\": ${formattedValue}`\n        }).join(',\\n')\n        \n        return `{\\n${items}\\n${indent}}`\n      }\n\n      if (typeof obj === 'string') {\n        return `\"${obj.replace(/\"/g, '\\\\\"')}\"`\n      }\n\n      return JSON.stringify(obj)\n    }\n\n    return formatValue(data)\n  }\n\n  // テンプレートを取得する関数\n  const getTemplate = (type: string, moduleName: string): string => {\n    const parts = props.localParts && props.localParts.length > 0 ? props.localParts : props.parts || []\n    \n    if (!Array.isArray(parts)) return ''\n\n    const section = parts.find((s: PartSection) => s.type === type)\n    if (!section) return ''\n\n    const module = section.module.find((m: Part) => m.title === moduleName)\n    return module ? module.body : ''\n  }\n\n  // クリーンなコンポーネントレンダリング（編集UI要素なし）\n  const renderCleanComponent = (component: Component): string => {\n    // プレビューモードを使用（編集UI要素なしのクリーンなレンダリング）\n    return templateProcessor.renderComponentOptimized(component, getTemplate, { isPreviewMode: true })\n  }\n\n  // プレビュー専用：編集UIを含まないクリーンなHTMLを生成（計算プロパティ）\n  const renderedPageHtml = computed((): string => {\n    if (!Array.isArray(props.editablePageData) || props.editablePageData.length === 0) {\n      return '<div class=\"zero-code-no-content\">ページにコンテンツがありません</div>'\n    }\n\n    let pageHtml = '<div class=\"zero-code-page-container\">'\n\n    props.editablePageData.forEach((pageComponent) => {\n      const componentHtml = renderCleanComponent(pageComponent)\n\n      if (!componentHtml || componentHtml.trim() === '') {\n        pageHtml += `<div class=\"zero-code-error-component\">テンプレートが見つかりません: ${pageComponent.type}/${pageComponent.module_name}</div>`\n      } else {\n        pageHtml += componentHtml\n      }\n    })\n\n    pageHtml += '</div>'\n    \n    return pageHtml\n  })\n\n  // HTMLを美しくフォーマットする関数\n  const formatHtmlSource = (html: string): string => {\n    if (!html) return ''\n\n    try {\n      // DOMParserでHTMLを正確に解析\n      const parser = new (globalThis as any).DOMParser()\n      const doc = parser.parseFromString(`<root>${html}</root>`, 'text/html')\n      const rootElement = doc.body.firstChild as Element\n\n      if (!rootElement) return html\n\n      // 自己閉じタグ一覧\n      const voidElements = new Set([\n        'img', 'br', 'hr', 'input', 'meta', 'link', 'area', 'base', 'col', 'embed', 'source', 'track', 'wbr',\n      ])\n\n      // インライン要素一覧（改行を入れない要素）\n      const inlineElements = new Set([\n        'span', 'a', 'strong', 'em', 'u', 'mark', 'code', 'small', 'sub', 'sup', 'i', 'b',\n      ])\n\n      // 再帰的にHTMLをフォーマット\n      const formatElement = (element: Element, depth: number = 0, parentIsInline: boolean = false): string => {\n        const tagName = element.tagName.toLowerCase()\n        const indent = parentIsInline ? '' : '  '.repeat(depth)\n        const isVoidElement = voidElements.has(tagName)\n        const isInlineElement = inlineElements.has(tagName)\n\n        // 開始タグを作成\n        let startTag = `<${tagName}`\n\n        // 属性を追加\n        for (let i = 0; i < element.attributes.length; i++) {\n          const attr = element.attributes[i]\n          startTag += ` ${attr.name}=\"${attr.value}\"`\n        }\n        startTag += '>'\n\n        let result = indent + startTag\n\n        // 自己閉じタグの場合は終了\n        if (isVoidElement) {\n          return result\n        }\n\n        // 子要素を処理\n        let hasElementChildren = false\n        let hasTextContent = false\n        const childrenResults: string[] = []\n        let textContent = ''\n\n        for (let i = 0; i < element.childNodes.length; i++) {\n          const child = element.childNodes[i]\n\n          if (child.nodeType === 1) {\n            // Element node\n            hasElementChildren = true\n            const childElement = child as Element\n            const childResult = formatElement(childElement, depth + 1, isInlineElement || parentIsInline)\n            childrenResults.push(childResult)\n          } else if (child.nodeType === 3) {\n            // Text node\n            const text = child.textContent?.replace(/\\s+/g, ' ').trim()\n            if (text) {\n              hasTextContent = true\n              textContent += text\n            }\n          }\n        }\n\n        // 内容の処理\n        if (hasElementChildren && hasTextContent) {\n          // テキストと要素の両方がある場合（インラインコンテンツ）\n          if (isInlineElement || parentIsInline) {\n            result += textContent + childrenResults.join('')\n          } else {\n            result += textContent + '\\n' + childrenResults.join('\\n')\n            if (childrenResults.length > 0) result += '\\n' + indent\n          }\n        } else if (hasElementChildren) {\n          // 要素のみの場合\n          if (isInlineElement || parentIsInline) {\n            result += childrenResults.join('')\n          } else {\n            result += '\\n' + childrenResults.join('\\n')\n            if (childrenResults.length > 0) result += '\\n' + indent\n          }\n        } else if (hasTextContent) {\n          // テキストのみの場合\n          result += textContent\n        }\n\n        // 終了タグを追加\n        result += `</${tagName}>`\n\n        return result\n      }\n\n      // rootElementの子要素をフォーマット\n      let formattedHtml = ''\n      for (let i = 0; i < rootElement.childNodes.length; i++) {\n        const child = rootElement.childNodes[i]\n        if (child.nodeType === 1) {\n          // Element node\n          formattedHtml += formatElement(child as Element) + '\\n'\n        }\n      }\n\n      return formattedHtml\n        .replace(/\\n{3,}/g, '\\n\\n') // 3回以上の連続改行を2回に制限\n        .replace(/\\n\\s*\\n\\s*</g, '\\n<') // 空行と要素間の無駄な改行を除去\n        .trim()\n    } catch (error) {\n      // フォールバック: より簡潔なフォーマット\n      return html\n        .replace(/>\\s*</g, '>\\n<')\n        .split('\\n')\n        .filter(line => line.trim()) // 空行を除去\n        .map((line, index, array) => {\n          const trimmed = line.trim()\n          if (!trimmed) return ''\n\n          let depth = 0\n          for (let i = 0; i < index; i++) {\n            const prevLine = array[i].trim()\n            if (prevLine.match(/<[^\\/!][^>]*[^\\/]>$/)) depth++\n            if (prevLine.match(/<\\/[^>]+>$/)) depth--\n          }\n          if (trimmed.startsWith('</')) depth--\n\n          return '  '.repeat(Math.max(0, depth)) + trimmed\n        })\n        .join('\\n')\n    }\n  }\n  \n  // PreviewPanelのデータ変更を監視し、PagePreviewを強制再レンダリング\n  watch(\n    () => props.editablePageData,\n    () => {\n      // PagePreviewを強制再レンダリング\n      previewKey.value++\n    },\n    { deep: true, immediate: true }\n  )\n</script>\n\n","<template>\n  <div class=\"zero-code-modal-overlay\" @click=\"$emit('close')\">\n    <div class=\"zero-code-modal-content\" @click.stop>\n      <div class=\"zero-code-modal-header\">\n        <h4>画像アップロード（{{ category === 'common' ? '共通' : '個別' }}）</h4>\n        <button class=\"zero-code-img-close-btn\" @click=\"$emit('close')\">&times;</button>\n      </div>\n\n      <div class=\"zero-code-modal-body\">\n        <div class=\"zero-code-img-file-input-section\">\n          <label for=\"file-input\" class=\"zero-code-img-file-input-label\">\n            <div class=\"zero-code-img-file-input-area\">\n              <span class=\"zero-code-img-file-input-text\">クリックしてファイルを選択</span>\n              <span class=\"zero-code-img-file-input-hint\">またはドラッグ&ドロップ</span>\n            </div>\n          </label>\n          <input\n            id=\"file-input\"\n            type=\"file\"\n            accept=\"image/*\"\n            style=\"display: none\"\n            @change=\"onFileChange\"\n            @drop=\"onFileDrop\"\n            @dragover.prevent\n            @dragenter.prevent\n          >\n        </div>\n\n        <div v-if=\"selectedFile\" class=\"zero-code-img-file-info\">\n          <div class=\"zero-code-img-file-preview\">\n            <img :src=\"previewUrl\" alt=\"プレビュー\">\n          </div>\n          <div class=\"zero-code-img-file-details\">\n            <p><strong>ファイル名:</strong> {{ selectedFile.name }}</p>\n            <p><strong>サイズ:</strong> {{ formatFileSize(selectedFile.size) }}</p>\n            <p><strong>タイプ:</strong> {{ selectedFile.type }}</p>\n          </div>\n        </div>\n\n        <div class=\"zero-code-form-section\">\n          <div class=\"zero-code-form-group\">\n            <label for=\"image-name\">保存名:</label>\n            <input\n              id=\"image-name\"\n              v-model=\"imageName\"\n              type=\"text\"\n              placeholder=\"画像の保存名を入力\"\n              :disabled=\"!selectedFile\"\n            >\n          </div>\n\n          <div class=\"zero-code-form-group\">\n            <label for=\"image-alt\">alt属性:</label>\n            <input\n              id=\"image-alt\"\n              v-model=\"imageAlt\"\n              type=\"text\"\n              placeholder=\"画像の説明を入力\"\n              :disabled=\"!selectedFile\"\n            >\n          </div>\n\n          <div v-if=\"category === 'individual'\" class=\"zero-code-form-group\">\n            <label for=\"component-id\">コンポーネントID:</label>\n            <input\n              id=\"component-id\"\n              v-model=\"componentId\"\n              type=\"text\"\n              placeholder=\"コンポーネントIDを入力\"\n              :disabled=\"!selectedFile\"\n            >\n          </div>\n        </div>\n      </div>\n\n      <div class=\"zero-code-modal-footer\">\n        <button class=\"zero-code-img-btn zero-code-img-btn-secondary\" @click=\"$emit('close')\">キャンセル</button>\n        <button class=\"zero-code-img-btn zero-code-img-btn-primary\" :disabled=\"!canUpload\" @click=\"upload\">\n          アップロード\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { ref, computed } from 'vue'\n  import type { ImageData } from '@types'\n\n  // Props定義\n  interface Props {\n    category: 'common' | 'individual'\n    componentId?: string\n  }\n\n  const props = defineProps<Props>()\n\n  // Emits定義\n  const emit = defineEmits<{\n    close: []\n    upload: [imageData: ImageData]\n  }>()\n\n  // 状態管理\n  const selectedFile = ref<File | null>(null)\n  const previewUrl = ref<string>('')\n  const imageName = ref<string>('')\n  const imageAlt = ref<string>('')\n  const componentId = ref<string>(props.componentId || '')\n\n  // アップロード可能かどうか\n  const canUpload = computed(() => {\n    return selectedFile.value && imageName.value.trim() && imageAlt.value.trim()\n  })\n\n  // ファイル選択処理\n  const onFileChange = (event: Event) => {\n    const target = event.target as HTMLInputElement\n    if (target.files && target.files[0]) {\n      handleFileSelect(target.files[0])\n    }\n  }\n\n  // ドラッグ&ドロップ処理\n  const onFileDrop = (event: DragEvent) => {\n    event.preventDefault()\n    if (event.dataTransfer && event.dataTransfer.files[0]) {\n      handleFileSelect(event.dataTransfer.files[0])\n    }\n  }\n\n  // ファイル選択の共通処理\n  const handleFileSelect = (file: File) => {\n    selectedFile.value = file\n    imageName.value = file.name.replace(/\\.[^/.]+$/, '') // 拡張子を除いたファイル名\n    imageAlt.value = file.name\n\n    // プレビューURLを作成\n    if (previewUrl.value) {\n      URL.revokeObjectURL(previewUrl.value)\n    }\n    previewUrl.value = URL.createObjectURL(file)\n  }\n\n  // ファイルをBase64に変換\n  const fileToBase64 = (file: File): Promise<string> => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader()\n      reader.readAsDataURL(file)\n      reader.onload = () => resolve(reader.result as string)\n      reader.onerror = error => reject(error)\n    })\n  }\n\n  // ユニークID生成\n  const generateUniqueId = (): string => {\n    return Date.now().toString(36) + Math.random().toString(36).substr(2)\n  }\n\n  // ファイルサイズのフォーマット\n  const formatFileSize = (bytes: number): string => {\n    if (bytes === 0) return '0 Bytes'\n    const k = 1024\n    const sizes = ['Bytes', 'KB', 'MB', 'GB']\n    const i = Math.floor(Math.log(bytes) / Math.log(k))\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n  }\n\n  // アップロード処理\n  const upload = async () => {\n    if (!selectedFile.value || !canUpload.value) return\n\n    try {\n      // Base64に変換\n      const base64 = await fileToBase64(selectedFile.value)\n\n      // Base64データからdata:プレフィックスを除去してベースデータのみ取得\n      const base64WithoutPrefix = base64.split(',')[1] || base64\n\n      // 画像データを構築\n      const imageData: ImageData = {\n        id: generateUniqueId(),\n        name: imageName.value,\n        originalName: selectedFile.value.name,\n        url: `/img/${imageName.value}`, // 一般的なURL形式を使用\n        alt: imageAlt.value,\n        size: selectedFile.value.size,\n        type: selectedFile.value.type,\n        uploadedAt: new Date().toISOString(),\n        category: props.category,\n        componentId: props.category === 'individual' ? componentId.value : undefined,\n        fileData: {\n          base64: base64WithoutPrefix, // data:プレフィックスなしのBase64データのみ\n        },\n      }\n\n      emit('upload', imageData)\n    } catch (error) {\n      alert('画像のアップロードに失敗しました。')\n    }\n  }\n\n  // コンポーネントのクリーンアップ\n  const cleanup = () => {\n    if (previewUrl.value) {\n      URL.revokeObjectURL(previewUrl.value)\n    }\n  }\n\n  // コンポーネントのアンマウント時にクリーンアップ\n  import { onUnmounted } from 'vue'\n  onUnmounted(cleanup)\n</script>\n","<template>\n  <div class=\"zero-code-modal-overlay\" @click=\"$emit('close')\">\n    <div class=\"zero-code-modal-content\" @click.stop>\n      <div class=\"zero-code-modal-header\">\n        <h4>画像詳細</h4>\n        <button class=\"zero-code-close-button\" @click=\"$emit('close')\">✖️</button>\n      </div>\n\n      <div class=\"zero-code-modal-body\">\n        <!-- 画像プレビュー -->\n        <div class=\"zero-code-img-detail-preview\">\n          <img :src=\"imageSrc\" :alt=\"imageAlt\">\n          <div v-if=\"isImageUpdated(localImage)\" class=\"zero-code-img-updated-badge\">\n            差し替え済み\n          </div>\n        </div>\n\n        <!-- 画像情報表示 -->\n        <div class=\"zero-code-form-section\">\n          <div class=\"zero-code-form-group\">\n            <label for=\"detail-image-name\">ファイル名:</label>\n            <input\n              id=\"detail-image-name\"\n              v-model=\"localImage.name\"\n              type=\"text\"\n              readonly\n            >\n          </div>\n\n          <div class=\"zero-code-form-group\">\n            <label for=\"detail-image-alt\">alt属性:</label>\n            <input\n              id=\"detail-image-alt\"\n              v-model=\"localImage.alt\"\n              type=\"text\"\n              readonly\n            >\n          </div>\n\n          <div v-if=\"localImage.componentId\" class=\"zero-code-form-group\">\n            <label for=\"detail-component-id\">コンポーネントID:</label>\n            <input\n              id=\"detail-component-id\"\n              v-model=\"localImage.componentId\"\n              type=\"text\"\n              readonly\n            >\n          </div>\n\n          <!-- 画像情報 -->\n          <div class=\"zero-code-img-detail-info\">\n            <div class=\"zero-code-img-detail-info-group\">\n              <label>カテゴリ:</label>\n              <span class=\"zero-code-img-detail-category\" :class=\"localImage.category\">\n                {{ localImage.category === 'common' ? '共通画像' : '個別画像' }}\n              </span>\n            </div>\n\n            <div class=\"zero-code-img-detail-info-group\">\n              <label>ファイルサイズ:</label>\n              <span>{{ formatFileSize(localImage.fileData?.size || localImage.size || 0) }}</span>\n            </div>\n\n            <div class=\"zero-code-img-detail-info-group\">\n              <label>ファイルタイプ:</label>\n              <span>{{ localImage.fileData?.type || (localImage as any).type || '不明' }}</span>\n            </div>\n\n            <div class=\"zero-code-img-detail-info-group\">\n              <label>アップロード日時:</label>\n              <span>{{ formatDateTime(localImage.uploadedAt) }}</span>\n            </div>\n\n            <div class=\"zero-code-img-detail-info-group\">\n              <label>画像URL:</label>\n              <div class=\"zero-code-img-detail-url-group\">\n                <input\n                  v-model=\"localImage.url\"\n                  type=\"text\"\n                  readonly\n                  class=\"zero-code-img-detail-url-input\"\n                >\n                <button\n                  class=\"zero-code-btn zero-code-btn-secondary zero-code-copy-btn\"\n                  title=\"URLをコピー\"\n                  @click=\"copyToClipboard(localImage.url)\"\n                >\n                  📋\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"zero-code-modal-footer\">\n        <div class=\"zero-code-modal-footer-left\">\n          <button\n            class=\"zero-code-btn zero-code-btn-danger\"\n            @click=\"confirmDelete\"\n          >\n            削除\n          </button>\n          <button\n            class=\"zero-code-btn zero-code-btn-primary\"\n            @click=\"openReplaceDialog\"\n          >\n            差し替え\n          </button>\n        </div>\n        <div class=\"zero-code-modal-footer-right\">\n          <button class=\"zero-code-btn zero-code-btn-secondary\" @click=\"$emit('close')\">\n            閉じる\n          </button>\n        </div>\n\n        <!-- 画像差し替えの隠れたファイル入力 -->\n        <input\n          ref=\"fileInputRef\"\n          type=\"file\"\n          accept=\"image/*\"\n          style=\"display: none\"\n          @change=\"handleFileReplace\"\n        >\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { ref, reactive, computed } from 'vue'\n  import type { ImageData } from '@types'\n  import { useImageDisplay } from '@/composables/useImageDisplay'\n\n  // Props定義\n  interface Props {\n    image: ImageData\n  }\n\n  const props = defineProps<Props>()\n\n  // Emits定義\n  const emit = defineEmits<{\n    close: []\n    delete: [imageId: string]\n    replace: [imageId: string, newImageData: ImageData]\n  }>()\n\n  // 状態管理\n  const localImage = reactive<ImageData>({ ...props.image })\n  const fileInputRef = ref<HTMLInputElement | null>(null)\n  \n  // 画像表示用コンポーザブル\n  const { getImageSrc, getImageAlt, isImageUpdated, updateImageData } = useImageDisplay()\n  \n  // 計算プロパティ\n  const imageSrc = computed(() => getImageSrc(localImage))\n  const imageAlt = computed(() => getImageAlt(localImage))\n\n  // 削除確認\n  const confirmDelete = () => {\n    if (confirm('この画像を削除しますか？この操作は取り消せません。')) {\n      emit('delete', localImage.id)\n    }\n  }\n\n  // 差し替えダイアログを開く\n  const openReplaceDialog = () => {\n    if (fileInputRef.value) {\n      fileInputRef.value.click()\n    }\n  }\n\n  // ファイル差し替え処理\n  const handleFileReplace = async (event: Event) => {\n    const target = event.target as HTMLInputElement\n    if (!target.files || !target.files[0]) return\n\n    const file = target.files[0]\n    \n    if (!confirm(`画像を \"${file.name}\" に差し替えますか？この操作は取り消せません。`)) {\n      // ファイル選択をリセット\n      target.value = ''\n      return\n    }\n\n    try {\n      // Base64に変換\n      const base64 = await fileToBase64(file)\n      \n      // 新しい画像データを構築（useImageDisplayのヘルパーを使用）\n      const newImageData = updateImageData(localImage, file, base64.split(',')[1]) // data:image/...;base64, を除去\n      \n      // ローカル状態も更新\n      Object.assign(localImage, newImageData)\n\n      emit('replace', localImage.id, newImageData)\n    } catch (error) {\n      alert('画像の差し替えに失敗しました。')\n    } finally {\n      // ファイル選択をリセット\n      target.value = ''\n    }\n  }\n\n  // ファイルをBase64に変換\n  const fileToBase64 = (file: File): Promise<string> => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader()\n      reader.readAsDataURL(file)\n      reader.onload = () => resolve(reader.result as string)\n      reader.onerror = error => reject(error)\n    })\n  }\n\n  // クリップボードにコピー\n  const copyToClipboard = async (text: string) => {\n    try {\n      await navigator.clipboard.writeText(text)\n      alert('URLをクリップボードにコピーしました')\n    } catch (error) {\n      // フォールバック処理\n      const textArea = document.createElement('textarea')\n      textArea.value = text\n      document.body.appendChild(textArea)\n      textArea.select()\n      document.execCommand('copy')\n      document.body.removeChild(textArea)\n      alert('URLをクリップボードにコピーしました')\n    }\n  }\n\n  // ファイルサイズのフォーマット\n  const formatFileSize = (bytes: number | undefined): string => {\n    if (!bytes || isNaN(bytes)) return 'サイズ不明'\n    if (bytes === 0) return '0 Bytes'\n    const k = 1024\n    const sizes = ['Bytes', 'KB', 'MB', 'GB']\n    const i = Math.floor(Math.log(bytes) / Math.log(k))\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n  }\n\n  // 日時のフォーマット\n  const formatDateTime = (dateString: string | undefined): string => {\n    if (!dateString) return '日時不明'\n    const date = new Date(dateString)\n    if (isNaN(date.getTime())) return '日時不明'\n    return date.toLocaleString('ja-JP', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit',\n    })\n  }\n</script>\n\n","<template>\n  <div class=\"zero-code-tab-content\">\n    <!-- 画像タイプタブ -->\n    <div class=\"zero-code-data-tabs\">\n      <div class=\"zero-code-tab-buttons\">\n        <button\n          v-for=\"tab in imageTabs\"\n          :key=\"tab\"\n          :class=\"['zero-code-data-tab-button', { active: activeImageTab === tab }]\"\n          @click=\"activeImageTab = tab\"\n        >\n          {{ getImageTabLabel(tab) }}\n        </button>\n      </div>\n    </div>\n\n    <div class=\"zero-code-image-content\">\n      <!-- 共通画像タブ -->\n      <div v-if=\"activeImageTab === 'common'\" class=\"zero-code-image-section\">\n        <div class=\"zero-code-section-header\">\n          <h4>共通画像 ({{ commonImages.length }}件)</h4>\n          <button class=\"zero-code-img-upload-btn common\" @click=\"openUploadModal('common')\">\n            共通画像をアップロード\n          </button>\n        </div>\n        <div class=\"zero-code-img-grid\">\n          <div\n            v-for=\"image in commonImages\"\n            :key=\"image.id\"\n            class=\"zero-code-img-item\"\n            @click=\"showImageDetail(image)\"\n          >\n            <img :src=\"getImageSrc(image)\" :alt=\"getImageAlt(image)\">\n            <div v-if=\"isImageUpdated(image)\" class=\"zero-code-img-updated-badge\">\n              差し替え済み\n            </div>\n            <div class=\"zero-code-img-info\">\n              <p class=\"zero-code-img-name\">{{ image.name }}</p>\n              <p class=\"zero-code-img-size\">{{ formatFileSize(image.fileData?.size || image.size || 0) }}</p>\n            </div>\n            <button class=\"zero-code-img-delete-btn\" @click.stop=\"deleteImage(image.id, 'common')\">\n              削除\n            </button>\n          </div>\n        </div>\n        <div v-if=\"commonImages.length === 0\" class=\"zero-code-empty-state\">\n          <p>共通画像が登録されていません。</p>\n        </div>\n      </div>\n\n      <!-- 個別画像タブ -->\n      <div v-if=\"activeImageTab === 'individual'\" class=\"zero-code-image-section\">\n        <div class=\"zero-code-section-header\">\n          <h4>個別画像 ({{ individualImages.length }}件)</h4>\n          <button class=\"zero-code-img-upload-btn individual\" @click=\"openUploadModal('individual')\">\n            個別画像をアップロード\n          </button>\n        </div>\n        <div class=\"zero-code-img-grid\">\n          <div\n            v-for=\"image in individualImages\"\n            :key=\"image.id\"\n            class=\"zero-code-img-item\"\n            @click=\"showImageDetail(image)\"\n          >\n            <img :src=\"getImageSrc(image)\" :alt=\"getImageAlt(image)\">\n            <div v-if=\"isImageUpdated(image)\" class=\"zero-code-img-updated-badge\">\n              差し替え済み\n            </div>\n            <div class=\"zero-code-img-info\">\n              <p class=\"zero-code-img-name\">{{ image.name }}</p>\n              <p class=\"zero-code-img-size\">{{ formatFileSize(image.fileData?.size || image.size || 0) }}</p>\n            </div>\n            <button class=\"zero-code-img-delete-btn\" @click.stop=\"deleteImage(image.id, 'individual')\">\n              削除\n            </button>\n          </div>\n        </div>\n        <div v-if=\"individualImages.length === 0\" class=\"zero-code-empty-state\">\n          <p>個別画像が登録されていません。</p>\n        </div>\n      </div>\n\n      <!-- データ表示タブ -->\n      <div v-if=\"activeImageTab === 'data'\" class=\"zero-code-image-section\">\n        <div class=\"zero-code-data-display-section\">\n          <!-- 画像タイプサブタブ -->\n          <div class=\"zero-code-parts-sub-tabs\">\n            <button\n              :class=\"['zero-code-parts-sub-tab-button', { active: activeDataSubTab === 'common' }]\"\n              @click=\"activeDataSubTab = 'common'\"\n            >\n              共通画像データ\n            </button>\n            <button\n              :class=\"['zero-code-parts-sub-tab-button', { active: activeDataSubTab === 'individual' }]\"\n              @click=\"activeDataSubTab = 'individual'\"\n            >\n              個別画像データ\n            </button>\n          </div>\n\n          <!-- サブタブコンテンツ -->\n          <div class=\"zero-code-parts-sub-content\">\n            <!-- 共通画像データ -->\n            <div v-if=\"activeDataSubTab === 'common'\" class=\"zero-code-parts-sub-section\">\n              <div v-if=\"commonImages && commonImages.length > 0\">\n                <pre class=\"zero-code-data-display-pre\">{{ formatToReadableJson(commonImages) }}</pre>\n              </div>\n              <div v-else>\n                <p>共通画像データがありません</p>\n              </div>\n            </div>\n\n            <!-- 個別画像データ -->\n            <div v-if=\"activeDataSubTab === 'individual'\" class=\"zero-code-parts-sub-section\">\n              <div v-if=\"individualImages && individualImages.length > 0\">\n                <pre class=\"zero-code-data-display-pre\">{{ formatToReadableJson(individualImages) }}</pre>\n              </div>\n              <div v-else>\n                <p>個別画像データがありません</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 画像情報 -->\n    <div class=\"zero-code-image-stats\">\n      <strong>画像情報:</strong>\n      共通画像: {{ commonImages.length }}件, 個別画像: {{ individualImages.length }}件, 合計:\n      {{ totalImagesCount }}件\n    </div>\n\n    <!-- アップロードモーダル -->\n    <ImageUploadModal\n      v-if=\"showUploadModal\"\n      :category=\"currentUploadType\"\n      @close=\"closeUploadModal\"\n      @upload=\"handleImageUpload\"\n    />\n\n    <!-- 画像詳細モーダル -->\n    <ImageDetailModal\n      v-if=\"showDetailModal && selectedImage\"\n      :image=\"selectedImage\"\n      @close=\"closeDetailModal\"\n      @delete=\"handleImageDeleteFromDetail\"\n      @replace=\"handleImageReplace\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { ref, computed } from 'vue'\n  import ImageUploadModal from '@/components/images/ImageUploadModal.vue'\n  import ImageDetailModal from '@/components/images/ImageDetailModal.vue'\n  import type { ImageData } from '@types'\n  import { useImageDisplay } from '@/composables/useImageDisplay'\n\n  type ImageTab = 'common' | 'individual' | 'data'\n  type UploadType = 'common' | 'individual'\n\n  // Props定義\n  interface Props {\n    commonImages: ImageData[]\n    individualImages: ImageData[]\n  }\n\n  // Emits定義\n  interface Emits {\n    (e: 'updateCommonImages', images: ImageData[]): void\n    (e: 'updateIndividualImages', images: ImageData[]): void\n    (e: 'sendCommonImagesData'): void\n    (e: 'sendIndividualImagesData'): void\n  }\n\n  const props = defineProps<Props>()\n  const emit = defineEmits<Emits>()\n  \n  // 画像表示用コンポーザブル\n  const { getImageSrc, getImageAlt, isImageUpdated } = useImageDisplay()\n\n  // リアクティブデータ\n  const activeImageTab = ref<ImageTab>('common')\n  const activeDataSubTab = ref<'common' | 'individual'>('common')\n  const showUploadModal = ref(false)\n  const showDetailModal = ref(false)\n  const currentUploadType = ref<UploadType>('common')\n  const selectedImage = ref<ImageData | null>(null)\n\n  // コンピューテッドプロパティ\n  const totalImagesCount = computed(() => props.commonImages.length + props.individualImages.length)\n\n  // タブの一覧\n  const imageTabs: ImageTab[] = ['common', 'individual', 'data']\n\n  // タブのラベルを取得\n  const getImageTabLabel = (tab: ImageTab): string => {\n    const labels: Record<ImageTab, string> = {\n      common: '共通画像',\n      individual: '個別画像',\n      data: 'データ表示',\n    }\n    return labels[tab]\n  }\n\n  // ファイルサイズのフォーマット\n  const formatFileSize = (bytes: number | undefined): string => {\n    if (!bytes || isNaN(bytes)) return 'サイズ不明'\n    if (bytes === 0) return '0 Bytes'\n    const k = 1024\n    const sizes = ['Bytes', 'KB', 'MB', 'GB']\n    const i = Math.floor(Math.log(bytes) / Math.log(k))\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n  }\n\n  // アップロードモーダルを開く\n  const openUploadModal = (type: UploadType) => {\n    currentUploadType.value = type\n    showUploadModal.value = true\n  }\n\n  // アップロードモーダルを閉じる\n  const closeUploadModal = () => {\n    showUploadModal.value = false\n  }\n\n  // 画像詳細を表示\n  const showImageDetail = (image: ImageData) => {\n    selectedImage.value = image\n    showDetailModal.value = true\n  }\n\n  // 画像詳細モーダルを閉じる\n  const closeDetailModal = () => {\n    showDetailModal.value = false\n    selectedImage.value = null\n  }\n\n  // 画像アップロード処理\n  const handleImageUpload = (imageData: ImageData) => {\n    if (currentUploadType.value === 'common') {\n      const updatedImages = [...props.commonImages, imageData]\n      emit('updateCommonImages', updatedImages)\n    } else {\n      const updatedImages = [...props.individualImages, imageData]\n      emit('updateIndividualImages', updatedImages)\n    }\n    closeUploadModal()\n  }\n\n\n  // 読みやすいJSON形式に変換\n  const formatToReadableJson = (data: unknown): string => {\n    const formatValue = (obj: unknown, depth: number = 0): string => {\n      const indent = '  '.repeat(depth)\n      const nextIndent = '  '.repeat(depth + 1)\n\n      if (Array.isArray(obj)) {\n        if (obj.length === 0) return '[]'\n        const items = obj.map(item => nextIndent + formatValue(item, depth + 1)).join(',\\n')\n        return `[\\n${items}\\n${indent}]`\n      }\n\n      if (typeof obj === 'object' && obj !== null) {\n        const entries = Object.entries(obj as Record<string, unknown>)\n        if (entries.length === 0) return '{}'\n        \n        const items = entries.map(([key, value]) => {\n          let formattedValue: string\n          \n          if (typeof value === 'string') {\n            // 文字列の場合はエスケープ文字を実際の文字に変換してから表示\n            const cleanString = value\n              .replace(/\\\\n/g, '\\n')\n              .replace(/\\\\t/g, '\\t')\n              .replace(/\\\\\"/g, '\"')\n              .replace(/\\\\'/g, \"'\")\n              .replace(/\\\\\\\\/g, '\\\\')\n            \n            // 改行が含まれる場合はテンプレートリテラル風に表示\n            if (cleanString.includes('\\n')) {\n              const lines = cleanString.split('\\n')\n              const formattedLines = lines.map((line, index) => {\n                if (index === 0) return `\\`${line}`\n                if (index === lines.length - 1) return `${nextIndent}${line}\\``\n                return `${nextIndent}${line}`\n              }).join('\\n')\n              formattedValue = formattedLines\n            } else {\n              formattedValue = `\"${cleanString}\"`\n            }\n          } else {\n            formattedValue = formatValue(value, depth + 1)\n          }\n          \n          return `${nextIndent}\"${key}\": ${formattedValue}`\n        }).join(',\\n')\n        \n        return `{\\n${items}\\n${indent}}`\n      }\n\n      if (typeof obj === 'string') {\n        return `\"${obj.replace(/\"/g, '\\\\\"')}\"`\n      }\n\n      return JSON.stringify(obj)\n    }\n\n    return formatValue(data)\n  }\n\n  // 画像削除処理（詳細モーダルから）\n  const handleImageDeleteFromDetail = (imageId: string) => {\n    if (!selectedImage.value) return\n    \n    const category = selectedImage.value.category as UploadType\n    if (category === 'common') {\n      const updatedImages = props.commonImages.filter(img => img.id !== imageId)\n      emit('updateCommonImages', updatedImages)\n    } else {\n      const updatedImages = props.individualImages.filter(img => img.id !== imageId)\n      emit('updateIndividualImages', updatedImages)\n    }\n    closeDetailModal()\n  }\n\n  // 画像差し替え処理（詳細モーダルから）\n  const handleImageReplace = (imageId: string, newImageData: ImageData) => {\n    const category = newImageData.category as UploadType\n    if (category === 'common') {\n      const updatedImages = props.commonImages.map(img => \n        img.id === imageId ? newImageData : img\n      )\n      emit('updateCommonImages', updatedImages)\n    } else {\n      const updatedImages = props.individualImages.map(img => \n        img.id === imageId ? newImageData : img\n      )\n      emit('updateIndividualImages', updatedImages)\n    }\n    closeDetailModal()\n  }\n\n  // 画像削除\n  const deleteImage = (imageId: string, type: UploadType) => {\n    if (confirm('この画像を削除しますか？')) {\n      if (type === 'common') {\n        const updatedImages = props.commonImages.filter(img => img.id !== imageId)\n        emit('updateCommonImages', updatedImages)\n      } else {\n        const updatedImages = props.individualImages.filter(img => img.id !== imageId)\n        emit('updateIndividualImages', updatedImages)\n      }\n    }\n  }\n\n  // イベントハンドラー\n  const sendCommonImagesData = () => emit('sendCommonImagesData')\n  const sendIndividualImagesData = () => emit('sendIndividualImagesData')\n</script>\n\n","/**\n * エディタータブ管理コンポーザブル\n * タブの状態管理と切り替え機能を提供\n */\n\nimport { ref } from 'vue'\nimport type { TabType } from '@types'\nimport { logger } from '@shared/utils/logger'\n\n/**\n * エディタータブの管理機能を提供するコンポーザブル\n */\nexport function useEditorTabs(): {\n  activeTab: ReturnType<typeof ref<TabType>>\n  availableTabs: TabType[]\n  switchToTab: (tab: TabType) => void\n  isActiveTab: (tab: TabType) => boolean\n  showEditor: () => void\n  showPartsManager: () => void\n  showPreview: () => void\n  showImageManager: () => void\n} {\n  // リアクティブな状態\n  const activeTab = ref<TabType>('editor')\n\n  /**\n   * タブを切り替える\n   * @param tab - 切り替え先のタブ\n   */\n  const switchToTab = (tab: TabType): void => {\n    if (activeTab.value !== tab) {\n      logger.info(`🔄 タブ切り替え: ${activeTab.value} → ${tab}`)\n      activeTab.value = tab\n    }\n  }\n\n  /**\n   * 現在のタブが指定されたタブかどうかを判定\n   * @param tab - 判定するタブ\n   * @returns 現在のタブが指定されたタブの場合 true\n   */\n  const isActiveTab = (tab: TabType): boolean => {\n    return activeTab.value === tab\n  }\n\n  /**\n   * エディタータブに切り替える\n   */\n  const showEditor = (): void => {\n    switchToTab('editor')\n  }\n\n  /**\n   * パーツ管理タブに切り替える\n   */\n  const showPartsManager = (): void => {\n    switchToTab('parts')\n  }\n\n  /**\n   * プレビュータブに切り替える\n   */\n  const showPreview = (): void => {\n    switchToTab('preview')\n  }\n\n  /**\n   * 画像管理タブに切り替える\n   */\n  const showImageManager = (): void => {\n    switchToTab('images')\n  }\n\n  /**\n   * 利用可能なタブの一覧を取得\n   */\n  const availableTabs: TabType[] = ['editor', 'parts', 'preview', 'images']\n\n  return {\n    // 状態\n    activeTab,\n    availableTabs,\n\n    // メソッド\n    switchToTab,\n    isActiveTab,\n    showEditor,\n    showPartsManager,\n    showPreview,\n    showImageManager,\n  }\n}\n","import { reactive, computed, toRefs, watch } from 'vue'\nimport type { EditorEventBusType } from '@shared/utils/eventBus'\nimport type { Component, PartSection, DataTabType, TabType, EditingTextState } from '@types'\n\n// エディター中核状態\ninterface EditorCoreState {\n  // データ管理\n  editablePageData: Component[]\n  localParts: PartSection[]\n  localCommonParts: PartSection[]\n  localIndividualParts: PartSection[]\n\n  // UI状態\n  activeTab: TabType\n  dataTab: DataTabType\n  showEditor: boolean\n  showPartSelector: boolean\n  showNestedPartSelector: boolean\n\n  // 編集状態\n  selectedComponent: Component | null\n  selectedComponentIndex: number | string | null\n  editingText: EditingTextState | null\n\n  // 位置情報\n  insertPosition: number\n  nestedInsertPath: string\n  nestedInsertPosition: number\n}\n\n// Props型定義\ninterface Props {\n  parts?: PartSection[]\n  commonParts?: PartSection[]\n  individualParts?: PartSection[]\n  page?: Component[]\n}\n\nexport function useEditorCore(props: Props, editorEventBus: EditorEventBusType) {\n  // リアクティブな状態管理\n  const state = reactive<EditorCoreState>({\n    // データ管理\n    editablePageData: [],\n    localParts: [],\n    localCommonParts: [],\n    localIndividualParts: [],\n\n    // UI状態\n    activeTab: 'editor',\n    dataTab: 'rendered',\n    showEditor: false,\n    showPartSelector: false,\n    showNestedPartSelector: false,\n\n    // 編集状態\n    selectedComponent: null,\n    selectedComponentIndex: null,\n    editingText: null,\n\n    // 位置情報\n    insertPosition: 0,\n    nestedInsertPath: '',\n    nestedInsertPosition: 0,\n  })\n\n  // propsの監視とeditablePageDataの初期化\n  watch(\n    () => props.page,\n    (newPage) => {\n      if (Array.isArray(newPage) && newPage.length > 0) {\n        state.editablePageData = [...newPage];\n      }\n    },\n    { immediate: true, deep: true }\n  )\n\n  // partsの監視と初期化\n  watch(\n    () => props.parts,\n    (newParts) => {\n      if (Array.isArray(newParts)) {\n        state.localParts = [...newParts];\n      }\n    },\n    { immediate: true, deep: true }\n  )\n\n  // 計算プロパティ\n  const computedValues = {\n    // 現在選択されているコンポーネントのインデックス\n    currentComponentIndex: computed(() => {\n      if (state.selectedComponentIndex === null) return -1\n      return typeof state.selectedComponentIndex === 'number'\n        ? state.selectedComponentIndex\n        : parseInt(state.selectedComponentIndex.toString())\n    }),\n\n    // 編集可能なページデータの長さ\n    pageDataLength: computed(() => state.editablePageData.length),\n\n    // 選択されたコンポーネントが存在するかどうか\n    hasSelectedComponent: computed(() => state.selectedComponent !== null),\n\n    // 現在編集中かどうか\n    isEditing: computed(() => state.showEditor && state.selectedComponent !== null),\n\n    // Tiptap編集中かどうか\n    isTiptapEditing: computed(() => state.editingText !== null),\n  }\n\n  // タブ管理\n  const tabActions = {\n    switchToTab: (tab: TabType) => {\n      state.activeTab = tab\n      // エディタタブに切り替えた時のみデータタブをレンダリング結果に戻す\n      if (tab === 'editor') {\n        state.dataTab = 'rendered'\n      }\n    },\n\n    setDataTab: (tab: DataTabType) => {\n      state.dataTab = tab\n    },\n  }\n\n  // エディター状態管理\n  const editorActions = {\n    openEditor: (component: Component, index: number | string) => {\n      state.selectedComponent = component\n      state.selectedComponentIndex = index\n      state.showEditor = true\n    },\n\n    closeEditor: () => {\n      // エディター閉鎖イベントを発火（クリーンアップ処理のため）\n      editorEventBus.emit('editorClosed', {\n        componentId: state.selectedComponent?.id,\n        componentIndex: state.selectedComponentIndex\n      })\n\n      state.showEditor = false\n      state.selectedComponent = null\n      state.selectedComponentIndex = null\n    },\n\n    openPartSelector: (position: number) => {\n      state.insertPosition = position\n      state.showPartSelector = true\n    },\n\n    closePartSelector: () => {\n      state.showPartSelector = false\n    },\n\n    openNestedPartSelector: (path: string, position: number) => {\n      state.nestedInsertPath = path\n      state.nestedInsertPosition = position\n      state.showNestedPartSelector = true\n    },\n\n    closeNestedPartSelector: () => {\n      state.showNestedPartSelector = false\n    },\n  }\n\n  // Tiptap編集状態管理\n  const tiptapActions = {\n    startTiptapEdit: (\n      componentId: string,\n      paramName: string,\n      hierarchyPath: number[] = [],\n      depth: number = 0,\n      arrayName?: string,\n      itemIndex?: number\n    ) => {\n      state.editingText = {\n        componentId,\n        paramName,\n        hierarchyPath,\n        depth,\n        arrayName,\n        itemIndex,\n      }\n    },\n\n    stopTiptapEdit: () => {\n      state.editingText = null\n    },\n  }\n\n  // データ初期化\n  const initializeData = () => {\n    state.editablePageData = Array.isArray(props.page) ? [...props.page] : []\n    state.localParts = Array.isArray(props.parts) ? [...props.parts] : []\n    state.localCommonParts = Array.isArray(props.commonParts) ? [...props.commonParts] : []\n    state.localIndividualParts = Array.isArray(props.individualParts) ? [...props.individualParts] : []\n  }\n\n  // propsの監視（即座実行も含む）\n  watch(\n    () => props.page,\n    newPage => {\n      if (Array.isArray(newPage)) {\n        state.editablePageData = [...newPage]\n      }\n    },\n    { deep: true, immediate: true }\n  )\n\n  watch(\n    () => props.parts,\n    newParts => {\n      if (Array.isArray(newParts)) {\n        state.localParts = [...newParts]\n      }\n    },\n    { deep: true, immediate: true }\n  )\n\n  watch(\n    () => props.commonParts,\n    newCommonParts => {\n      if (Array.isArray(newCommonParts)) {\n        state.localCommonParts = [...newCommonParts]\n      }\n    },\n    { deep: true, immediate: true }\n  )\n\n  watch(\n    () => props.individualParts,\n    newIndividualParts => {\n      if (Array.isArray(newIndividualParts)) {\n        state.localIndividualParts = [...newIndividualParts]\n      }\n    },\n    { deep: true, immediate: true }\n  )\n\n  // 初期化実行\n  initializeData()\n\n  return {\n    // 状態\n    ...toRefs(state),\n\n    // 計算プロパティ\n    ...computedValues,\n\n    // アクション\n    ...tabActions,\n    ...editorActions,\n    ...tiptapActions,\n\n    // 初期化\n    initializeData,\n  }\n}\n","import type { Component, PartSection, ArrayItem, Part } from '@types'\nimport { logger } from '@shared/utils/logger'\n\n// 共通のユーティリティ関数を統合\nexport function useEditorUtils() {\n  // 入力タイプ判定（統合版）\n  const getInputType = (key: string): string => {\n    if (key.includes('url') || key.includes('src') || key.includes('link')) return 'url'\n    if (key.includes('email')) return 'email'\n    if (key.includes('number') || key.includes('count')) return 'number'\n    if (key.includes('date')) return 'date'\n    if (key.includes('time')) return 'time'\n    if (key.includes('password')) return 'password'\n    if (key.includes('tel') || key.includes('phone')) return 'tel'\n    return 'text'\n  }\n\n  // コンポーネント操作\n  const componentUtils = {\n    // 階層パスでコンポーネントを検索\n    findComponentByPath: (components: Component[], path: number[]): Component | null => {\n      let current = components\n      let target: Component | null = null\n\n      for (let i = 0; i < path.length; i++) {\n        const index = path[i]\n        if (index >= 0 && index < current.length) {\n          target = current[index]\n          if (i < path.length - 1) {\n            current = target.nested_parts || []\n          }\n        } else {\n          return null\n        }\n      }\n\n      return target\n    },\n\n    // 新規コンポーネント作成\n    createNewComponent: (type: string, moduleName: string): Component => {\n      const newId = `comp_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`\n\n      return {\n        id: newId,\n        type,\n        module_name: moduleName,\n        nested_parts: [],\n      }\n    },\n\n    // コンポーネント削除\n    deleteComponent: (components: Component[], index: number): Component[] => {\n      return components.filter((_, i) => i !== index)\n    },\n\n    // コンポーネント複製\n    duplicateComponent: (component: Component): Component => {\n      const newId = `comp_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`\n\n      return {\n        ...JSON.parse(JSON.stringify(component)),\n        id: newId,\n      }\n    },\n\n    // 配列アイテム追加\n    addArrayItem: (component: Component, arrayKey: string): void => {\n      if (!component[arrayKey]) {\n        component[arrayKey] = []\n      }\n      const arrayData = component[arrayKey] as any[]\n      const newItem = { id: `item_${Date.now()}_${Math.random().toString(36).substring(2, 11)}` }\n      arrayData.push(newItem)\n    },\n\n    // 配列アイテム削除\n    removeArrayItem: (component: Component, arrayKey: string, index: number): void => {\n      const arrayData = component[arrayKey] as any[]\n      if (Array.isArray(arrayData) && index >= 0 && index < arrayData.length) {\n        arrayData.splice(index, 1)\n      }\n    },\n  }\n\n  // テンプレート関連\n  const templateUtils = {\n    // テンプレート取得\n    getTemplate: (type: string, moduleName: string, parts: PartSection[]): string => {\n      const section = parts.find(section => section.type === type)\n      if (!section) return ''\n\n      const part = section.module.find((part: Part) => part.title === moduleName)\n      return part?.body || ''\n    },\n\n    // テンプレート内のフィールド抽出\n    extractFields: (template: string): string[] => {\n      const fields: string[] = []\n      const patterns = [\n        /\\{\\$([^:}]+):/g, // {$field:default}\n        /\\(\\$([^:}]+):/g, // ($field:option1|option2)\n        /\\(\\$([^?}]+)\\?:/g, // ($field?:option1|option2)\n      ]\n\n      patterns.forEach(pattern => {\n        let match\n        while ((match = pattern.exec(template)) !== null) {\n          const fieldName = match[1]\n          if (!fields.includes(fieldName)) {\n            fields.push(fieldName)\n          }\n        }\n      })\n\n      return fields\n    },\n\n    // テンプレート内のスロット抽出\n    extractSlots: (template: string): string[] => {\n      // @slot記法は廃止されたため、空配列を返す\n      return []\n    },\n  }\n\n  // 配列操作\n  const arrayUtils = {\n    // 配列アイテム追加\n    addArrayItem: (array: ArrayItem[], newItem: ArrayItem): ArrayItem[] => {\n      return [...array, newItem]\n    },\n\n    // 配列アイテム削除\n    removeArrayItem: (array: ArrayItem[], index: number): ArrayItem[] => {\n      return array.filter((_, i) => i !== index)\n    },\n\n    // 配列アイテム更新\n    updateArrayItem: (array: ArrayItem[], index: number, updatedItem: ArrayItem): ArrayItem[] => {\n      return array.map((item, i) => (i === index ? updatedItem : item))\n    },\n\n    // 配列アイテム移動\n    moveArrayItem: (array: ArrayItem[], fromIndex: number, toIndex: number): ArrayItem[] => {\n      const result = [...array]\n      const [removed] = result.splice(fromIndex, 1)\n      result.splice(toIndex, 0, removed)\n      return result\n    },\n  }\n\n  // フィールド操作\n  const fieldUtils = {\n    // フィールド値取得\n    getFieldValue: (component: Component, fieldName: string): any => {\n      return component[fieldName] || ''\n    },\n\n    // フィールド値設定\n    setFieldValue: (component: Component, fieldName: string, value: any): Component => {\n      return {\n        ...component,\n        [fieldName]: value,\n      }\n    },\n\n    // フィールド値検証\n    validateField: (fieldName: string, value: any): boolean => {\n      const inputType = getInputType(fieldName)\n\n      switch (inputType) {\n        case 'email':\n          return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value)\n        case 'url':\n          try {\n            new URL(value)\n            return true\n          } catch {\n            return false\n          }\n        case 'number':\n          return !isNaN(Number(value))\n        default:\n          return true\n      }\n    },\n  }\n\n  // 文字列操作\n  const stringUtils = {\n    // 階層パスを文字列に変換\n    stringifyHierarchyPath: (path: number[]): string => {\n      return path.join('.')\n    },\n\n    // 文字列を階層パスに変換（エラーハンドリング強化）\n    parseHierarchyPath: (pathString: string): number[] => {\n      if (!pathString || typeof pathString !== 'string') {\n        logger.warn('Invalid pathString provided:', pathString)\n        return []\n      }\n\n      try {\n        const parts = pathString.split('.')\n        const result: number[] = []\n\n        for (const part of parts) {\n          const trimmedPart = part.trim()\n          if (trimmedPart === '') continue // 空文字をスキップ\n\n          const num = parseInt(trimmedPart, 10)\n          if (!isNaN(num) && num >= 0) {\n            result.push(num)\n          } else {\n            logger.error(`Invalid path component: \"${part}\" in pathString: \"${pathString}\"`)\n            return [] // 不正な形式の場合は空配列を返す\n          }\n        }\n\n        return result\n      } catch (error) {\n        logger.error('Error parsing hierarchy path:', pathString, error)\n        return []\n      }\n    },\n\n    // キャメルケースをケバブケースに変換\n    camelToKebab: (str: string): string => {\n      return str.replace(/([a-z0-9])([A-Z])/g, '$1-$2').toLowerCase()\n    },\n\n    // ケバブケースをキャメルケースに変換\n    kebabToCamel: (str: string): string => {\n      return str.replace(/-([a-z])/g, (_match, letter) => letter.toUpperCase())\n    },\n  }\n\n  // ファイルサイズフォーマット\n  const formatFileSize = (bytes: number): string => {\n    if (bytes === 0) return '0 Bytes'\n\n    const k = 1024\n    const sizes = ['Bytes', 'KB', 'MB', 'GB']\n    const i = Math.floor(Math.log(bytes) / Math.log(k))\n\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n  }\n\n  return {\n    // 基本ユーティリティ\n    getInputType,\n    formatFileSize,\n\n    // 各種操作\n    component: componentUtils,\n    template: templateUtils,\n    array: arrayUtils,\n    field: fieldUtils,\n    string: stringUtils,\n  }\n}\n","import { onBeforeUnmount } from 'vue'\nimport { logger } from '@shared/utils/logger'\n\n// 型定義\ntype EditorCommand =\n  | 'bold'\n  | 'italic'\n  | 'underline'\n  | 'strikeThrough'\n  | 'justifyLeft'\n  | 'justifyCenter'\n  | 'justifyRight'\n  | 'createLink'\n  | 'backColor'\ntype TextAlign = 'left' | 'center' | 'right'\ntype TextMark = 'bold' | 'italic' | 'underline' | 'strike'\n\nexport interface EditorInstance {\n  element: HTMLElement\n  getHTML: () => string\n  setContent: (content: string) => void\n  destroy: () => void\n  isActive: (mark: string) => boolean\n  isInitialized: boolean\n  isDestroyed: boolean\n  isFocused: boolean\n  chain: () => {\n    focus: () => {\n      toggleMark: (mark: string) => { run: () => void }\n      setTextAlign: (align: string) => { run: () => void }\n    }\n  }\n}\n\nexport function useSimpleEditor() {\n  let simpleEditorElement: HTMLElement | null = null\n\n  // HTMLサニタイゼーション（不要なタグを除去）\n  const sanitizeContent = (content: string): string => {\n    if (!content || typeof content !== 'string' || content.trim() === '') {\n      return '<p></p>'\n    }\n\n    // HTMLをサニタイズ - 許可されたタグのみ保持\n    const allowedTags = ['p', 'strong', 'em', 'u', 's', 'a', 'span', 'br']\n    const allowedAttributes = ['href', 'target', 'style']\n\n    // 一時的なDOM要素を作成してHTMLを解析\n    const tempDiv = document.createElement('div')\n    tempDiv.innerHTML = content\n\n    // 不要なタグを除去する再帰関数\n    const cleanElement = (element: Element): void => {\n      const tagName = element.tagName.toLowerCase()\n\n      // 許可されていないタグの場合、内容のみを保持\n      if (!allowedTags.includes(tagName)) {\n        const parent = element.parentNode\n        if (parent) {\n          // 子要素を親に移動\n          while (element.firstChild) {\n            parent.insertBefore(element.firstChild, element)\n          }\n          parent.removeChild(element)\n        }\n        return\n      }\n\n      // 許可されていない属性を除去\n      Array.from(element.attributes).forEach(attr => {\n        if (!allowedAttributes.includes(attr.name.toLowerCase())) {\n          element.removeAttribute(attr.name)\n        }\n      })\n\n      // 子要素を再帰的にクリーン\n      Array.from(element.children).forEach(child => {\n        cleanElement(child)\n      })\n    }\n\n    // 全ての子要素をクリーン\n    Array.from(tempDiv.children).forEach(child => {\n      cleanElement(child)\n    })\n\n    let sanitized = tempDiv.innerHTML\n\n    // 空のタグやbrタグのみの要素を正規化\n    sanitized = sanitized\n      .replace(/<p>\\s*<\\/p>/g, '<p><br></p>') // 空のp要素にbrを追加\n      .replace(/<p>\\s*<br>\\s*<\\/p>/g, '<p><br></p>') // brのみのp要素を正規化\n      .replace(/(<\\w+>)\\s*(<\\/\\w+>)/g, '$1<br>$2') // 他の空要素にもbrを追加\n\n    // HTMLが含まれていない場合はp要素でラップ\n    if (!sanitized.includes('<')) {\n      sanitized = `<p>${sanitized}</p>`\n    }\n\n    // 最低限のp要素を保証\n    if (!sanitized || sanitized.trim() === '') {\n      sanitized = '<p><br></p>'\n    }\n\n    return sanitized\n  }\n\n  // 選択範囲の取得\n  const getSelectionRange = () => {\n    const selection = window.getSelection()\n    if (!selection || selection.rangeCount === 0) return { selection: null, range: null }\n\n    const range = selection.getRangeAt(0)\n    if (!simpleEditorElement?.contains(range.commonAncestorContainer)) {\n      return { selection: null, range: null }\n    }\n\n    return { selection, range }\n  }\n\n  // 要素作成ヘルパー\n  const createElementWithAttributes = (\n    tagName: string,\n    attributes?: Record<string, string>\n  ): HTMLElement => {\n    const el = document.createElement(tagName)\n    if (attributes) {\n      Object.entries(attributes).forEach(([key, value]) => {\n        el.setAttribute(key, value)\n      })\n    }\n    return el\n  }\n\n  // 安全なコンテンツ囲み\n  const surroundContentsSafely = (range: globalThis.Range, wrapper: HTMLElement) => {\n    try {\n      range.surroundContents(wrapper)\n    } catch {\n      const contents = range.extractContents()\n      wrapper.appendChild(contents)\n      range.insertNode(wrapper)\n    }\n  }\n\n  // タグスタイルの適用\n  const applyTagStyle = (\n    range: globalThis.Range,\n    tag: string,\n    attributes?: Record<string, string>\n  ) => {\n    const element = createElementWithAttributes(tag, attributes)\n    surroundContentsSafely(range, element)\n  }\n\n  // インラインスタイルの適用\n  const applyInlineStyle = (range: globalThis.Range, style: Record<string, string>) => {\n    const span = document.createElement('span')\n    Object.assign(span.style, style)\n    surroundContentsSafely(range, span)\n  }\n\n  // 折りたたまれた選択範囲にプレースホルダーを挿入\n  const insertPlaceholderIfCollapsed = (\n    range: globalThis.Range,\n    selection: globalThis.Selection\n  ) => {\n    if (!range.collapsed) return\n    const placeholder = document.createTextNode('テキスト')\n    range.insertNode(placeholder)\n    range.selectNodeContents(placeholder)\n    selection.removeAllRanges()\n    selection.addRange(range)\n  }\n\n  // テキスト配置の適用（document.execCommandの代替）\n  const applyTextAlignment = (align: 'left' | 'center' | 'right') => {\n    const { selection, range } = getSelectionRange()\n    if (!selection || !range) return\n\n    // 現在の段落要素を取得\n    let currentParagraph = range.commonAncestorContainer\n\n    // テキストノードの場合、親要素を取得\n    if (currentParagraph.nodeType === Node.TEXT_NODE) {\n      currentParagraph = currentParagraph.parentElement || currentParagraph\n    }\n\n    // 最も近いp要素を取得\n    const paragraphElement = (currentParagraph as Element).closest('p')\n\n    if (paragraphElement) {\n      // p要素にtext-alignスタイルを適用\n      const alignmentStyles = {\n        left: 'left',\n        center: 'center',\n        right: 'right',\n      }\n\n      paragraphElement.style.textAlign = alignmentStyles[align]\n    }\n  }\n\n  // テキストスタイルの適用\n  const applyTextStyle = (style: EditorCommand, value?: string) => {\n    if (!simpleEditorElement) {\n      logger.warn('Editor element not found')\n      return\n    }\n\n    simpleEditorElement.focus()\n\n    const { selection, range } = getSelectionRange()\n    if (!selection || !range) {\n      logger.warn('Invalid selection')\n      return\n    }\n\n    insertPlaceholderIfCollapsed(range, selection)\n\n    const commandMap: Record<EditorCommand, () => void> = {\n      bold: () => applyTagStyle(range, 'strong'),\n      italic: () => applyTagStyle(range, 'em'),\n      underline: () => applyTagStyle(range, 'u'),\n      strikeThrough: () => applyTagStyle(range, 's'),\n      justifyLeft: () => applyTextAlignment('left'),\n      justifyCenter: () => applyTextAlignment('center'),\n      justifyRight: () => applyTextAlignment('right'),\n      createLink: () => value && applyTagStyle(range, 'a', { href: value, target: '_blank' }),\n      backColor: () => value && applyInlineStyle(range, { backgroundColor: value }),\n    }\n\n    try {\n      const command = commandMap[style]\n      if (command) {\n        command()\n      } else {\n        logger.warn(`Unknown style: ${style}`)\n      }\n    } catch (err) {\n      logger.error(`Failed to apply style ${style}:`, err)\n      try {\n        document.execCommand(style, false, value)\n      } catch (fallbackError) {\n        logger.error(`Fallback command failed:`, fallbackError)\n      }\n    }\n  }\n\n  // コマンド実行\n  const executeSimpleCommand = (command: EditorCommand, value?: string) => {\n    if (!simpleEditorElement) return\n    simpleEditorElement.focus()\n\n    const selection = window.getSelection()\n    if (\n      selection?.rangeCount &&\n      simpleEditorElement.contains(selection.getRangeAt(0).commonAncestorContainer)\n    ) {\n      const range = selection.getRangeAt(0)\n      selection.removeAllRanges()\n      selection.addRange(range)\n    }\n\n    applyTextStyle(command, value)\n  }\n\n  // コマンドハンドラー\n  const commandHandlers = {\n    toggleBold: () => executeSimpleCommand('bold'),\n    toggleItalic: () => executeSimpleCommand('italic'),\n    toggleUnderline: () => executeSimpleCommand('underline'),\n    toggleStrike: () => executeSimpleCommand('strikeThrough'),\n    alignLeft: () => executeSimpleCommand('justifyLeft'),\n    alignCenter: () => executeSimpleCommand('justifyCenter'),\n    alignRight: () => executeSimpleCommand('justifyRight'),\n    setLink: () => {\n      const url = window.prompt('URLを入力してください:')\n      if (url) executeSimpleCommand('createLink', url)\n    },\n    isActive: (mark: TextMark): boolean => {\n      if (!simpleEditorElement) return false\n      const selection = window.getSelection()\n      if (!selection?.rangeCount) return false\n      const range = selection.getRangeAt(0)\n      if (!simpleEditorElement.contains(range.commonAncestorContainer)) return false\n\n      const stateMap: Record<TextMark, () => boolean> = {\n        bold: () => checkMarkActive('strong'),\n        italic: () => checkMarkActive('em'),\n        underline: () => checkMarkActive('u'),\n        strike: () => checkMarkActive('s'),\n      }\n\n      return stateMap[mark]?.() ?? false\n    },\n  }\n\n  // マーク状態チェックのヘルパー（document.queryCommandStateの代替）\n  const checkMarkActive = (tagName: string): boolean => {\n    const { selection, range } = getSelectionRange()\n    if (!selection || !range) return false\n\n    // 選択範囲の祖先要素を確認\n    let currentElement = range.commonAncestorContainer\n\n    // テキストノードの場合、親要素を取得\n    if (currentElement.nodeType === window.Node.TEXT_NODE) {\n      const parentElement = (currentElement as Text).parentElement\n      currentElement = parentElement || currentElement\n    }\n\n    // 祖先要素を辿ってタグを探す\n    while (currentElement && currentElement !== simpleEditorElement) {\n      if (currentElement.nodeType === window.Node.ELEMENT_NODE) {\n        const element = currentElement as Element\n        if (element.tagName.toLowerCase() === tagName.toLowerCase()) {\n          return true\n        }\n      }\n      const parentElement = (currentElement as Element).parentElement\n      currentElement = parentElement as Node\n    }\n\n    return false\n  }\n\n  // エディタースタイルの設定\n  const getEditorStyles = () => `\n    border: 2px solid #3b82f6;\n    border-radius: 8px;\n    padding: 12px 16px;\n    min-height: 60px;\n    background: white;\n    outline: none;\n    line-height: 1.6;\n    color: #1f2937;\n    font-size: 14px;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1), 0 1px 2px rgba(0, 0, 0, 0.06);\n    transition: all 0.2s ease;\n  `\n\n  // エディター属性の設定\n  const setEditorAttributes = (element: HTMLElement) => {\n    const attributes = {\n      'data-gramm': 'false',\n      spellcheck: 'false',\n      autocomplete: 'off',\n      autocorrect: 'off',\n      autocapitalize: 'off',\n    }\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      element.setAttribute(key, value)\n    })\n  }\n\n  // イベントリスナーの設定\n  const setupEventListeners = (editorDiv: HTMLElement, onUpdate?: (html: string) => void) => {\n    let saveTimeout: number | null = null\n    let updateTimeout: number | null = null\n\n    // フォーカスイベント\n    editorDiv.addEventListener('focus', () => {\n      editorDiv.style.borderColor = '#3b82f6'\n      editorDiv.style.boxShadow = '0 0 0 3px rgba(59,130,246,0.1), 0 1px 3px rgba(0,0,0,0.1)'\n    })\n\n    editorDiv.addEventListener('blur', () => {\n      editorDiv.style.borderColor = '#3b82f6'\n      editorDiv.style.boxShadow = '0 1px 3px rgba(0,0,0,0.1), 0 1px 2px rgba(0,0,0,0.06)'\n    })\n\n    // キーイベント（改行時のdiv防止）\n    editorDiv.addEventListener('keydown', e => {\n      if (e.key === 'Enter' && !e.shiftKey) {\n        e.preventDefault()\n\n        const selection = window.getSelection()\n        if (!selection?.rangeCount) return\n\n        const range = selection.getRangeAt(0)\n\n        // Enter キーで新しい段落を作成\n        const currentElement = range.startContainer\n        let targetParagraph: HTMLElement | null = null\n\n        // 現在の要素がp要素内かを確認\n        if (currentElement.nodeType === window.Node.TEXT_NODE) {\n          targetParagraph =\n            ((currentElement as Text).parentElement?.closest('p') as HTMLElement) || null\n        } else if (currentElement.nodeType === window.Node.ELEMENT_NODE) {\n          targetParagraph = ((currentElement as Element).closest('p') as HTMLElement) || null\n        }\n\n        if (targetParagraph) {\n          // 既存のp要素内での改行 - 新しいp要素を作成\n          const newP = document.createElement('p')\n          newP.innerHTML = '<br>' // 空の段落には br を挿入してレイアウトを維持\n\n          // 新しい段落を挿入\n          targetParagraph.insertAdjacentElement('afterend', newP)\n\n          // カーソルを新しい段落の先頭に移動\n          const newRange = document.createRange()\n          newRange.setStart(newP, 0)\n          newRange.setEnd(newP, 0)\n          selection.removeAllRanges()\n          selection.addRange(newRange)\n        } else {\n          // p要素外での改行 - 段落をラップして新しい段落を作成\n          const newP = document.createElement('p')\n          newP.innerHTML = '<br>'\n\n          range.deleteContents()\n          range.insertNode(newP)\n\n          // カーソルを新しい段落の先頭に移動\n          const newRange = document.createRange()\n          newRange.setStart(newP, 0)\n          newRange.setEnd(newP, 0)\n          selection.removeAllRanges()\n          selection.addRange(newRange)\n        }\n\n        // 入力イベントを発火\n        editorDiv.dispatchEvent(new Event('input', { bubbles: true }))\n      }\n    })\n\n    // 入力イベント（サニタイゼーション付き）\n    editorDiv.addEventListener('input', () => {\n      if (saveTimeout) window.clearTimeout(saveTimeout)\n      saveTimeout = window.setTimeout(() => {\n        // 入力内容をサニタイズしてから更新\n        const sanitizedContent = sanitizeContent(editorDiv.innerHTML)\n        if (sanitizedContent !== editorDiv.innerHTML) {\n          // カーソル位置を保存\n          const selection = window.getSelection()\n          let range = null\n          if (selection && selection.rangeCount > 0) {\n            range = selection.getRangeAt(0).cloneRange()\n          }\n\n          // サニタイズされた内容に更新\n          editorDiv.innerHTML = sanitizedContent\n\n          // カーソル位置を復元（可能な場合）\n          if (range && selection) {\n            try {\n              selection.removeAllRanges()\n              selection.addRange(range)\n            } catch (e) {\n              // カーソル復元に失敗した場合は末尾に移動\n              const newRange = document.createRange()\n              newRange.selectNodeContents(editorDiv)\n              newRange.collapse(false)\n              selection.removeAllRanges()\n              selection.addRange(newRange)\n            }\n          }\n        }\n        onUpdate?.(editorDiv.innerHTML)\n      }, 300)\n    })\n\n    // 選択変更イベント\n    editorDiv.addEventListener('selectionchange', () => {\n      try {\n        editorDiv.dispatchEvent(new CustomEvent('selectionchange'))\n      } catch (error) {\n        logger.warn('Selection change error:', error)\n      }\n    })\n\n    // DOM変更監視\n    const observer = new globalThis.MutationObserver(() => {\n      if (updateTimeout) window.clearTimeout(updateTimeout)\n      updateTimeout = window.setTimeout(() => {\n        onUpdate?.(editorDiv.innerHTML)\n      }, 100)\n    })\n\n    observer.observe(editorDiv, { childList: true, subtree: true, characterData: true })\n\n    return { saveTimeout, updateTimeout, observer }\n  }\n\n  // シンプルエディターの作成\n  const createSimpleEditor = (\n    content: string,\n    container: HTMLElement,\n    onUpdate?: (html: string) => void\n  ): EditorInstance => {\n    const existing = container.querySelector('.simple-editor-content')\n    if (existing) existing.remove()\n\n    const editorDiv = document.createElement('div')\n    editorDiv.className = 'simple-editor-content'\n    editorDiv.contentEditable = 'true'\n\n    // コンテンツをサニタイズして設定\n    const sanitizedContent = sanitizeContent(content)\n    editorDiv.innerHTML = sanitizedContent\n\n    editorDiv.style.cssText = getEditorStyles()\n\n    setEditorAttributes(editorDiv)\n\n    const { saveTimeout, updateTimeout, observer } = setupEventListeners(editorDiv, onUpdate)\n\n    container.appendChild(editorDiv)\n    simpleEditorElement = editorDiv\n\n    return {\n      element: editorDiv,\n      getHTML: () => editorDiv.innerHTML,\n      setContent: (newContent: string) => (editorDiv.innerHTML = newContent),\n      destroy: () => {\n        window.clearTimeout(saveTimeout!)\n        window.clearTimeout(updateTimeout!)\n        observer.disconnect()\n        editorDiv.remove()\n        simpleEditorElement = null\n      },\n      isActive: (mark: string) => commandHandlers.isActive(mark as TextMark),\n      isInitialized: true,\n      isDestroyed: false,\n      isFocused: false,\n      chain: () => ({\n        focus: () => ({\n          toggleMark: (mark: string) => ({\n            run: () => {\n              const toggleMap: Record<string, () => void> = {\n                bold: commandHandlers.toggleBold,\n                italic: commandHandlers.toggleItalic,\n                underline: commandHandlers.toggleUnderline,\n                strike: commandHandlers.toggleStrike,\n              }\n              toggleMap[mark]?.()\n            },\n          }),\n          setTextAlign: (align: string) => ({\n            run: () => {\n              const alignMap: Record<string, () => void> = {\n                left: commandHandlers.alignLeft,\n                center: commandHandlers.alignCenter,\n                right: commandHandlers.alignRight,\n              }\n              alignMap[align]?.()\n            },\n          }),\n        }),\n      }),\n    }\n  }\n\n  // エディター初期化\n  const initEditor = (\n    content: string,\n    container: HTMLElement,\n    onUpdate?: (html: string) => void\n  ): EditorInstance => {\n    try {\n      container.innerHTML = ''\n      return createSimpleEditor(content, container, onUpdate)\n    } catch (error) {\n      logger.error('Editor init error:', error)\n      throw error\n    }\n  }\n\n  // エディター破棄\n  const destroyEditor = () => {\n    if (simpleEditorElement) {\n      try {\n        simpleEditorElement.remove()\n        simpleEditorElement = null\n      } catch (error) {\n        logger.error('Editor destroy error:', error)\n      }\n    }\n  }\n\n  // エディター準備状態チェック\n  const isEditorReady = (): boolean => !!simpleEditorElement\n\n  // コンポーネントアンマウント時のクリーンアップ\n  onBeforeUnmount(() => destroyEditor())\n\n  return {\n    initEditor,\n    destroyEditor,\n    getEditor: () => simpleEditorElement,\n    isEditorReady,\n  }\n}\n","/**\n * パフォーマンス最適化ユーティリティ\n * メモ化、キャッシュ、バッチ処理などの最適化機能を提供\n */\n\nimport { logger } from '@shared/utils/logger'\nimport type { Component } from '@types'\n\n// 汎用メモ化機能\nexport function memoize<TArgs extends unknown[], TReturn>(\n  fn: (...args: TArgs) => TReturn,\n  keyFn?: (...args: TArgs) => string,\n  maxCacheSize = 100\n): (...args: TArgs) => TReturn {\n  const cache = new Map<string, TReturn>()\n\n  return (...args: TArgs): TReturn => {\n    const key = keyFn ? keyFn(...args) : JSON.stringify(args)\n\n    if (cache.has(key)) {\n      logger.debug('メモ化キャッシュヒット:', key)\n      return cache.get(key)!\n    }\n\n    const result = fn(...args)\n\n    // キャッシュサイズ制限\n    if (cache.size >= maxCacheSize) {\n      const firstKey = cache.keys().next().value\n      if (firstKey) {\n        cache.delete(firstKey)\n      }\n    }\n\n    cache.set(key, result)\n    logger.debug('メモ化キャッシュ保存:', key)\n\n    return result\n  }\n}\n\n// 重いコンポーネント操作のメモ化\nexport const memoizedComponentOperations = {\n  // コンポーネント検索のメモ化\n  findComponent: memoize(\n    (components: Component[], targetId: string): Component | null => {\n      for (const component of components) {\n        if (component.id === targetId) {\n          return component\n        }\n        // ネストパーツ内を検索\n        if (component.nested_parts) {\n          const found = memoizedComponentOperations.findComponent(component.nested_parts, targetId)\n          if (found) return found\n        }\n      }\n      return null\n    },\n    (components, targetId) => `${targetId}_${components.length}_${components.map(c => c.id).join('_')}`,\n    50\n  ),\n\n  // コンポーネントパス計算のメモ化\n  getComponentPath: memoize(\n    (components: Component[], targetId: string, currentPath: number[] = []): number[] | null => {\n      for (let i = 0; i < components.length; i++) {\n        const component = components[i]\n        const newPath = [...currentPath, i]\n\n        if (component.id === targetId) {\n          return newPath\n        }\n\n        if (component.nested_parts) {\n          const found = memoizedComponentOperations.getComponentPath(\n            component.nested_parts,\n            targetId,\n            newPath\n          )\n          if (found) return found\n        }\n      }\n      return null\n    },\n    (components, targetId, currentPath) =>\n      `path_${targetId}_${components.length}_${currentPath?.join('_') || ''}`,\n    30\n  ),\n\n  // コンポーネント階層の深さ計算のメモ化\n  getComponentDepth: memoize(\n    (components: Component[], targetId: string, depth: number = 0): number => {\n      for (const component of components) {\n        if (component.id === targetId) {\n          return depth\n        }\n        if (component.nested_parts) {\n          const found = memoizedComponentOperations.getComponentDepth(\n            component.nested_parts,\n            targetId,\n            depth + 1\n          )\n          if (found >= 0) return found\n        }\n      }\n      return -1\n    },\n    (components, targetId, depth: number = 0) => `depth_${targetId}_${depth}_${components.length}`,\n    30\n  )\n}\n\n// バッチ処理用のデバウンス機能\nexport function debounce<TArgs extends unknown[], TReturn>(\n  func: (...args: TArgs) => TReturn,\n  wait: number\n): (...args: TArgs) => void {\n  let timeout: ReturnType<typeof setTimeout> | null = null\n\n  return (...args: TArgs) => {\n    if (timeout) {\n      clearTimeout(timeout)\n    }\n\n    timeout = setTimeout(() => {\n      func(...args)\n      timeout = null\n    }, wait)\n  }\n}\n\n// スロットル機能（連続実行制限）\nexport function throttle<T extends (...args: unknown[]) => unknown>(\n  func: T,\n  limit: number\n): T {\n  let inThrottle = false\n\n  return ((...args: Parameters<T>) => {\n    if (!inThrottle) {\n      func(...args)\n      inThrottle = true\n      setTimeout(() => {\n        inThrottle = false\n      }, limit)\n    }\n  }) as T\n}\n\n// 配列操作の最適化\nexport const optimizedArrayOperations = {\n  // 大きな配列のバッチ更新\n  batchUpdate: <T>(\n    array: T[],\n    updates: Array<{ index: number; value: T }>\n  ): T[] => {\n    const result = [...array]\n    updates.forEach(({ index, value }) => {\n      if (index >= 0 && index < result.length) {\n        result[index] = value\n      }\n    })\n    logger.debug(`バッチ更新完了: ${updates.length}件`)\n    return result\n  },\n\n  // 効率的な配列検索\n  findIndex: memoize(\n    <T>(array: T[], predicate: (item: T) => boolean): number => {\n      return array.findIndex(predicate)\n    },\n    (array, predicate) => `${array.length}_${predicate.toString()}`,\n    20\n  )\n}\n\n// キャッシュ管理\nexport class CacheManager {\n  private caches = new Map<string, Map<string, unknown>>()\n\n  getCache(cacheName: string): Map<string, unknown> {\n    if (!this.caches.has(cacheName)) {\n      this.caches.set(cacheName, new Map())\n    }\n    return this.caches.get(cacheName)!\n  }\n\n  clearCache(cacheName: string): void {\n    if (this.caches.has(cacheName)) {\n      this.caches.get(cacheName)!.clear()\n      logger.debug(`キャッシュクリア: ${cacheName}`)\n    }\n  }\n\n  clearAllCaches(): void {\n    this.caches.forEach((cache, name) => {\n      cache.clear()\n      logger.debug(`キャッシュクリア: ${name}`)\n    })\n    logger.debug('全キャッシュクリア完了')\n  }\n\n  getCacheStats(): Record<string, number> {\n    const stats: Record<string, number> = {}\n    this.caches.forEach((cache, name) => {\n      stats[name] = cache.size\n    })\n    return stats\n  }\n}\n\n// グローバルキャッシュマネージャー\nexport const globalCacheManager = new CacheManager()\n\n// パフォーマンス監視\nexport function measurePerformance<T>(\n  operation: () => T,\n  operationName: string\n): T {\n  const startTime = performance.now()\n  const result = operation()\n  const endTime = performance.now()\n  const duration = endTime - startTime\n\n  if (duration > 100) {\n    logger.warn(`⚠️ 重い処理を検出: ${operationName} (${duration.toFixed(2)}ms)`)\n  } else {\n    logger.debug(`⚡ パフォーマンス: ${operationName} (${duration.toFixed(2)}ms)`)\n  }\n\n  return result\n}\n\n// メモリ使用量監視\nexport function logMemoryUsage(context: string): void {\n  if (typeof performance !== 'undefined' && (performance as any).memory) {\n    const memory = (performance as any).memory\n    logger.debug(`💾 メモリ使用量 [${context}]:`, {\n      used: `${(memory.usedJSHeapSize / 1048576).toFixed(2)}MB`,\n      total: `${(memory.totalJSHeapSize / 1048576).toFixed(2)}MB`,\n      limit: `${(memory.jsHeapSizeLimit / 1048576).toFixed(2)}MB`\n    })\n  }\n}\n","/**\n * エディターイベントバス\n * グローバル関数を安全なイベントベースシステムで置き換える\n */\n\nimport { logger } from './logger'\n\nexport interface EditorEventData {\n  // 配列アイテム追加イベント\n  addArrayItem: {\n    componentId: string\n    arrayKey: string\n  }\n  // z-for配列アイテム追加\n  addZForArrayItem: {\n    componentId: string\n    arrayName: string\n    insertIndex: number\n  }\n  // z-for配列アイテム削除\n  removeZForArrayItem: {\n    componentId: string\n    arrayName: string\n    index: number\n  }\n  // z-for配列アイテム並び替え\n  reorderZForArrayItem: {\n    componentId: string\n    arrayName: string\n    fromIndex: number\n    toIndex: number\n  }\n  // z-for配列アイテム編集\n  editZForArrayItem: {\n    componentId: string\n    arrayName: string\n    index: number\n  }\n  // ネストパーツ削除イベント\n  deleteNestedPart: {\n    pathString: string\n  }\n  // ネストエディター開く\n  openNestedEditor: {\n    pathString: string\n  }\n  // ネストパーツセレクター開く\n  openNestedPartSelector: {\n    pathString: string\n    position: number\n  }\n  // リッチテキスト編集開始\n  startRichTextEdit: {\n    componentId: string\n    paramName: string\n    currentValue: string\n  }\n  // 画像選択\n  selectImage: {\n    componentId: string\n    paramName: string\n  }\n  // 画像アップロード\n  uploadImage: {\n    file: File\n    category: 'common' | 'individual'\n    componentId?: string\n  }\n  // エディター閉鎖（クリーンアップ用）\n  editorClosed: {\n    componentId?: string\n    componentIndex?: number | string | null\n  }\n}\n\ntype EventCallback<T = any> = (data: T) => void | Promise<void>\n\nexport class EditorEventBus {\n  private events: Map<string, Set<EventCallback>> = new Map()\n  private isEnabled = true\n\n  /**\n   * イベントリスナーを登録\n   */\n  on<K extends keyof EditorEventData>(\n    event: K,\n    callback: EventCallback<EditorEventData[K]>\n  ): () => void {\n    if (!this.events.has(event)) {\n      this.events.set(event, new Set())\n    }\n\n    const listeners = this.events.get(event)!\n    listeners.add(callback as EventCallback)\n\n\n    // アンサブスクライブ関数を返す\n    return () => {\n      listeners.delete(callback as EventCallback)\n    }\n  }\n\n  /**\n   * イベントを発火\n   */\n  emit<K extends keyof EditorEventData>(event: K, data: EditorEventData[K]): void {\n    if (!this.isEnabled) {\n      logger.warn(`EventBus: 無効化されているため ${event} イベントを無視`)\n      return\n    }\n\n    const listeners = this.events.get(event)\n    if (!listeners || listeners.size === 0) {\n      logger.warn(`EventBus: ${event} イベントのリスナーが見つかりません`)\n      return\n    }\n\n\n    // 全リスナーを並行実行\n    const promises: Promise<void>[] = []\n\n    listeners.forEach(callback => {\n      try {\n        const result = callback(data)\n        if (result instanceof Promise) {\n          promises.push(result)\n        }\n      } catch (error) {\n        logger.error(`EventBus: ${event} イベントリスナーでエラー`, error)\n      }\n    })\n\n    // Promise結果を待機（エラーログは個別に処理）\n    if (promises.length > 0) {\n      Promise.allSettled(promises).then(results => {\n        results.forEach((result, index) => {\n          if (result.status === 'rejected') {\n            logger.error(`EventBus: ${event} 非同期リスナー[${index}]でエラー`, result.reason)\n          }\n        })\n      })\n    }\n  }\n\n  /**\n   * 特定イベントの全リスナーを削除\n   */\n  off(event: keyof EditorEventData): void {\n    this.events.delete(event)\n  }\n\n  /**\n   * 全イベントリスナーをクリア\n   */\n  clear(): void {\n    this.events.clear()\n  }\n\n  /**\n   * イベントバスを無効化（テスト時など）\n   */\n  disable(): void {\n    this.isEnabled = false\n  }\n\n  /**\n   * イベントバスを有効化\n   */\n  enable(): void {\n    this.isEnabled = true\n  }\n\n  /**\n   * 登録されているイベント数を取得（デバッグ用）\n   */\n  getListenerCount(event?: keyof EditorEventData): number {\n    if (event) {\n      return this.events.get(event)?.size || 0\n    }\n\n    let total = 0\n    this.events.forEach(listeners => {\n      total += listeners.size\n    })\n    return total\n  }\n}\n\n// シングルトンインスタンス\nexport const editorEventBus = new EditorEventBus()\n\n// 型エクスポート用（インスタンス型として定義）\nexport type EditorEventBusType = EditorEventBus\n\n/**\n * HTMLテンプレートから呼び出されるグローバル関数群\n * EventBusのラッパーとして機能\n */\nexport const globalUIFunctions = {\n  /**\n   * 配列アイテム追加\n   */\n  addArrayItem: (componentId: string, arrayKey: string) => {\n    editorEventBus.emit('addArrayItem', { componentId, arrayKey })\n  },\n\n  /**\n   * z-for配列アイテム追加\n   */\n  addZForArrayItem: (componentId: string, arrayName: string, insertIndex: number) => {\n    editorEventBus.emit('addZForArrayItem', { componentId, arrayName, insertIndex })\n  },\n\n  /**\n   * z-for配列アイテム削除\n   */\n  removeZForArrayItem: (componentId: string, arrayName: string, index: number) => {\n    editorEventBus.emit('removeZForArrayItem', { componentId, arrayName, index })\n  },\n\n  /**\n   * z-for配列アイテム並び替え\n   */\n  reorderZForArrayItem: (\n    componentId: string,\n    arrayName: string,\n    fromIndex: number,\n    toIndex: number\n  ) => {\n    editorEventBus.emit('reorderZForArrayItem', { componentId, arrayName, fromIndex, toIndex })\n  },\n\n  /**\n   * z-for配列アイテム編集\n   */\n  editZForArrayItem: (componentId: string, arrayName: string, index: number) => {\n    editorEventBus.emit('editZForArrayItem', { componentId, arrayName, index })\n  },\n\n  /**\n   * ネストパーツ削除\n   */\n  deleteNestedPart: (pathString: string) => {\n    editorEventBus.emit('deleteNestedPart', { pathString })\n  },\n\n  /**\n   * ネストエディター開く\n   */\n  openNestedEditor: (pathString: string) => {\n    editorEventBus.emit('openNestedEditor', { pathString })\n  },\n\n  /**\n   * ネストパーツセレクター開く\n   */\n  openNestedPartSelector: (pathString: string, position: number) => {\n    editorEventBus.emit('openNestedPartSelector', { pathString, position })\n  },\n\n  /**\n   * リッチテキスト編集開始\n   */\n  startRichTextEdit: (componentId: string, paramName: string, currentValue: string) => {\n    return editorEventBus.emit('startRichTextEdit', { componentId, paramName, currentValue })\n  },\n\n  /**\n   * 画像選択\n   */\n  selectImage: (componentId: string, paramName: string) => {\n    editorEventBus.emit('selectImage', { componentId, paramName })\n  },\n\n  /**\n   * 画像アップロード\n   */\n  uploadImage: (file: File, category: 'common' | 'individual', componentId?: string) => {\n    editorEventBus.emit('uploadImage', { file, category, componentId })\n  },\n}\n\nexport default editorEventBus\n","import { computed } from 'vue'\nimport { useEditorCore } from './core/useEditorCore'\nimport { useEditorUtils } from './core/useEditorUtils'\nimport { useTemplateProcessor } from './useTemplateProcessor'\nimport { useSimpleEditor } from './useSimpleEditor'\nimport { memoizedComponentOperations, measurePerformance, debounce } from './utils/performanceOptimizations'\nimport { useComponentUtils } from './useComponentUtils'\nimport { EditorEventBus, globalUIFunctions } from '@shared/utils/eventBus'\nimport { logger } from '@shared/utils/logger'\nimport type { Component, PartSection, ImageData } from '@types'\n\n// 【新規】動的な新規アイテム名生成ヘルパー関数（ハードコード除去）\nfunction generateNewItemName(originalValue: string, fieldName: string, itemIndex: number): string {\n  // 1. 既存のパターン解析\n  const isDebugItem = originalValue.includes('[DEBUG]')\n  const hasNumber = /\\d+/.test(originalValue)\n  const baseValue = originalValue.replace(/\\[DEBUG\\]|\\d+/g, '').trim()\n  \n  // 2. 画像URL・パス系フィールドの特別処理\n  if (fieldName.toLowerCase().includes('url') || \n      fieldName.toLowerCase().includes('image') || \n      fieldName.toLowerCase().includes('icon') ||\n      originalValue.startsWith('/') || \n      originalValue.includes('.jpg') || \n      originalValue.includes('.png') || \n      originalValue.includes('.gif') || \n      originalValue.includes('.svg')) {\n    // 画像パスの場合は元の値を保持（適切なデフォルト画像を提供）\n    return originalValue\n  }\n  \n  // 3. フィールド名別の適切な名前生成\n  let newName: string\n  \n  if (fieldName === 'name' && originalValue.includes('ネスト')) {\n    newName = `新しいネスト項目${itemIndex}`\n  } else if (fieldName === 'title' && originalValue.includes('アイテム')) {\n    newName = `新しいアイテム${itemIndex}`\n  } else if (hasNumber) {\n    // 既存値に番号がある場合は次の番号を割り当て\n    newName = `${baseValue}${itemIndex}`\n  } else {\n    // 一般的なケース\n    newName = originalValue.startsWith('新しい') ? \n      `${originalValue}${itemIndex}` : \n      `新しい${fieldName}${itemIndex}`\n  }\n  \n  // 4. デバッグモードの場合は [DEBUG] を追加\n  if (isDebugItem) {\n    newName += ' [DEBUG]'\n  }\n  \n  return newName\n}\n\n// ネストz-for専用のテンプレート抽出ヘルパー関数\nfunction extractNestedZForTemplate(template: string, arrayName: string): string | null {\n  console.log('🔍 [DEBUG] extractNestedZForTemplate開始:', { arrayName, templateLength: template.length })\n  \n  try {\n    // arrayNameに対応するz-for要素を探す\n    const zForPattern = new RegExp(`<[^>]*z-for=\"${arrayName}\"[^>]*>`, 'g')\n    const match = template.match(zForPattern)\n    \n    if (!match || match.length === 0) {\n      console.log('🔍 [DEBUG] z-for要素が見つかりません:', arrayName)\n      return null\n    }\n\n    // 最初に見つかったz-for要素の開始位置を取得\n    const startTag = match[0]\n    const startIndex = template.indexOf(startTag)\n    \n    if (startIndex === -1) {\n      console.log('🔍 [DEBUG] 開始タグの位置特定に失敗')\n      return null\n    }\n\n    // 開始タグの後から対応する終了タグを探す\n    const tagName = startTag.match(/<(\\w+)/)?.[1]\n    if (!tagName) {\n      console.log('🔍 [DEBUG] タグ名の抽出に失敗')\n      return null\n    }\n\n    // 開始タグの終了位置\n    const startTagEnd = startIndex + startTag.length\n    \n    // 対応する終了タグを探す（ネスト考慮）\n    let depth = 1\n    let currentPos = startTagEnd\n    const openPattern = new RegExp(`<${tagName}\\\\b[^>]*>`, 'g')\n    const closePattern = new RegExp(`</${tagName}>`, 'g')\n    \n    while (depth > 0 && currentPos < template.length) {\n      openPattern.lastIndex = currentPos\n      closePattern.lastIndex = currentPos\n      \n      const nextOpen = openPattern.exec(template)\n      const nextClose = closePattern.exec(template)\n      \n      if (!nextClose) {\n        console.log('🔍 [DEBUG] 終了タグが見つかりません')\n        return null\n      }\n      \n      if (nextOpen && nextOpen.index < nextClose.index) {\n        depth++\n        currentPos = nextOpen.index + nextOpen[0].length\n      } else {\n        depth--\n        currentPos = nextClose.index + nextClose[0].length\n        \n        if (depth === 0) {\n          // 内部コンテンツを抽出\n          const innerContent = template.slice(startTagEnd, nextClose.index)\n          console.log('🔍 [DEBUG] ネストテンプレート抽出成功:', {\n            arrayName,\n            innerContentLength: innerContent.length,\n            innerContentPreview: innerContent.slice(0, 100) + (innerContent.length > 100 ? '...' : '')\n          })\n          return innerContent.trim()\n        }\n      }\n    }\n    \n    console.log('🔍 [DEBUG] ネスト解析中にエラー: depth=' + depth)\n    return null\n    \n  } catch (error) {\n    console.error('🔍 [DEBUG] extractNestedZForTemplate処理エラー:', error)\n    return null\n  }\n}\n\n// Props型定義\ninterface Props {\n  parts?: PartSection[]\n  commonParts?: PartSection[]\n  individualParts?: PartSection[]\n  page?: Component[]\n  commonImages?: ImageData[]\n  individualImages?: ImageData[]\n}\n\n// Emits型定義\ninterface Emits {\n  (e: 'update:parts', parts: PartSection[]): void\n  (e: 'update:commonParts', parts: PartSection[]): void\n  (e: 'update:individualParts', parts: PartSection[]): void\n  (e: 'update:page', page: Component[]): void\n  (e: 'update:commonImages', images: ImageData[]): void\n  (e: 'update:individualImages', images: ImageData[]): void\n}\n\nexport function useZeroCode(props: Props, emit: Emits) {\n  console.log('🔥 [useZeroCode] 初期化開始')\n  \n  // インスタンス固有のイベントバス作成\n  const editorEventBus = new EditorEventBus()\n  \n  // 中核状態管理\n  const core = useEditorCore(props, editorEventBus)\n\n  // ユーティリティ\n  const utils = useEditorUtils()\n\n  // テンプレート処理\n  const templateProcessor = useTemplateProcessor()\n\n  // シンプルエディター\n  const simpleEditor = useSimpleEditor()\n  \n  // 【最優先】z-forイベントリスナー登録を最初に実行\n  console.log('🔥 [useZeroCode] z-forイベントリスナー登録開始')\n  \n  // z-for配列アイテム追加のイベントリスナーを即座に登録\n  editorEventBus.on('addZForArrayItem', ({ componentId, arrayName, insertIndex }) => {\n    console.log('🔥 [EventBus受信] addZForArrayItem受信 (早期登録版):', { componentId, arrayName, insertIndex })\n    \n    try {\n      // 実際の処理ロジック（完全版）\n      console.log('🔥 [処理実行] 配列アイテム追加処理開始')\n      \n      // ネストz-for構造のcomponentIdをパース\n      const parts = componentId.split('_')\n      console.log('🔥 [DEBUG] componentId parts:', parts)\n\n      let targetArray: any[] | undefined\n      let targetComponent: Component | null = null\n\n      // ネスト形式の判定を改善\n      const component = findComponent(core.editablePageData.value, componentId)\n      const isNormalComponent = component && component.id === componentId\n\n      // ネスト形式の条件: 通常のcomponentとして見つからない場合\n      if (parts.length >= 3 &&\n          /^\\d+$/.test(parts[parts.length - 1]) &&\n          !isNormalComponent) {\n        \n        // 【修正】アンダースコアを含む配列名を正しく処理\n        // \"div_nested_zfor_001_outer_items_0\" の場合:\n        // - 最後が数字インデックス: \"0\"  \n        // - その前の \"outer_items\" が配列名\n        // - さらにその前の \"div_nested_zfor_001\" がコンポーネントID\n        \n        const parentIndex = parseInt(parts[parts.length - 1])\n        \n        // 動的に配列名を抽出（ハードコーディングを除去）\n        let parentArrayName = ''\n        let baseParentId = ''\n        \n        // z-forネストのID形式: parent_id + \"_\" + array_name + \"_\" + index\n        // 例: \"div_nested_zfor_001_outer_items_0\" → parent: \"div_nested_zfor_001\", array: \"outer_items\", index: 0\n        \n        // IDの最後からインデックスを除去\n        const indexSuffix = `_${parentIndex}`\n        const withoutIndex = componentId.slice(0, -indexSuffix.length)\n        \n        // withoutIndexから配列名部分を特定\n        // 最初の4つのパーツ（例: \"div_nested_zfor_001\"）を親IDとし、残りを配列名とする\n        const baseComponents = parts.slice(0, 4).join('_') // \"div_nested_zfor_001\"\n        if (withoutIndex.startsWith(baseComponents + '_')) {\n          baseParentId = baseComponents\n          parentArrayName = withoutIndex.slice(baseComponents.length + 1) // \"outer_items\"\n        } else {\n          // フォールバック: 最後のアンダースコア位置で分割\n          const lastUnderscorePos = withoutIndex.lastIndexOf('_')\n          if (lastUnderscorePos !== -1) {\n            parentArrayName = withoutIndex.slice(lastUnderscorePos + 1)\n            baseParentId = withoutIndex.slice(0, lastUnderscorePos)\n          }\n        }\n        \n        // フォールバック: 一般的なパターンで解析\n        if (!parentArrayName) {\n          // \"_アイテム名_数字\" の形式を想定\n          const match = componentId.match(/^(.+)_([^_]+_[^_]+)_(\\d+)$/)\n          if (match) {\n            baseParentId = match[1]\n            parentArrayName = match[2]\n          } else {\n            // 従来の方式（アンダースコア含まない配列名）\n            baseParentId = parts.slice(0, -2).join('_')\n            parentArrayName = parts[parts.length - 2]\n          }\n        }\n\n        console.log('🔥 [DEBUG] 修正版ネスト形式検出:', { \n          componentId,\n          parts,\n          baseParentId, \n          parentArrayName, \n          parentIndex,\n          arrayName \n        })\n\n        // ネストz-forの正しい解析\n        const realComponentId = baseParentId\n        \n        console.log('🔥 [DEBUG] baseParentIdでコンポーネント検索:', baseParentId)\n        const realComponent = findComponent(core.editablePageData.value, baseParentId)\n        console.log('🔥 [DEBUG] 検索結果:', realComponent ? realComponent.id : 'null')\n        \n        if (realComponent) {\n          console.log('🔥 [DEBUG] 親コンポーネントの配列確認:', parentArrayName, (realComponent as any)[parentArrayName])\n          if ((realComponent as any)[parentArrayName] && (realComponent as any)[parentArrayName][parentIndex]) {\n            targetComponent = (realComponent as any)[parentArrayName][parentIndex]\n            console.log('🔥 [DEBUG] ネスト対象コンポーネント:', targetComponent)\n            \n            if (targetComponent && !Array.isArray((targetComponent as any)[arrayName])) {\n              (targetComponent as any)[arrayName] = []\n              console.log('🔥 [DEBUG] 配列フィールド初期化:', arrayName)\n            }\n            targetArray = targetComponent ? (targetComponent as any)[arrayName] : undefined\n            \n            console.log('🔥 [DEBUG] ネスト対象特定完了:', { \n              targetComponentId: targetComponent ? (targetComponent as any).id : 'null',\n              arrayName,\n              currentArrayLength: targetArray ? targetArray.length : 0\n            })\n          } else {\n            console.error('🔥 [DEBUG] 親配列または指定インデックスが見つかりません:', {\n              parentArrayName,\n              parentIndex,\n              parentArray: (realComponent as any)[parentArrayName],\n              parentArrayLength: (realComponent as any)[parentArrayName]?.length\n            })\n            throw new Error(`Parent array or index not found: ${parentArrayName}[${parentIndex}]`)\n          }\n        } else {\n          console.error('🔥 [DEBUG] baseParentIdでコンポーネントが見つかりません:', baseParentId)\n          console.error('🔥 [DEBUG] 現在のページデータ:', core.editablePageData.value.map(c => c.id))\n          throw new Error(`Parent component not found: ${baseParentId}`)\n        }\n      } else {\n        // 通常形式\n        console.log('🔥 [DEBUG] 通常形式検出:', componentId)\n        targetComponent = component || findComponent(core.editablePageData.value, componentId)\n        if (targetComponent) {\n          if (!Array.isArray((targetComponent as any)[arrayName])) {\n            (targetComponent as any)[arrayName] = []\n          }\n          targetArray = (targetComponent as any)[arrayName] as any[]\n        }\n      }\n\n      if (!targetComponent || !targetArray) {\n        throw new Error(`Target component or array not found: ${componentId}`)\n      }\n\n      // 新しいアイテムを作成\n      const partsData = core.localParts.value && core.localParts.value.length > 0 ? core.localParts.value : []\n      const componentUtils = useComponentUtils(partsData)\n\n      const newItem: Record<string, any> = {\n        id: componentUtils.generateUniqueId(),\n      }\n\n      // 【修正済み】既存アイテムから構造推測（最優先）\n      if (targetArray && targetArray.length > 0) {\n        console.log('🔥 [DEBUG] 既存アイテムベース生成開始')\n        const sampleItem = targetArray[0]\n        console.log('🔥 [DEBUG] サンプルアイテム:', sampleItem)\n        \n        Object.keys(sampleItem).forEach(key => {\n          if (key !== 'id' && !newItem[key]) {\n            const value = sampleItem[key]\n            if (typeof value === 'string') {\n              newItem[key] = generateNewItemName(value, key, targetArray.length + 1)\n              console.log(`🔥 [DEBUG] 文字列フィールドコピー: ${key} = \"${newItem[key]}\"`)\n            } else if (Array.isArray(value)) {\n              newItem[key] = []\n            } else if (typeof value === 'number') {\n              newItem[key] = value === 0 ? 0 : Math.floor(Math.random() * 100) + 1\n            } else if (typeof value === 'boolean') {\n              newItem[key] = false\n            } else {\n              newItem[key] = value\n            }\n          }\n        })\n        console.log('🔥 [DEBUG] 既存アイテムベース生成完了:', newItem)\n      } else {\n        // フォールバック: 基本値\n        console.log('🔥 [DEBUG] 空配列 - デフォルト値設定')\n        const itemName = arrayName.replace(/_/g, '')\n        newItem.name = `新しい${itemName}${(targetArray?.length || 0) + 1}`\n      }\n\n      // 指定位置に挿入\n      targetArray.splice(insertIndex, 0, newItem)\n      console.log('🔥 [DEBUG] z-for配列アイテム追加完了:', {\n        arrayName,\n        insertIndex: insertIndex, \n        newItem,\n        finalArrayLength: targetArray.length\n      })\n\n      // 画面更新\n      emit('update:page', core.editablePageData.value)\n      \n      console.log('🔥 [処理完了] アイテム追加成功！')\n      \n    } catch (error) {\n      console.error('🔥 [処理エラー] z-forアイテム追加エラー:', error)\n      alert(`エラーが発生しました: ${error instanceof Error ? error.message : String(error)}`)\n    }\n  })\n\n  // z-for配列アイテム並べ替えのイベントリスナーも早期登録\n  editorEventBus.on('reorderZForArrayItem', ({ componentId, arrayName, fromIndex, toIndex }) => {\n    console.log('🔥 [EventBus受信] reorderZForArrayItem受信 (早期登録版):', { componentId, arrayName, fromIndex, toIndex })\n    \n    try {\n      console.log('🔥 [処理実行] 配列アイテム並べ替え処理開始')\n      \n      // ネストz-for構造のcomponentIdをパース（addと同様のロジック）\n      const parts = componentId.split('_')\n      console.log('🔥 [DEBUG] 並べ替えcomponentId parts:', parts)\n\n      let targetArray: any[] | undefined\n      let targetComponent: Component | null = null\n\n      // ネスト形式の判定を改善\n      const component = findComponent(core.editablePageData.value, componentId)\n      const isNormalComponent = component && component.id === componentId\n\n      // ネスト形式の条件: 通常のcomponentとして見つからない場合\n      if (parts.length >= 3 &&\n          /^\\d+$/.test(parts[parts.length - 1]) &&\n          !isNormalComponent) {\n        \n        // 【修正】アンダースコアを含む配列名を正しく処理（addと同様）\n        const parentIndex = parseInt(parts[parts.length - 1])\n        \n        // 動的に配列名を抽出（ハードコーディングを除去）\n        let parentArrayName = ''\n        let baseParentId = ''\n        \n        // z-forネストのID形式: parent_id + \"_\" + array_name + \"_\" + index\n        // 例: \"div_nested_zfor_001_outer_items_0\" → parent: \"div_nested_zfor_001\", array: \"outer_items\", index: 0\n        \n        // IDの最後からインデックスを除去\n        const indexSuffix = `_${parentIndex}`\n        const withoutIndex = componentId.slice(0, -indexSuffix.length)\n        \n        // withoutIndexから配列名部分を特定\n        // 最初の3つのパーツ（例: \"div_nested_zfor_001\"）を親IDとし、残りを配列名とする\n        const baseComponents = parts.slice(0, 4).join('_') // \"div_nested_zfor_001\"\n        if (withoutIndex.startsWith(baseComponents + '_')) {\n          baseParentId = baseComponents\n          parentArrayName = withoutIndex.slice(baseComponents.length + 1) // \"outer_items\"\n        } else {\n          // フォールバック: 最後のアンダースコア位置で分割\n          const lastUnderscorePos = withoutIndex.lastIndexOf('_')\n          if (lastUnderscorePos !== -1) {\n            parentArrayName = withoutIndex.slice(lastUnderscorePos + 1)\n            baseParentId = withoutIndex.slice(0, lastUnderscorePos)\n          }\n        }\n        \n        // フォールバック: 一般的なパターンで解析\n        if (!parentArrayName) {\n          const match = componentId.match(/^(.+)_([^_]+_[^_]+)_(\\d+)$/)\n          if (match) {\n            baseParentId = match[1]\n            parentArrayName = match[2]\n          } else {\n            baseParentId = parts.slice(0, -2).join('_')\n            parentArrayName = parts[parts.length - 2]\n          }\n        }\n\n        console.log('🔥 [DEBUG] 並べ替えネスト形式検出:', { \n          componentId,\n          parts,\n          baseParentId, \n          parentArrayName, \n          parentIndex,\n          arrayName \n        })\n\n        const realComponent = findComponent(core.editablePageData.value, baseParentId)\n        \n        console.log('🔥 [DEBUG] 並べ替え親要素検索結果:', {\n          baseParentId,\n          parentArrayName,\n          parentIndex,\n          realComponentFound: !!realComponent,\n          realComponentId: realComponent?.id,\n          realComponentKeys: realComponent ? Object.keys(realComponent) : null,\n          hasParentArray: realComponent ? !!realComponent[parentArrayName] : false,\n          parentArrayLength: realComponent && (realComponent as any)[parentArrayName] ? (realComponent as any)[parentArrayName].length : 0,\n          hasTargetIndex: realComponent && (realComponent as any)[parentArrayName] ? !!(realComponent as any)[parentArrayName][parentIndex] : false,\n          // 実際のプロパティ名を確認\n          availableArrays: realComponent ? Object.keys(realComponent).filter(key => Array.isArray(realComponent[key])) : null\n        })\n        \n        if (realComponent && (realComponent as any)[parentArrayName] && (realComponent as any)[parentArrayName][parentIndex]) {\n          targetComponent = (realComponent as any)[parentArrayName][parentIndex]\n          if (targetComponent && !Array.isArray((targetComponent as any)[arrayName])) {\n            (targetComponent as any)[arrayName] = []\n          }\n          targetArray = targetComponent ? (targetComponent as any)[arrayName] as any[] : undefined\n          \n          console.log('🔥 [DEBUG] 並べ替えネスト対象特定完了:', { \n            targetComponentId: targetComponent ? (targetComponent as any).id : null,\n            arrayName,\n            currentArrayLength: targetArray ? targetArray.length : 0\n          })\n        } else {\n          console.error('🔥 [ERROR] 並べ替え失敗詳細:', {\n            baseParentId,\n            parentArrayName,\n            parentIndex,\n            realComponent: realComponent ? { id: (realComponent as any).id, keys: Object.keys(realComponent) } : null,\n            parentArray: realComponent && (realComponent as any)[parentArrayName] ? (realComponent as any)[parentArrayName] : null\n          })\n          throw new Error(`Parent array or index not found for reorder: ${parentArrayName}[${parentIndex}]`)\n        }\n      } else {\n        // 通常形式\n        console.log('🔥 [DEBUG] 並べ替え通常形式検出:', componentId)\n        targetComponent = component || findComponent(core.editablePageData.value, componentId)\n        if (targetComponent) {\n          if (!Array.isArray((targetComponent as any)[arrayName])) {\n            (targetComponent as any)[arrayName] = []\n          }\n          targetArray = (targetComponent as any)[arrayName] as any[]\n        }\n      }\n\n      if (!targetComponent || !targetArray) {\n        throw new Error(`Target component or array not found for reorder: ${componentId}`)\n      }\n\n      // 並べ替え実行\n      const [movedItem] = targetArray.splice(fromIndex, 1)\n      targetArray.splice(toIndex, 0, movedItem)\n      \n      console.log('🔥 [DEBUG] z-for配列アイテム並べ替え完了:', {\n        arrayName,\n        fromIndex,\n        toIndex,\n        movedItem: movedItem.id || movedItem,\n        finalArrayLength: targetArray.length\n      })\n\n      // 画面更新\n      emit('update:page', core.editablePageData.value)\n      \n      console.log('🔥 [処理完了] アイテム並べ替え成功！')\n      \n    } catch (error) {\n      console.error('🔥 [処理エラー] z-forアイテム並べ替えエラー:', error)\n      alert(`並べ替えでエラーが発生しました: ${error instanceof Error ? error.message : String(error)}`)\n    }\n  })\n  \n  console.log('🔥 [useZeroCode] 早期z-forリスナー登録完了（追加・並べ替え）')\n\n  // 共通の検索ユーティリティ関数（パフォーマンス最適化版）\n  const findComponent = (components: Component[], targetId: string): Component | null => {\n    return measurePerformance(\n      () => memoizedComponentOperations.findComponent(components, targetId),\n      `findComponent(${targetId})`\n    )\n  }\n\n  // パフォーマンス重視のデバウンス処理\n  const debouncedEmitUpdate = debounce((data: Component[]) => {\n    emit('update:page', data)\n    logger.debug('💾 ページデータ更新をemit')\n  }, 100)\n\n  // z-for配列アイテム編集のクリーンアップ処理\n  const setupZForEditCleanup = (childItem: any, editorId: string) => {\n    // editorが閉じられた時のクリーンアップ処理を設定\n    const cleanup = () => {\n      // 一時的なメタデータをクリーンアップ\n      if (childItem._isZForItem) {\n        delete childItem._isZForItem\n      }\n      if (childItem._parentComponentId) {\n        delete childItem._parentComponentId\n      }\n      if (childItem._arrayName) {\n        delete childItem._arrayName\n      }\n      if (childItem._arrayIndex) {\n        delete childItem._arrayIndex\n      }\n      if (childItem.module_name) {\n        // 一時的に設定された親のmodule_nameもクリーンアップ\n        // （z-for配列アイテムの元々のmodule_nameを復元）\n        delete childItem.module_name\n      }\n\n      logger.debug('🧹 z-for配列アイテムのメタデータクリーンアップ完了:', {\n        editorId,\n        cleanedProperties: ['_isZForItem', '_parentComponentId', '_arrayName', '_arrayIndex', 'module_name']\n      })\n    }\n\n    // エディタークローズイベントを監視\n    const handleEditorClose = () => {\n      cleanup()\n      // イベントリスナーを削除\n      editorEventBus.off('editorClosed')\n    }\n\n    // エディターが閉じられた時のイベントリスナーを設定\n    editorEventBus.on('editorClosed', handleEditorClose)\n\n    logger.debug('🔧 z-for配列アイテム編集クリーンアップ処理を設定:', {\n      editorId,\n      hasMetadata: {\n        _isZForItem: !!childItem._isZForItem,\n        _parentComponentId: !!childItem._parentComponentId,\n        _arrayName: !!childItem._arrayName,\n        _arrayIndex: !!childItem._arrayIndex\n      }\n    })\n  }\n\n  // ネストコンポーネント更新ユーティリティ関数\n  const updateNestedComponent = (\n    components: Component[],\n    targetId: string,\n    updatedComponent: Component\n  ): boolean => {\n    logger.debug(\n      `🔍 updateNestedComponent: 検索開始 - targetId: ${targetId}, components数: ${components.length}`\n    )\n\n    for (let i = 0; i < components.length; i++) {\n      const component = components[i]\n      logger.debug(`🔍 チェック中: ${component.id} === ${targetId} ?`)\n\n      if (component.id === targetId) {\n        // 見つかったコンポーネントを更新\n        logger.debug(`✅ コンポーネント発見 - 更新実行: ${targetId}`)\n        logger.debug(`🔍 更新前:`, component)\n        logger.debug(`🔍 更新後:`, updatedComponent)\n        components[i] = updatedComponent\n        return true\n      }\n\n      // nested_parts内を検索\n      if (component.nested_parts && Array.isArray(component.nested_parts)) {\n        logger.debug(`🔍 nested_parts内を検索: ${component.id}`)\n        const updated = updateNestedComponent(component.nested_parts, targetId, updatedComponent)\n        if (updated) return true\n      }\n\n      // 全てのプロパティから配列を検索（z-for配列内も含む）\n      for (const [key, value] of Object.entries(component)) {\n        if (Array.isArray(value) && key !== 'nested_parts') {\n          logger.debug(`🔍 配列プロパティ検索: ${component.id}.${key}`)\n          // 配列アイテム内のnested_parts/nested_slots内を検索\n          for (const arrayItem of value) {\n            if (arrayItem && typeof arrayItem === 'object') {\n              // 配列アイテム内の全スロットを検索\n              for (const [slotKey, slotValue] of Object.entries(arrayItem)) {\n                if (Array.isArray(slotValue)) {\n                  logger.debug(`🔍 スロット検索: ${component.id}.${key}[].${slotKey}`)\n                  const updated = updateNestedComponent(slotValue, targetId, updatedComponent)\n                  if (updated) return true\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    logger.debug(`❌ コンポーネントが見つかりませんでした: ${targetId}`)\n    return false\n  }\n\n  const findAndDeleteComponent = (components: Component[], targetId: string): boolean => {\n    for (let i = 0; i < components.length; i++) {\n      if (components[i].id === targetId) {\n        components.splice(i, 1)\n        return true\n      }\n      // nested_parts内を検索\n      if (components[i].nested_parts && Array.isArray(components[i].nested_parts)) {\n        if (findAndDeleteComponent(components[i].nested_parts!, targetId)) {\n          return true\n        }\n      }\n      // 全てのプロパティから配列を検索（z-for配列内も含む）\n      for (const [key, value] of Object.entries(components[i])) {\n        if (Array.isArray(value) && key !== 'nested_parts') {\n          // 配列アイテム内のnested_parts/nested_slots内を検索\n          for (const arrayItem of value) {\n            if (arrayItem && typeof arrayItem === 'object') {\n              // 配列アイテム内の全スロットを検索\n              for (const [slotKey, slotValue] of Object.entries(arrayItem)) {\n                if (Array.isArray(slotValue)) {\n                  if (findAndDeleteComponent(slotValue, targetId)) {\n                    return true\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    return false\n  }\n\n  // 統合されたアクション\n  const actions = {\n    // パーツ操作\n    addPart: (part: Component, position: number) => {\n      logger.debug('🔧 addPart呼び出し:', { part, position, currentPageData: core.editablePageData.value })\n      const newPageData = [...core.editablePageData.value]\n      newPageData.splice(position, 0, part)\n      core.editablePageData.value = newPageData\n      logger.debug('🔧 新しいページデータ:', newPageData)\n      emit('update:page', newPageData)\n    },\n\n    deletePart: (index: number) => {\n      if (window.confirm('このパーツを削除しますか？')) {\n        const newPageData = utils.component.deleteComponent(core.editablePageData.value, index)\n        core.editablePageData.value = newPageData\n        emit('update:page', newPageData)\n      }\n    },\n\n    duplicatePart: (index: number) => {\n      const originalComponent = core.editablePageData.value[index]\n      if (originalComponent) {\n        const duplicatedComponent = utils.component.duplicateComponent(originalComponent)\n        const newPageData = [...core.editablePageData.value]\n        newPageData.splice(index + 1, 0, duplicatedComponent)\n        core.editablePageData.value = newPageData\n        emit('update:page', newPageData)\n      }\n    },\n\n    // 並べ替え操作\n    reorderParts: (newOrder: Component[]) => {\n      core.editablePageData.value = newOrder\n      emit('update:page', newOrder)\n    },\n\n    movePart: (fromIndex: number, toIndex: number) => {\n      const newPageData = [...core.editablePageData.value]\n      const [movedItem] = newPageData.splice(fromIndex, 1)\n      newPageData.splice(toIndex, 0, movedItem)\n      core.editablePageData.value = newPageData\n      emit('update:page', newPageData)\n    },\n\n    // ネストパーツの並べ替え操作（リアクティブ対応）\n    reorderNestedParts: (pathString: string, newOrder: Component[]) => {\n      const path = utils.string.parseHierarchyPath(pathString)\n\n      // 完全な新しい参照でデータをコピー\n      const newPageData = JSON.parse(JSON.stringify(core.editablePageData.value))\n\n      const parentComponent = utils.component.findComponentByPath(newPageData, path)\n      if (parentComponent) {\n        // 新しい配列参照で設定\n        parentComponent.nested_parts = [...newOrder]\n        core.editablePageData.value = newPageData\n        emit('update:page', newPageData)\n      } else {\n        logger.error('❌ 親コンポーネントが見つかりません:', { pathString, path })\n      }\n    },\n\n    moveNestedPart: (pathString: string, fromIndex: number, toIndex: number) => {\n      const path = utils.string.parseHierarchyPath(pathString)\n\n      // 完全な新しい参照でデータをコピー\n      const newPageData = JSON.parse(JSON.stringify(core.editablePageData.value))\n\n      const parentComponent = utils.component.findComponentByPath(newPageData, path)\n      if (\n        parentComponent?.nested_parts &&\n        parentComponent.nested_parts.length > Math.max(fromIndex, toIndex)\n      ) {\n        const nestedParts = [...parentComponent.nested_parts]\n\n        // 範囲チェック\n        if (\n          fromIndex >= 0 &&\n          fromIndex < nestedParts.length &&\n          toIndex >= 0 &&\n          toIndex < nestedParts.length &&\n          fromIndex !== toIndex\n        ) {\n          const [movedItem] = nestedParts.splice(fromIndex, 1)\n          nestedParts.splice(toIndex, 0, movedItem)\n\n          parentComponent.nested_parts = nestedParts\n          core.editablePageData.value = newPageData\n          emit('update:page', newPageData)\n        } else {\n          logger.error('❌ 無効なインデックス:', {\n            fromIndex,\n            toIndex,\n            arrayLength: nestedParts.length,\n          })\n        }\n      } else {\n        logger.error('❌ 親コンポーネントまたはnested_partsが見つかりません:', {\n          pathString,\n          path,\n        })\n      }\n    },\n\n    // 異なる階層間でのネストパーツ移動\n    moveNestedPartBetweenLevels: (\n      sourcePath: string,\n      sourceIndex: number,\n      targetPath: string,\n      targetIndex: number\n    ) => {\n      const sourceParentPath = utils.string.parseHierarchyPath(sourcePath)\n      const targetParentPath = utils.string.parseHierarchyPath(targetPath)\n      const newPageData = [...core.editablePageData.value]\n\n      // ソース親コンポーネントから要素を削除\n      const sourceParent = utils.component.findComponentByPath(newPageData, sourceParentPath)\n      if (!sourceParent?.nested_parts) return\n\n      const [movedItem] = sourceParent.nested_parts.splice(sourceIndex, 1)\n\n      // ターゲット親コンポーネントに要素を追加\n      const targetParent = utils.component.findComponentByPath(newPageData, targetParentPath)\n      if (!targetParent) return\n\n      if (!targetParent.nested_parts) {\n        targetParent.nested_parts = []\n      }\n\n      targetParent.nested_parts.splice(targetIndex, 0, movedItem)\n\n      core.editablePageData.value = newPageData\n      emit('update:page', newPageData)\n    },\n\n    // コンポーネントIDベースのネストパーツ並べ替え\n    moveNestedPartById: (parentComponentId: string, fromIndex: number, toIndex: number) => {\n      logger.debug(`🔧 moveNestedPartById: 親ID=${parentComponentId}, ${fromIndex} → ${toIndex}`)\n\n      const newPageData = JSON.parse(JSON.stringify(core.editablePageData.value)) // 深いコピー\n\n      const parentComponent = findComponent(newPageData, parentComponentId)\n      if (\n        parentComponent?.nested_parts &&\n        parentComponent.nested_parts.length > Math.max(fromIndex, toIndex)\n      ) {\n        const nestedParts = [...parentComponent.nested_parts]\n\n        // 範囲チェック\n        if (\n          fromIndex >= 0 &&\n          fromIndex < nestedParts.length &&\n          toIndex >= 0 &&\n          toIndex < nestedParts.length &&\n          fromIndex !== toIndex\n        ) {\n          const [movedItem] = nestedParts.splice(fromIndex, 1)\n          nestedParts.splice(toIndex, 0, movedItem)\n\n          parentComponent.nested_parts = nestedParts\n          core.editablePageData.value = newPageData\n          emit('update:page', newPageData)\n\n          logger.debug(`  - ✅ 並べ替え成功: ${movedItem.id} を位置 ${toIndex} に移動`)\n        } else {\n          logger.error('❌ 無効なインデックス:', {\n            fromIndex,\n            toIndex,\n            arrayLength: nestedParts.length,\n          })\n        }\n      } else {\n        logger.error('❌ 親コンポーネントまたはnested_partsが見つかりません:', {\n          parentComponentId,\n        })\n      }\n    },\n\n    // コンポーネントIDベースの異なる階層間移動\n    moveNestedPartBetweenLevelsById: (\n      sourceParentId: string,\n      sourceIndex: number,\n      targetParentId: string,\n      targetIndex: number\n    ) => {\n      logger.debug(\n        `🔧 moveNestedPartBetweenLevelsById: ${sourceParentId}[${sourceIndex}] → ${targetParentId}[${targetIndex}]`\n      )\n\n      const newPageData = JSON.parse(JSON.stringify(core.editablePageData.value)) // 深いコピー\n\n      // ソース親コンポーネントから要素を削除\n      const sourceParent = findComponent(newPageData, sourceParentId)\n      if (!sourceParent?.nested_parts) {\n        logger.error('❌ ソース親コンポーネントが見つかりません:', sourceParentId)\n        return\n      }\n\n      const [movedItem] = sourceParent.nested_parts.splice(sourceIndex, 1)\n\n      // ターゲット親コンポーネントに要素を追加\n      const targetParent = findComponent(newPageData, targetParentId)\n      if (!targetParent) {\n        logger.error('❌ ターゲット親コンポーネントが見つかりません:', targetParentId)\n        return\n      }\n\n      if (!targetParent.nested_parts) {\n        targetParent.nested_parts = []\n      }\n\n      targetParent.nested_parts.splice(targetIndex, 0, movedItem)\n\n      core.editablePageData.value = newPageData\n      emit('update:page', newPageData)\n\n      logger.debug(\n        `  - ✅ 階層間移動成功: ${movedItem.id} を ${targetParentId} の位置 ${targetIndex} に移動`\n      )\n    },\n\n    // z-for内のネストパーツ並べ替え\n    moveZForNestedPart: (parentPath: string, fromIndex: number, toIndex: number) => {\n      logger.debug(`🔥🔧 moveZForNestedPart: パス=${parentPath}, ${fromIndex} → ${toIndex}`)\n\n      // パスの解析: \"gadvadakrng886a.cards[2].nested_parts\" -> コンポーネントID、配列名、インデックス、スロット名\n      const pathMatch = parentPath.match(/^(\\w+)\\.(\\w+)\\[(\\d+)\\]\\.(\\w+)$/)\n      logger.debug('🔥 パス解析結果:', { parentPath, pathMatch })\n\n      if (!pathMatch) {\n        logger.error('❌ 無効なz-forネストパーツパス:', parentPath)\n        return\n      }\n\n      const [, componentId, arrayName, arrayIndexStr, slotName] = pathMatch\n      const arrayIndex = parseInt(arrayIndexStr)\n      logger.debug('🔥 解析済み情報:', { componentId, arrayName, arrayIndex, slotName })\n\n      const newPageData = JSON.parse(JSON.stringify(core.editablePageData.value))\n\n      // コンポーネントを検索\n      const component = findComponent(newPageData, componentId)\n      logger.debug('🔥 コンポーネント検索結果:', component)\n\n      if (!component) {\n        logger.error('❌ コンポーネントが見つかりません:', componentId)\n        return\n      }\n\n      // z-for配列を取得\n      const array = component[arrayName] as any[]\n      logger.debug('🔥 z-for配列:', {\n        arrayName,\n        array,\n        isArray: Array.isArray(array),\n        length: array?.length,\n      })\n\n      if (!Array.isArray(array) || arrayIndex >= array.length) {\n        logger.error('❌ 配列が見つかりません:', {\n          arrayName,\n          arrayIndex,\n          arrayLength: array?.length,\n        })\n        return\n      }\n\n      // 配列アイテムを取得\n      const arrayItem = array[arrayIndex]\n      logger.debug('🔥 配列アイテム:', { arrayIndex, arrayItem })\n\n      if (!arrayItem || !arrayItem[slotName] || !Array.isArray(arrayItem[slotName])) {\n        logger.error('❌ ネストパーツ配列が見つかりません:', {\n          slotName,\n          arrayItem,\n          slot: arrayItem?.[slotName],\n        })\n        return\n      }\n\n      // ネストパーツ配列を取得\n      const nestedParts = arrayItem[slotName] as Component[]\n      logger.debug('🔥 ネストパーツ配列:', { slotName, nestedParts, length: nestedParts.length })\n\n      // インデックスの範囲チェック\n      if (\n        fromIndex < 0 ||\n        fromIndex >= nestedParts.length ||\n        toIndex < 0 ||\n        toIndex >= nestedParts.length\n      ) {\n        logger.error('❌ 無効なインデックス:', {\n          fromIndex,\n          toIndex,\n          arrayLength: nestedParts.length,\n        })\n        return\n      }\n\n      if (fromIndex === toIndex) {\n        logger.debug('📍 同じ位置のため移動なし')\n        return\n      }\n\n      logger.debug(\n        '🔥 並べ替え前:',\n        nestedParts.map(p => p.id)\n      )\n\n      // 並べ替え実行\n      const [movedPart] = nestedParts.splice(fromIndex, 1)\n      nestedParts.splice(toIndex, 0, movedPart)\n\n      logger.debug(\n        '🔥 並べ替え後:',\n        nestedParts.map(p => p.id)\n      )\n\n      // データを更新\n      core.editablePageData.value = newPageData\n      emit('update:page', newPageData)\n\n      logger.debug(`✅ z-for内ネストパーツ並べ替え成功: ${movedPart.id} を位置 ${toIndex} に移動`)\n    },\n\n    // 編集操作\n    openEditor: (index: number) => {\n      const component = core.editablePageData.value[index]\n      if (component) {\n        core.openEditor(component, index)\n      }\n    },\n\n    saveComponent: (updatedComponent: Component) => {\n      const selectedIndex = core.selectedComponentIndex.value\n\n      logger.debug(`🐛 saveComponent デバッグ:`, {\n        selectedIndex,\n        selectedIndexType: typeof selectedIndex,\n        updatedComponentId: updatedComponent.id,\n        updatedComponentData: updatedComponent,\n        isZForItem: (updatedComponent as any)._isZForItem,\n      })\n\n      // z-for配列アイテムの保存処理\n      if ((updatedComponent as any)._isZForItem) {\n        logger.debug(`🔍 z-for配列アイテム保存開始`)\n        const parentComponentId = (updatedComponent as any)._parentComponentId\n        const parentArrayName = (updatedComponent as any)._parentArrayName\n        const parentIndex = (updatedComponent as any)._parentIndex\n        const arrayName = (updatedComponent as any)._arrayName\n        const arrayIndex = (updatedComponent as any)._arrayIndex\n\n        logger.debug(`🔍 z-for保存パラメータ:`, {\n          parentComponentId, parentArrayName, parentIndex, arrayName, arrayIndex\n        })\n\n        const newPageData = JSON.parse(JSON.stringify(core.editablePageData.value))\n\n        if (parentComponentId && parentArrayName && parentIndex !== undefined) {\n          // ネストz-for配列アイテムの保存処理\n          const parentComponent = findComponent(newPageData, parentComponentId)\n          if (parentComponent && Array.isArray(parentComponent[parentArrayName])) {\n            const parentArray = parentComponent[parentArrayName] as any[]\n            if (parentIndex >= 0 && parentIndex < parentArray.length) {\n              const parentItem = parentArray[parentIndex]\n              if (parentItem[arrayName] && Array.isArray(parentItem[arrayName])) {\n                const childArray = parentItem[arrayName] as any[]\n                if (arrayIndex >= 0 && arrayIndex < childArray.length) {\n                  // z-forシステムフィールドを除外してアイテムを更新\n                  const {\n                    _isZForItem,\n                    _parentComponentId,\n                    _parentArrayName,\n                    _parentIndex,\n                    _arrayName,\n                    _arrayIndex,\n                    _parentType,\n                    _parentModuleName,\n                    type,\n                    module_name,\n                    ...cleanedComponent\n                  } = updatedComponent as any\n\n                  childArray[arrayIndex] = { ...childArray[arrayIndex], ...cleanedComponent }\n\n                  core.editablePageData.value = newPageData\n                  emit('update:page', newPageData)\n                  logger.debug(`✅ ネストz-for配列アイテム保存完了 - ${parentArrayName}[${parentIndex}].${arrayName}[${arrayIndex}]`)\n                } else {\n                  logger.error(`❌ 子配列インデックス範囲外: ${arrayIndex}`)\n                }\n              } else {\n                logger.error(`❌ 子配列が見つからない: ${arrayName}`)\n              }\n            } else {\n              logger.error(`❌ 親配列インデックス範囲外: ${parentIndex}`)\n            }\n          } else {\n            logger.error(`❌ 親コンポーネントまたは親配列が見つからない: ${parentComponentId}.${parentArrayName}`)\n          }\n        } else {\n          // 通常のz-for配列アイテムの保存処理（従来通り）\n          const parentComponent = findComponent(newPageData, parentComponentId)\n          if (parentComponent && Array.isArray(parentComponent[arrayName])) {\n            const array = parentComponent[arrayName] as any[]\n            if (arrayIndex >= 0 && arrayIndex < array.length) {\n              // z-forシステムフィールドを除外してアイテムを更新\n              const {\n                _isZForItem,\n                _parentComponentId,\n                _arrayName,\n                _arrayIndex,\n                _zForTemplate,\n                ...cleanedComponent\n              } = updatedComponent as any\n              array[arrayIndex] = { ...array[arrayIndex], ...cleanedComponent }\n\n              core.editablePageData.value = newPageData\n              emit('update:page', newPageData)\n              logger.debug(`✅ z-for配列アイテム保存完了 - ${arrayName}[${arrayIndex}]`)\n            } else {\n              logger.error(`❌ z-for配列インデックス範囲外: ${arrayIndex}`)\n            }\n          } else {\n            logger.error(\n              `❌ z-for親コンポーネントまたは配列が見つからない: ${parentComponentId}.${arrayName}`\n            )\n          }\n        }\n        core.closeEditor()\n        return\n      }\n\n      if (typeof selectedIndex === 'number' && selectedIndex >= 0) {\n        // メインコンポーネントの保存\n        const newPageData = [...core.editablePageData.value]\n        newPageData[selectedIndex] = updatedComponent\n        core.editablePageData.value = newPageData\n        emit('update:page', newPageData)\n        logger.debug(`✅ メインコンポーネント保存完了 - ID: ${updatedComponent.id}`)\n      } else if (typeof selectedIndex === 'string') {\n        // ネストコンポーネントの保存（パス文字列ベース）\n        logger.debug(`🔍 ネストコンポーネント保存開始 - 検索対象ID: ${selectedIndex}`)\n        const newPageData = JSON.parse(JSON.stringify(core.editablePageData.value))\n\n        logger.debug(`🔍 保存前のPageData:`, JSON.stringify(newPageData, null, 2))\n\n        const success = updateNestedComponent(newPageData, selectedIndex, updatedComponent)\n\n        logger.debug(`🔍 updateNestedComponent結果: ${success}`)\n        logger.debug(`🔍 保存後のPageData:`, JSON.stringify(newPageData, null, 2))\n\n        if (success) {\n          core.editablePageData.value = newPageData\n          emit('update:page', newPageData)\n          logger.debug(\n            `✅ ネストコンポーネント保存完了 - ID: ${updatedComponent.id}, パス: ${selectedIndex}`\n          )\n        } else {\n          logger.error(\n            `❌ ネストコンポーネント保存失敗 - ID: ${updatedComponent.id}, パス: ${selectedIndex}`\n          )\n        }\n      } else {\n        logger.error(`❌ 無効なselectedIndex: ${selectedIndex} (type: ${typeof selectedIndex})`)\n      }\n      core.closeEditor()\n    },\n\n    // ネストコンポーネント操作\n    addNestedPart: (parentComponentId: string, position: number, newComponent: Component) => {\n      logger.debug(\n        `🔧 addNestedPart: 親ID=${parentComponentId}, 位置=${position}, 新コンポーネント=${newComponent.id}`\n      )\n\n      const newPageData = JSON.parse(JSON.stringify(core.editablePageData.value)) // 深いコピー\n\n      // z-for内の特別なパス形式かチェック（パーツ追加の場合は最後の[パーツインデックス]がない）\n      const zForPathPattern = /^(.+)\\.(.+)\\[(\\d+)\\]\\.(.+)$/\n      const zForMatch = parentComponentId.match(zForPathPattern)\n      logger.debug(`🔍 パス解析: ${parentComponentId} -> zForMatch:`, zForMatch)\n\n      let addSuccess = false\n\n      if (zForMatch) {\n        // z-for内のネストパーツ追加\n        const [, parentId, arrayName, arrayIndex, slotName] = zForMatch\n        logger.debug(`z-for内ネストパーツ追加:`, {\n          parentId,\n          arrayName,\n          arrayIndex,\n          slotName,\n          position,\n        })\n\n        // 親コンポーネントを検索\n        const findAndAddInZFor = (components: Component[]): boolean => {\n          for (const comp of components) {\n            logger.debug(`🔍 コンポーネント検索: ${comp.id} vs ${parentId}`)\n            if (comp.id === parentId) {\n              logger.debug(`✅ 親コンポーネント発見: ${comp.id}`)\n              logger.debug(`🔍 配列チェック: ${arrayName} ->`, comp[arrayName])\n              if (comp[arrayName] && Array.isArray(comp[arrayName])) {\n                const arrayItem = comp[arrayName][parseInt(arrayIndex)]\n                logger.debug(`🔍 配列アイテム[${arrayIndex}]:`, arrayItem)\n                if (arrayItem) {\n                  if (!arrayItem[slotName]) {\n                    arrayItem[slotName] = []\n                    logger.debug(`🆕 スロット初期化: ${slotName}`)\n                  }\n                  logger.debug(`🔍 スロット[${slotName}]現在の内容:`, arrayItem[slotName])\n                  arrayItem[slotName].splice(position, 0, newComponent)\n                  logger.debug(\n                    `✅ z-for内パーツ追加成功: ${newComponent.id} -> スロット内容:`,\n                    arrayItem[slotName]\n                  )\n                  return true\n                } else {\n                  logger.debug(`❌ 配列アイテムが見つかりません: インデックス${arrayIndex}`)\n                }\n              } else {\n                logger.debug(`❌ 配列が見つかりません: ${arrayName}`)\n              }\n            }\n            if (comp.nested_parts && Array.isArray(comp.nested_parts)) {\n              if (findAndAddInZFor(comp.nested_parts)) {\n                return true\n              }\n            }\n          }\n          return false\n        }\n\n        // 親コンポーネントを検索（共通の再帰検索関数を使用）\n        const parentComponent = findComponent(newPageData, parentId)\n        if (parentComponent) {\n          logger.debug(`✅ 親コンポーネント発見: ${parentComponent.id}`)\n          logger.debug(`🔍 配列チェック: ${arrayName} ->`, parentComponent[arrayName])\n          if (parentComponent[arrayName] && Array.isArray(parentComponent[arrayName])) {\n            const arrayItem = parentComponent[arrayName][parseInt(arrayIndex)]\n            logger.debug(`🔍 配列アイテム[${arrayIndex}]:`, arrayItem)\n            if (arrayItem) {\n              if (!arrayItem[slotName]) {\n                arrayItem[slotName] = []\n                logger.debug(`🆕 スロット初期化: ${slotName}`)\n              }\n              logger.debug(`🔍 スロット[${slotName}]現在の内容:`, arrayItem[slotName])\n              arrayItem[slotName].splice(position, 0, newComponent)\n              logger.debug(\n                `✅ z-for内パーツ追加成功: ${newComponent.id} -> スロット内容:`,\n                arrayItem[slotName]\n              )\n              addSuccess = true\n            } else {\n              logger.debug(`❌ 配列アイテムが見つかりません: インデックス${arrayIndex}`)\n            }\n          } else {\n            logger.debug(`❌ 配列が見つかりません: ${arrayName}`)\n          }\n        } else {\n          logger.debug(`❌ 親コンポーネントが見つかりません: ${parentId}`)\n        }\n      } else {\n        // 通常のコンポーネント追加（共通検索関数を使用）\n        const parentComponent = findComponent(newPageData, parentComponentId)\n        if (parentComponent) {\n          if (!parentComponent.nested_parts) {\n            parentComponent.nested_parts = []\n          }\n          parentComponent.nested_parts.splice(position, 0, newComponent)\n          logger.debug(\n            `  - ✅ パーツ追加成功: ${newComponent.id} を ${parentComponentId} の位置 ${position} に追加`\n          )\n          logger.debug(\n            `  - 追加後のnested_parts:`,\n            parentComponent.nested_parts.map(c => c.id)\n          )\n          addSuccess = true\n        }\n      }\n\n      if (addSuccess) {\n        core.editablePageData.value = newPageData\n        emit('update:page', newPageData)\n      } else {\n        logger.debug(`  - ❌ 親コンポーネントが見つかりません: ${parentComponentId}`)\n      }\n    },\n\n    deleteNestedPart: (componentId: string) => {\n      if (window.confirm('このネストパーツを削除しますか？')) {\n        const newPageData = JSON.parse(JSON.stringify(core.editablePageData.value)) // 深いコピー\n\n        // z-for内の特別なパス形式かチェック\n        const zForPathPattern = /^(.+)\\.(.+)\\[(\\d+)\\]\\.(.+)\\[(\\d+)\\]$/\n        const zForMatch = componentId.match(zForPathPattern)\n\n        let deleteSuccess = false\n\n        if (zForMatch) {\n          // z-for内のネストパーツの削除\n          const [, parentId, arrayName, arrayIndex, slotName, partIndex] = zForMatch\n          logger.debug(`z-for内ネストパーツ削除:`, {\n            parentId,\n            arrayName,\n            arrayIndex,\n            slotName,\n            partIndex,\n          })\n\n          // 親コンポーネントを検索（共通の再帰検索関数を使用）\n          const parentComponent = findComponent(newPageData, parentId)\n          if (parentComponent) {\n            logger.debug(`✅ 削除対象の親コンポーネント発見: ${parentComponent.id}`)\n            if (parentComponent[arrayName] && Array.isArray(parentComponent[arrayName])) {\n              const arrayItem = parentComponent[arrayName][parseInt(arrayIndex)]\n              if (arrayItem && arrayItem[slotName] && Array.isArray(arrayItem[slotName])) {\n                logger.debug(`🗑️ z-for内パーツ削除実行: ${slotName}[${partIndex}]`)\n                arrayItem[slotName].splice(parseInt(partIndex), 1)\n                deleteSuccess = true\n              } else {\n                logger.debug(`❌ スロットまたはパーツが見つかりません: ${slotName}`)\n              }\n            } else {\n              logger.debug(`❌ 配列が見つかりません: ${arrayName}`)\n            }\n          } else {\n            logger.debug(`❌ 削除対象の親コンポーネントが見つかりません: ${parentId}`)\n          }\n        } else {\n          // 通常のコンポーネント削除（共通削除関数を使用）\n          deleteSuccess = findAndDeleteComponent(newPageData, componentId)\n        }\n\n        if (deleteSuccess) {\n          core.editablePageData.value = newPageData\n          emit('update:page', newPageData)\n        } else {\n          logger.debug(`❌ Component not found for deletion: ${componentId}`)\n        }\n      }\n    },\n\n    // Tiptap編集\n    startTiptapEdit: (\n      componentId: string,\n      paramName: string,\n      hierarchyPath: number[] = [],\n      depth: number = 0\n    ) => {\n      core.startTiptapEdit(componentId, paramName, hierarchyPath, depth)\n    },\n\n    // 簡単なTiptap編集（後方互換性用）\n    startSimpleTiptapEdit: (componentId: string, paramName: string) => {\n      core.startTiptapEdit(componentId, paramName, [], 0)\n    },\n\n    stopTiptapEdit: () => {\n      core.stopTiptapEdit()\n    },\n\n    // データ送信（パフォーマンス最適化版）\n    sendPageData: () => {\n      debouncedEmitUpdate(core.editablePageData.value)\n    },\n\n    sendCommonPartsData: () => {\n      emit('update:commonParts', core.localCommonParts.value)\n    },\n    sendIndividualPartsData: () => {\n      emit('update:individualParts', core.localIndividualParts.value)\n    },\n\n    // 配列操作\n    addArrayItem: (component: Component, arrayKey: string) => {\n      utils.component.addArrayItem(component, arrayKey)\n      debouncedEmitUpdate(core.editablePageData.value)\n    },\n\n    removeArrayItem: (component: Component, arrayKey: string, index: number) => {\n      utils.component.removeArrayItem(component, arrayKey, index)\n      debouncedEmitUpdate(core.editablePageData.value)\n    },\n\n    // データリセット\n    resetPageData: () => {\n      core.editablePageData.value = Array.isArray(props.page) ? [...props.page] : []\n      emit('update:page', core.editablePageData.value)\n    },\n\n    resetPartsData: () => {\n      core.localParts.value = Array.isArray(props.parts) ? [...props.parts] : []\n      emit('update:parts', core.localParts.value)\n    },\n  }\n\n  // 統合されたgetters\n  const getters = {\n    // 現在選択されているコンポーネント\n    currentComponent: computed(() => core.selectedComponent.value),\n\n    // 現在のテンプレート\n    currentTemplate: computed((): string => {\n      const component = core.selectedComponent.value\n      if (!component) return ''\n      return utils.template.getTemplate(\n        component.type,\n        component.module_name,\n        core.localParts.value\n      )\n    }),\n\n    // 現在のフィールド一覧\n    currentFields: computed((): string[] => {\n      const template: string = getters.currentTemplate.value\n      return utils.template.extractFields(template)\n    }),\n\n    // 現在のスロット一覧\n    currentSlots: computed((): string[] => {\n      const template: string = getters.currentTemplate.value\n      return utils.template.extractSlots(template)\n    }),\n\n    // レンダリング関数\n    renderComponent: (component: Component): string => {\n      return templateProcessor.renderComponentWithoutSlot(\n        component,\n        (type: string, moduleName: string) =>\n          utils.template.getTemplate(type, moduleName, core.localParts.value)\n      )\n    },\n\n    // パーツ管理用プレビュー\n    renderPartPreview: (body: string): string => {\n      if (!body) return ''\n\n      try {\n        let preview = body\n\n        // 1. テキスト記法 {$param:default} をデフォルト値優先で置き換え\n        preview = preview.replace(/\\{\\$([^:]+):([^}]*)\\}/g, (match, paramName, defaultValue) => {\n          // デフォルト値が指定されている場合は優先、なければサンプル値を使用\n          if (defaultValue && defaultValue.trim()) {\n            return defaultValue\n          }\n          \n          const sampleValues: Record<string, string> = {\n            title: 'サンプルタイトル',\n            text: 'サンプルテキスト',\n            content: 'サンプルコンテンツ',\n            heading: '見出し',\n            description: '説明文',\n            label: 'ラベル',\n            source: '情報源',\n            tooltip: 'ツールチップ',\n          }\n          return sampleValues[paramName] || `[${paramName}]`\n        })\n\n        // 2. 選択記法 ($param:option1|option2|option3) を最初のオプションで置き換え\n        preview = preview.replace(/\\(\\$([^:]+):([^)]+)\\)/g, (match, paramName, options) => {\n          const optionList = options.split('|').filter((opt: string) => opt.trim())\n          return optionList[0] || ''\n        })\n\n        // 3. 条件付き記法 ($param?:value) をデフォルト値で置き換え\n        preview = preview.replace(/\\(\\$([^:?]+)\\?:([^)]*)\\)/g, (match, paramName, value) => {\n          return value || ''\n        })\n\n        // 4. z-slot記法を削除（プレビューでは不要）\n        preview = preview.replace(/z-slot=\"[^\"]*\"/g, '')\n\n        // 5. z-for記法を削除（プレビューでは不要）\n        preview = preview.replace(/z-for=\"[^\"]*\"/g, '')\n        preview = preview.replace(/z-for-wrapper=\"[^\"]*\"/g, '')\n\n        return preview\n      } catch (error) {\n        logger.error('プレビューレンダリングエラー:', error)\n        return body // エラーの場合は元のHTMLを返す\n      }\n    },\n  }\n\n  // カスタムイベントハンドラー（z-for配列アイテム保存用）\n\n  // イベントバスリスナーの設定\n  const setupEventListeners = () => {\n    // 配列アイテム追加\n    editorEventBus.on('addArrayItem', ({ componentId, arrayKey }) => {\n      try {\n        logger.debug(`EventBus: addArrayItem - componentId=${componentId}, arrayKey=${arrayKey}`)\n\n        if (!componentId || !arrayKey) {\n          throw new Error('componentId または arrayKey が指定されていません')\n        }\n\n        const component = findComponent(core.editablePageData.value, componentId)\n        if (!component) {\n          throw new Error(`Component not found: ${componentId}`)\n        }\n\n        logger.success(`Component found: ${component.id}, adding array item to ${arrayKey}`)\n\n        // テンプレート記法対応版のaddArrayItemを使用\n        const partsData =\n          core.localParts.value && core.localParts.value.length > 0 ? core.localParts.value : []\n        if (partsData.length > 0) {\n          const componentUtils = useComponentUtils(partsData)\n          componentUtils.addArrayItem(component, arrayKey)\n        } else {\n          // フォールバック: 簡易版を使用\n          actions.addArrayItem(component, arrayKey)\n        }\n\n        emit('update:page', core.editablePageData.value)\n      } catch (error) {\n        logger.error(`配列アイテム追加エラー: ${error}`, { componentId, arrayKey })\n      }\n    })\n\n    // 【削除済み】古いz-for配列アイテム追加リスナーは早期登録版に統一\n\n    // z-for配列アイテム削除\n    editorEventBus.on('removeZForArrayItem', ({ componentId, arrayName, index }) => {\n      try {\n        logger.debug(\n          `EventBus: removeZForArrayItem - componentId=${componentId}, arrayName=${arrayName}, index=${index}`\n        )\n\n        // ネストz-for構造のcomponentIdをパース\n        // パターン: parentId_arrayName_index (例: nested_list_demo_001_categories_0)\n        logger.debug('🔥 DELETE - componentId:', componentId)\n\n        // componentIdが標準的な形式かネスト形式かを判断\n        const parts = componentId.split('_')\n        logger.debug('🔥 DELETE - componentId parts:', parts)\n\n        let targetArray: any[] | undefined\n\n        // ネスト形式の判定を改善\n        const component = findComponent(core.editablePageData.value, componentId)\n        const isNormalComponent = component && component.id === componentId\n\n        // ネスト形式の条件: 通常のcomponentとして見つからない場合\n        if (parts.length >= 3 &&\n            /^\\d+$/.test(parts[parts.length - 1]) &&\n            !isNormalComponent) {\n          // 最後2つを除いてbaseParentIdを構成\n          const baseParentId = parts.slice(0, -2).join('_')\n          const parentArrayName = parts[parts.length - 2]\n          const parentIndex = parts[parts.length - 1]\n\n          logger.debug('🔥 DELETE - ネスト形式検出:', { baseParentId, parentArrayName, parentIndex })\n          logger.debug(`ネストz-forアイテム削除:`, { baseParentId, parentArrayName, parentIndex })\n\n          // ネストz-forの正しい解析（ADD処理と同様）\n          let realComponentId = baseParentId\n          let realArrayPath = parentArrayName\n          \n          const realComponent = findComponent(core.editablePageData.value, baseParentId)\n          if (!realComponent) {\n            const underscorePositions = []\n            for (let i = 0; i < baseParentId.length; i++) {\n              if (baseParentId[i] === '_') underscorePositions.push(i)\n            }\n            \n            if (underscorePositions.length >= 1) {\n              const splitPos = underscorePositions[underscorePositions.length - 1]\n              realComponentId = baseParentId.substring(0, splitPos)\n              const restPart = baseParentId.substring(splitPos + 1)\n              realArrayPath = `${restPart}_${parentArrayName}`\n              \n              logger.debug('🔥 DELETE - ネストz-for IDを修正:', { \n                originalBaseParentId: baseParentId,\n                realComponentId, \n                realArrayPath,\n                parentIndex \n              })\n            }\n          }\n          \n          const parentComponent = findComponent(core.editablePageData.value, realComponentId)\n          if (parentComponent && Array.isArray((parentComponent as any)[realArrayPath])) {\n            const parentItem = (parentComponent as any)[realArrayPath][parseInt(parentIndex)]\n            logger.debug('🔥 DELETE - Parent item:', parentItem)\n            logger.debug('🔥 DELETE - Parent item target array name:', arrayName)\n            logger.debug('🔥 DELETE - Parent item target array:', parentItem ? (parentItem as any)[arrayName] : undefined)\n\n            if (parentItem && Array.isArray((parentItem as any)[arrayName])) {\n              targetArray = (parentItem as any)[arrayName] as any[]\n            }\n          }\n        } else {\n          // 通常のz-forの場合\n          logger.debug('🔥 DELETE - 通常形式検出:', componentId)\n          const normalComponent = component || findComponent(core.editablePageData.value, componentId)\n          if (normalComponent && Array.isArray(normalComponent[arrayName])) {\n            targetArray = normalComponent[arrayName]\n          }\n        }\n\n        if (!targetArray || index < 0 || index >= targetArray.length) {\n          throw new Error(`Invalid target array or index: ${arrayName}[${index}]`)\n        }\n\n        // 指定位置のアイテムを削除\n        targetArray.splice(index, 1)\n\n        logger.success(`z-for配列アイテム削除完了: ${arrayName}[${index}]`)\n        emit('update:page', core.editablePageData.value)\n      } catch (error) {\n        logger.error(`z-for配列アイテム削除エラー: ${error}`, { componentId, arrayName, index })\n      }\n    })\n\n    // 【削除済み】古いz-for配列アイテム並び替えリスナーは早期登録版に統一\n\n    // z-for配列アイテム編集\n    editorEventBus.on('editZForArrayItem', ({ componentId, arrayName, index }) => {\n      try {\n        logger.debug(\n          `EventBus: editZForArrayItem - componentId=${componentId}, arrayName=${arrayName}, index=${index}`\n        )\n\n        // z-for配列アイテム編集処理\n        logger.debug('🔥 EDIT - componentId:', componentId)\n\n        // componentIdが標準的な形式かネスト形式かを判断\n        const parts = componentId.split('_')\n        logger.debug('🔥 REORDER - componentId parts:', parts)\n\n        let targetArray: any[] | undefined\n\n        // ネスト形式の判定を改善\n        const component = findComponent(core.editablePageData.value, componentId)\n        const isNormalComponent = component && component.id === componentId\n\n        // ネスト形式の条件: 通常のcomponentとして見つからない場合\n        if (parts.length >= 3 &&\n            /^\\d+$/.test(parts[parts.length - 1]) &&\n            !isNormalComponent) {\n          // 最後2つを除いてbaseParentIdを構成\n          const baseParentId = parts.slice(0, -2).join('_')\n          const parentArrayName = parts[parts.length - 2]\n          const parentIndex = parts[parts.length - 1]\n\n          logger.debug('🔥 REORDER - ネスト形式検出:', { baseParentId, parentArrayName, parentIndex })\n          logger.debug(`ネストz-forアイテム並び替え:`, { baseParentId, parentArrayName, parentIndex })\n\n          // ネストz-forの正しい解析（ADD処理と同様）\n          let realComponentId = baseParentId\n          let realArrayPath = parentArrayName\n          \n          const realComponent = findComponent(core.editablePageData.value, baseParentId)\n          if (!realComponent) {\n            const underscorePositions = []\n            for (let i = 0; i < baseParentId.length; i++) {\n              if (baseParentId[i] === '_') underscorePositions.push(i)\n            }\n            \n            if (underscorePositions.length >= 1) {\n              const splitPos = underscorePositions[underscorePositions.length - 1]\n              realComponentId = baseParentId.substring(0, splitPos)\n              const restPart = baseParentId.substring(splitPos + 1)\n              realArrayPath = `${restPart}_${parentArrayName}`\n              \n              logger.debug('🔥 REORDER - ネストz-for IDを修正:', { \n                originalBaseParentId: baseParentId,\n                realComponentId, \n                realArrayPath,\n                parentIndex \n              })\n            }\n          }\n          \n          const parentComponent = findComponent(core.editablePageData.value, realComponentId)\n          logger.debug('🔥 Parent component found:', parentComponent ? (parentComponent as any).id : null)\n          if (parentComponent && Array.isArray((parentComponent as any)[realArrayPath])) {\n            const parentItem = (parentComponent as any)[realArrayPath][parseInt(parentIndex)]\n            logger.debug('🔥 Parent item:', parentItem)\n            logger.debug('🔥 Parent item target array name:', arrayName)\n            logger.debug('🔥 Parent item target array:', parentItem ? (parentItem as any)[arrayName] : undefined)\n\n            if (parentItem && Array.isArray((parentItem as any)[arrayName])) {\n              targetArray = (parentItem as any)[arrayName] as any[]\n            }\n          }\n        } else {\n          // 通常のz-forの場合\n          logger.debug('🔥 REORDER - 通常形式検出:', componentId)\n          const normalComponent = component || findComponent(core.editablePageData.value, componentId)\n          if (normalComponent && Array.isArray(normalComponent[arrayName])) {\n            targetArray = normalComponent[arrayName]\n          }\n        }\n\n        // z-for配列アイテム編集処理（編集画面を開く）\n        if (targetArray && index >= 0 && index < targetArray.length) {\n          const targetItem = targetArray[index]\n          logger.info(`z-for配列アイテム編集開始: ${componentId}.${arrayName}[${index}]`, targetItem)\n          // TODO: 実際の編集ダイアログを開く処理を実装\n        } else {\n          logger.error('🔥 Invalid array or index:', {\n            arrayName,\n            index,\n            arrayLength: targetArray?.length,\n          })\n          throw new Error(`Invalid array or index: ${arrayName}[${index}]`)\n        }\n\n      } catch (error) {\n        logger.error(`z-for配列アイテム編集エラー: ${error}`, {\n          componentId,\n          arrayName,\n          index,\n        })\n      }\n    })\n\n    // z-for配列アイテム編集\n    editorEventBus.on('editZForArrayItem', ({ componentId, arrayName, index }) => {\n      try {\n        logger.debug(\n          `EventBus: editZForArrayItem - componentId=${componentId}, arrayName=${arrayName}, index=${index}`\n        )\n\n        // ネストしたz-forのコンポーネントID解析（例: nested_list_demo_001_categories_0_items_1）\n        const targetComponent = findComponent(core.editablePageData.value, componentId)\n        const targetArrayName = arrayName\n        const targetIndex = index\n\n        if (!targetComponent) {\n          // componentIdが標準的な形式かネスト形式かを判断（統一されたロジック）\n          const parts = componentId.split('_')\n          logger.debug('🔥 EDIT - componentId parts:', parts)\n\n          // ネスト形式の判定を改善\n          const component = findComponent(core.editablePageData.value, componentId)\n          const isNormalComponent = component && component.id === componentId\n\n          // ネスト形式の条件: 通常のcomponentとして見つからない場合\n          if (parts.length >= 3 &&\n              /^\\d+$/.test(parts[parts.length - 1]) &&\n              !isNormalComponent) {\n            // 最後2つを除いてbaseParentIdを構成\n            const baseParentId = parts.slice(0, -2).join('_')\n            const parentArrayName = parts[parts.length - 2]\n            const parentIndex = parts[parts.length - 1]\n\n            logger.debug('🔥 EDIT - ネスト形式検出:', { baseParentId, parentArrayName, parentIndex })\n            logger.debug(`ネストz-forアイテム編集:`, { baseParentId, parentArrayName, parentIndex })\n\n            // ネストz-forの正しい解析（ADD処理と同様）\n            let realComponentId = baseParentId\n            let realArrayPath = parentArrayName\n            \n            const realComponent = findComponent(core.editablePageData.value, baseParentId)\n            if (!realComponent) {\n              const underscorePositions = []\n              for (let i = 0; i < baseParentId.length; i++) {\n                if (baseParentId[i] === '_') underscorePositions.push(i)\n              }\n              \n              if (underscorePositions.length >= 1) {\n                const splitPos = underscorePositions[underscorePositions.length - 1]\n                realComponentId = baseParentId.substring(0, splitPos)\n                const restPart = baseParentId.substring(splitPos + 1)\n                realArrayPath = `${restPart}_${parentArrayName}`\n                \n                logger.debug('🔥 EDIT - ネストz-for IDを修正:', { \n                  originalBaseParentId: baseParentId,\n                  realComponentId, \n                  realArrayPath,\n                  parentIndex \n                })\n              }\n            }\n            \n            // 親コンポーネントを見つける\n            const parentComponent = findComponent(core.editablePageData.value, realComponentId)\n            if (parentComponent) {\n              const parentArray = parentComponent[realArrayPath] as any[]\n              if (Array.isArray(parentArray) && Number(parentIndex) < parentArray.length) {\n                const parentItem = parentArray[Number(parentIndex)]\n\n                // 子配列（arrayName）が存在するかチェック\n                if (parentItem[arrayName]) {\n                  const childArray = parentItem[arrayName] as any[]\n                  if (Array.isArray(childArray) && index < childArray.length) {\n                    const childItem = childArray[index]\n\n                    // 実際の子配列アイテムにz-for-item用メタデータを直接追加\n                    childItem._isZForItem = true\n                    childItem._arrayName = arrayName\n                    childItem._arrayIndex = index\n                    childItem._parentType = parentComponent.type\n                    childItem._parentModuleName = parentComponent.module_name\n                    // ネストz-for用の親情報を追加\n                    childItem._parentComponentId = baseParentId\n                    childItem._parentArrayName = parentArrayName\n                    childItem._parentIndex = Number(parentIndex)\n\n                    // 元のtypeとmodule_nameを保存（復元用）\n                    const originalType = childItem.type\n                    const originalModuleName = childItem.module_name\n\n                    // 一時的にz-for-item用に設定\n                    childItem.type = 'z-for-item'\n                    childItem.module_name = parentComponent.module_name\n\n                    logger.debug('子z-for配列アイテム編集:', {\n                      parentComponent: parentComponent.id,\n                      parentArrayName,\n                      parentIndex: Number(parentIndex),\n                      childArrayName: arrayName,\n                      childIndex: index,\n                      childItem\n                    })\n\n                    // 実際の子アイテムを編集パネルに渡す\n                    core.openEditor(childItem as Component, `${componentId}_${arrayName}_${index}`)\n\n                    // 編集終了後にメタデータをクリーンアップするためのイベントリスナーを設定\n                    setupZForEditCleanup(childItem, `${componentId}_${arrayName}_${index}`)\n                    return\n                  }\n                }\n              }\n            }\n          }\n        }\n\n        if (!targetComponent) {\n          throw new Error(`Component not found: ${componentId}`)\n        }\n\n        const component = targetComponent\n\n        const array = component[arrayName] as any[]\n        if (!Array.isArray(array) || index < 0 || index >= array.length) {\n          throw new Error(`Invalid array or index: ${arrayName}[${index}]`)\n        }\n\n        const item = array[index]\n\n        logger.debug('🔍 z-for配列アイテム詳細:', {\n          componentId,\n          arrayName,\n          index,\n          item,\n          itemKeys: Object.keys(item),\n          itemType: item.type,\n          itemModuleName: item.module_name,\n          itemId: item.id,\n          parentType: component.type,\n          parentModuleName: component.module_name,\n        })\n\n        // z-for配列アイテムの編集用に一時的なコンポーネントを作成\n        const tempComponent = {\n          ...item,\n          id: `${componentId}_${arrayName}_${index}`,\n          // 配列アイテム自体のtype/module_nameを使用（親のものではなく）\n          type: item.type || component.type, // アイテム自体にtypeがない場合は親を使用\n          module_name: item.module_name || component.module_name, // アイテム自体にmodule_nameがない場合は親を使用\n          _isZForItem: true,\n          _parentComponentId: componentId,\n          _arrayName: arrayName,\n          _arrayIndex: index,\n          _zForTemplate: null, // z-for内のテンプレートは getFieldInfo 時に動的取得される\n        }\n\n        logger.debug('🔍 作成されたtempComponent:', {\n          tempComponentId: tempComponent.id,\n          tempComponentType: tempComponent.type,\n          tempComponentModuleName: tempComponent.module_name,\n          allKeys: Object.keys(tempComponent),\n        })\n\n        logger.debug(`z-for配列アイテム編集: コンポーネント検索結果`, {\n          componentId,\n          componentFound: !!component,\n          componentType: component.type,\n          componentModuleName: component.module_name,\n          arrayName,\n          arrayLength: array.length,\n          index,\n          itemKeys: Object.keys(item),\n          tempComponentId: tempComponent.id\n        })\n\n        // エディターを開く\n        core.openEditor(tempComponent as any, `${componentId}_${arrayName}_${index}`)\n\n        logger.success(`z-for配列アイテム編集開始: ${arrayName}[${index}]`)\n      } catch (error) {\n        logger.error(`z-for配列アイテム編集エラー: ${error}`, { componentId, arrayName, index })\n      }\n    })\n\n    // ネストパーツ削除\n    editorEventBus.on('deleteNestedPart', ({ pathString }) => {\n      logger.debug(`EventBus: deleteNestedPart - path=${pathString}`)\n      actions.deleteNestedPart(pathString)\n    })\n\n    // ネストエディター開く\n    editorEventBus.on('openNestedEditor', ({ pathString }) => {\n      logger.debug(`EventBus: openNestedEditor - path=${pathString}`)\n\n      if (!pathString || typeof pathString !== 'string') {\n        logger.error('Invalid pathString:', pathString)\n        return\n      }\n\n      // z-for内の特別なパス形式かチェック（例: gadvadakrng886a.cards[0].nested_parts2[0]）\n      const zForPathPattern = /^(.+)\\.(.+)\\[(\\d+)\\]\\.(.+)\\[(\\d+)\\]$/\n      const zForMatch = pathString.match(zForPathPattern)\n\n      let component = null\n\n      if (zForMatch) {\n        // z-for内のネストパーツの場合\n        const [, parentId, arrayName, arrayIndex, slotName, partIndex] = zForMatch\n        logger.debug(`z-for内パス解析:`, { parentId, arrayName, arrayIndex, slotName, partIndex })\n\n        // 親コンポーネントを検索（共通関数を使用）\n        const parentComponent = findComponent(core.editablePageData.value, parentId)\n        if (\n          parentComponent &&\n          parentComponent[arrayName] &&\n          Array.isArray(parentComponent[arrayName])\n        ) {\n          const arrayItem = parentComponent[arrayName][parseInt(arrayIndex)]\n          if (arrayItem && arrayItem[slotName] && Array.isArray(arrayItem[slotName])) {\n            component = arrayItem[slotName][parseInt(partIndex)]\n            logger.debug(`z-for内ネストパーツを発見:`, component)\n          }\n        }\n      } else {\n        // 通常のコンポーネント検索（共通関数を使用）\n        component = findComponent(core.editablePageData.value, pathString)\n      }\n\n      if (component) {\n        logger.debug(`Found component:`, {\n          id: component.id,\n          type: component.type,\n          module: component.module_name,\n        })\n        core.openEditor(component, pathString)\n      } else {\n        logger.error(`Component not found with ID: ${pathString}`)\n      }\n    })\n\n    // ネストパーツセレクター開く\n    editorEventBus.on('openNestedPartSelector', ({ pathString, position }) => {\n      logger.debug(`EventBus: openNestedPartSelector - path=${pathString}, position=${position}`)\n      core.openNestedPartSelector(pathString, position)\n    })\n  }\n\n  // グローバル関数として公開（HTMLテンプレート用）\n  const exposeGlobalFunctions = (\n    localStartTiptapEdit?: (componentId: string, paramName: string) => void\n  ) => {\n    // 既存のglobal関数をクリーンアップ\n    const globalFunctions = [\n      'startTiptapEdit',\n      'stopTiptapEdit',\n      'openPartSelector',\n      'openNestedPartSelector',\n      'openNestedEditor',\n      'deleteNestedPart',\n      'addArrayItem',\n      'addZForArrayItem',\n      'removeZForArrayItem',\n      'reorderZForArrayItem',\n      'editZForArrayItem',\n      'handleZForDragStart',\n      'handleZForDragEnd',\n      'handleZForArrayItemDragOver',\n      'handleZForArrayItemDrop',\n    ]\n\n    globalFunctions.forEach(func => {\n      delete (window as any)[func]\n    })\n\n    // インスタンス固有のグローバル関数設定\n    const instanceId = `inst_${Math.random().toString(36).substr(2, 9)}`\n    \n    // インスタンス固有のグローバルUIファンクション作成\n    const instanceGlobalUIFunctions = {\n      ...globalUIFunctions,\n      // イベントバスを使用する関数をオーバーライド\n      addArrayItem: (componentId: string, arrayKey: string) => {\n        editorEventBus.emit('addArrayItem', { componentId, arrayKey })\n      },\n      addZForArrayItem: (componentId: string, arrayName: string, insertIndex: number) => {\n        editorEventBus.emit('addZForArrayItem', { componentId, arrayName, insertIndex })\n      },\n      removeZForArrayItem: (componentId: string, arrayName: string, index: number) => {\n        editorEventBus.emit('removeZForArrayItem', { componentId, arrayName, index })\n      },\n      reorderZForArrayItem: (componentId: string, arrayName: string, fromIndex: number, toIndex: number) => {\n        editorEventBus.emit('reorderZForArrayItem', { componentId, arrayName, fromIndex, toIndex })\n      },\n      editZForArrayItem: (componentId: string, arrayName: string, index: number) => {\n        editorEventBus.emit('editZForArrayItem', { componentId, arrayName, index })\n      },\n      deleteNestedPart: (pathString: string) => {\n        editorEventBus.emit('deleteNestedPart', { pathString })\n      },\n      openNestedEditor: (pathString: string) => {\n        editorEventBus.emit('openNestedEditor', { pathString })\n      },\n      openNestedPartSelector: (pathString: string, position: number) => {\n        editorEventBus.emit('openNestedPartSelector', { pathString, position })\n      },\n      startRichTextEdit: (componentId: string, paramName: string, currentValue: string) => {\n        return editorEventBus.emit('startRichTextEdit', { componentId, paramName, currentValue })\n      },\n      selectImage: (componentId: string, paramName: string) => {\n        editorEventBus.emit('selectImage', { componentId, paramName })\n      },\n      uploadImage: (file: File, category: 'common' | 'individual', componentId?: string) => {\n        editorEventBus.emit('uploadImage', { file, category, componentId })\n      },\n    }\n    \n    // HTMLテンプレート用グローバル関数を設定（インスタンス固有）\n    ;(window as any)[`startTiptapEdit_${instanceId}`] = localStartTiptapEdit || actions.startSimpleTiptapEdit\n    ;(window as any)[`stopTiptapEdit_${instanceId}`] = actions.stopTiptapEdit\n    ;(window as any)[`openPartSelector_${instanceId}`] = (position: number) => core.openPartSelector(position)\n    ;(window as any)[`openNestedPartSelector_${instanceId}`] = instanceGlobalUIFunctions.openNestedPartSelector\n    ;(window as any)[`openNestedEditor_${instanceId}`] = instanceGlobalUIFunctions.openNestedEditor\n    ;(window as any)[`deleteNestedPart_${instanceId}`] = instanceGlobalUIFunctions.deleteNestedPart\n    ;(window as any)[`addArrayItem_${instanceId}`] = instanceGlobalUIFunctions.addArrayItem\n    \n    // 下位互換性のため共通名も残すが、最新のインスタンスで上書き\n    ;(window as any).startTiptapEdit = localStartTiptapEdit || actions.startSimpleTiptapEdit\n    ;(window as any).stopTiptapEdit = actions.stopTiptapEdit\n    ;(window as any).openPartSelector = (position: number) => core.openPartSelector(position)\n    ;(window as any).openNestedPartSelector = instanceGlobalUIFunctions.openNestedPartSelector\n    ;(window as any).openNestedEditor = instanceGlobalUIFunctions.openNestedEditor\n    ;(window as any).deleteNestedPart = instanceGlobalUIFunctions.deleteNestedPart\n    ;(window as any).addArrayItem = instanceGlobalUIFunctions.addArrayItem\n\n    // z-for配列編集用のグローバル関数（インスタンス固有のイベントバス使用）\n    ;(window as any).addZForArrayItem = instanceGlobalUIFunctions.addZForArrayItem\n    ;(window as any).removeZForArrayItem = instanceGlobalUIFunctions.removeZForArrayItem\n    ;(window as any).reorderZForArrayItem = instanceGlobalUIFunctions.reorderZForArrayItem\n    ;(window as any).editZForArrayItem = instanceGlobalUIFunctions.editZForArrayItem\n\n    // z-for配列ドラッグ&ドロップ用のグローバル関数\n    let draggedItem: { componentId: string; arrayName: string; index: number } | null = null\n\n    // z-for内のネストパーツのドラッグ&ドロップ用変数\n    let draggedNestedPart: { path: string; slotName: string; index: number } | null = null\n\n    ;(window as any).handleZForDragStart = (\n      event: DragEvent,\n      componentId: string,\n      arrayName: string,\n      index: number\n    ) => {\n      const target = event.target as HTMLElement\n      logger.debug('🔥 z-for drag start called', { target, componentId, arrayName, index })\n\n      // ボタンやリンクなどのクリック可能要素からのドラッグを防ぐ\n      if (target.tagName === 'BUTTON' || target.tagName === 'A' || target.closest('button, a')) {\n        logger.debug('🔥 z-for: クリック可能要素からのドラッグをブロック')\n        event.preventDefault()\n        return\n      }\n\n      // ネストしたz-for要素での競合を防ぐため、イベント伝播を停止\n      event.stopPropagation()\n\n      draggedItem = { componentId, arrayName, index }\n      logger.debug('🔥 z-for dragged item set:', draggedItem)\n\n      // z-for-item-wrapper要素を取得\n      const itemWrapper = target.closest('.zero-code-z-for-item-wrapper') as HTMLElement\n      if (itemWrapper) {\n        logger.debug('🔥 z-for item wrapper found:', itemWrapper)\n        itemWrapper.style.opacity = '0.5'\n        itemWrapper.style.transform = 'scale(0.95)'\n        itemWrapper.classList.add('dragging')\n      } else {\n        logger.debug('🔥 z-for item wrapper not found, using target')\n        target.style.opacity = '0.5'\n      }\n\n      event.dataTransfer!.effectAllowed = 'move'\n      event.dataTransfer!.setData('text/html', target.outerHTML)\n      logger.debug('z-for drag start', { componentId, arrayName, index })\n    }\n    ;(window as any).handleZForDragEnd = (event: DragEvent) => {\n      const target = event.target as HTMLElement\n\n      // z-for-item-wrapper要素のスタイルをリセット\n      const itemWrapper = target.closest('.zero-code-z-for-item-wrapper') as HTMLElement\n      if (itemWrapper) {\n        itemWrapper.style.opacity = '1'\n        itemWrapper.style.transform = 'scale(1)'\n        itemWrapper.classList.remove('dragging')\n      } else {\n        target.style.opacity = '1'\n      }\n\n      // すべてのdrag-overクラスを削除\n      document.querySelectorAll('.z-for-item-wrapper.drag-over').forEach(el => {\n        el.classList.remove('drag-over')\n      })\n\n      // ドラッグ状態のリセットを遅延実行（ドロップイベント処理後に実行されるように）\n      setTimeout(() => {\n        draggedItem = null\n        logger.debug('z-for drag end - draggedItem reset')\n      }, 50)\n\n      logger.debug('z-for drag end')\n    }\n    ;(window as any).handleZForArrayItemDragOver = (event: DragEvent) => {\n      event.preventDefault()\n      event.dataTransfer!.dropEffect = 'move'\n\n      const target = event.currentTarget as HTMLElement\n      const itemWrapper = target.closest('.zero-code-z-for-item-wrapper') as HTMLElement\n\n      if (itemWrapper && !itemWrapper.classList.contains('dragging')) {\n        // ドラッグ中の要素ではない場合\n        // 他のdrag-overクラスを削除\n        document.querySelectorAll('.z-for-item-wrapper.drag-over').forEach(el => {\n          el.classList.remove('drag-over')\n        })\n        itemWrapper.classList.add('drag-over')\n      }\n    }\n    ;(window as any).handleZForArrayItemDrop = (event: DragEvent) => {\n      event.preventDefault()\n      event.stopPropagation() // ネストしたz-for要素での競合を防ぐ\n\n      const target = event.currentTarget as HTMLElement\n      logger.debug('🔥 handleZForArrayItemDrop called', { target, draggedItem })\n\n      // drag-overクラスを削除\n      const itemWrapper = target.closest('.zero-code-z-for-item-wrapper') as HTMLElement\n      if (itemWrapper) {\n        itemWrapper.classList.remove('drag-over')\n      }\n\n      if (!draggedItem) {\n        logger.error('🔥 No dragged item found in drop handler')\n        logger.warn('No dragged item found')\n        return\n      }\n\n      logger.debug('🔥 Dragged item found:', draggedItem)\n\n      // ドロップ先の情報を取得\n      const targetComponentId =\n        itemWrapper?.getAttribute('data-component-id') || target.getAttribute('data-component-id')\n      const targetArrayName =\n        itemWrapper?.getAttribute('data-array-name') || target.getAttribute('data-array-name')\n      const targetIndexStr =\n        itemWrapper?.getAttribute('data-item-index') || target.getAttribute('data-item-index')\n      const targetIndex = parseInt(targetIndexStr || '0')\n\n      // 同じ配列内での並び替えのみ許可\n      if (\n        draggedItem.componentId === targetComponentId &&\n        draggedItem.arrayName === targetArrayName &&\n        draggedItem.index !== targetIndex\n      ) {\n        logger.debug('🔥 z-for reorder executing:', {\n          componentId: draggedItem.componentId,\n          arrayName: draggedItem.arrayName,\n          fromIndex: draggedItem.index,\n          toIndex: targetIndex,\n        })\n\n        globalUIFunctions.reorderZForArrayItem(\n          draggedItem.componentId,\n          draggedItem.arrayName,\n          draggedItem.index,\n          targetIndex\n        )\n\n        logger.debug('🔥 z-for reorder completed')\n        logger.success('z-for array item reordered', {\n          from: draggedItem.index,\n          to: targetIndex,\n        })\n      }\n\n      draggedItem = null\n    }\n\n    // z-for内のネストパーツのドラッグ&ドロップ処理\n    ;(window as any).handleNestedPartDragStart = (event: DragEvent) => {\n      logger.debug('🔥 handleNestedPartDragStart called', event.target)\n      const target = event.target as HTMLElement\n\n      // ボタンやリンクなどのクリック可能要素からのドラッグを防ぐ\n      if (target.tagName === 'BUTTON' || target.tagName === 'A' || target.closest('button, a')) {\n        logger.debug('🔥 クリック可能要素からのドラッグをブロック')\n        event.preventDefault()\n        return\n      }\n\n      // z-for内のネストパーツ全体からドラッグ開始\n      const partElement = target.closest('.z-for-nested-part') as HTMLElement\n      if (partElement) {\n        const nestedPath = partElement.getAttribute('data-nested-path')\n        const slotName = partElement.getAttribute('data-slot-name')\n        const partIndex = partElement.getAttribute('data-part-index')\n\n        logger.debug('🔥 z-forネストパーツドラッグ情報:', { nestedPath, slotName, partIndex })\n\n        if (nestedPath && slotName && partIndex !== null) {\n          draggedNestedPart = {\n            path: nestedPath,\n            slotName,\n            index: parseInt(partIndex),\n          }\n\n          // ドラッグ中のスタイルを適用\n          partElement.classList.add('dragging')\n          partElement.style.opacity = '0.5'\n          logger.debug('🔥 draggingクラス追加:', partElement)\n\n          event.dataTransfer!.effectAllowed = 'move'\n          event.dataTransfer!.setData('text/html', partElement.outerHTML)\n          logger.debug('🔥 z-for nested part drag start', draggedNestedPart)\n          logger.debug('z-for nested part drag start', draggedNestedPart)\n        }\n      } else {\n        logger.debug('🔥 z-for内ネストパーツではない:', target.classList.toString())\n      }\n    }\n    ;(window as any).handleNestedPartDragEnd = (event: DragEvent) => {\n      const target = event.target as HTMLElement\n\n      // ドラッグ中のスタイルを削除\n      const partElement = target.closest('.z-for-nested-part') as HTMLElement\n      if (partElement) {\n        partElement.classList.remove('dragging')\n        partElement.style.opacity = '1'\n      }\n\n      // すべてのdrag-overクラスを削除\n      document.querySelectorAll('.z-for-nested-part.drag-over').forEach(el => {\n        el.classList.remove('drag-over')\n      })\n\n      draggedNestedPart = null\n      logger.debug('z-for nested part drag end')\n    }\n    ;(window as any).handleNestedPartDragOver = (event: DragEvent) => {\n      event.preventDefault()\n      event.dataTransfer!.dropEffect = 'move'\n\n      const target = event.currentTarget as HTMLElement\n      const partElement = target.closest('.z-for-nested-part')\n\n      if (partElement && !partElement.classList.contains('dragging')) {\n        // 他のdrag-overクラスを削除\n        document.querySelectorAll('.z-for-nested-part.drag-over').forEach(el => {\n          el.classList.remove('drag-over')\n        })\n        partElement.classList.add('drag-over')\n      }\n    }\n    ;(window as any).handleNestedPartDrop = (event: DragEvent) => {\n      logger.debug('🔥 handleNestedPartDrop called', event.currentTarget)\n      event.preventDefault()\n\n      const target = event.currentTarget as HTMLElement\n      const partElement =\n        target.closest('.z-for-nested-part') || target.closest('.nested-component')\n\n      if (partElement) {\n        partElement.classList.remove('drag-over')\n      }\n\n      if (!draggedNestedPart) {\n        logger.debug('🔥 No dragged nested part found')\n        logger.warn('No dragged nested part found')\n        return\n      }\n\n      // ドロップ先の情報を取得\n      const dropSlotName = target.getAttribute('data-slot-name')\n      const dropPartIndex = target.getAttribute('data-part-index')\n\n      logger.debug('🔥 ドロップ先情報:', { dropSlotName, dropPartIndex, draggedNestedPart })\n\n      if (dropSlotName && dropPartIndex !== null) {\n        const targetIndex = parseInt(dropPartIndex)\n\n        // 同じスロット内での並べ替えのみサポート\n        if (dropSlotName === draggedNestedPart.slotName) {\n          // パスからコンポーネントIDと配列情報を抽出\n          // 例: \"gadvadakrng886a.cards[2].nested_parts[0]\" -> \"gadvadakrng886a.cards[2].nested_parts\"\n          const pathMatch = draggedNestedPart.path.match(/^(.+\\.\\w+\\[\\d+\\]\\.\\w+)\\[\\d+\\]$/)\n          logger.debug('🔥 パス解析:', { path: draggedNestedPart.path, pathMatch })\n\n          if (pathMatch) {\n            const parentPath = pathMatch[1] // \"gadvadakrng886a.cards[2].nested_parts\"\n\n            logger.debug('🔥 並べ替え実行:', {\n              parentPath,\n              fromIndex: draggedNestedPart.index,\n              toIndex: targetIndex,\n            })\n\n            // ネストパーツの並べ替えを実行\n            logger.debug('z-for nested part reorder', {\n              parentPath,\n              fromIndex: draggedNestedPart.index,\n              toIndex: targetIndex,\n            })\n\n            // z-for内のネストパーツ並べ替え処理\n            actions.moveZForNestedPart(parentPath, draggedNestedPart.index, targetIndex)\n          }\n        } else {\n          logger.debug('🔥 異なるスロット間の移動は未サポート:', {\n            dropSlotName,\n            draggedSlotName: draggedNestedPart.slotName,\n          })\n        }\n      } else {\n        logger.debug('🔥 ドロップ先の情報が不完全:', { dropSlotName, dropPartIndex })\n      }\n\n      draggedNestedPart = null\n    }\n\n    logger.debug('グローバル関数を安全に公開完了')\n  }\n\n  // クリーンアップ関数\n  const cleanup = () => {\n    // 将来的にイベントリスナーの削除やリソースのクリーンアップが必要な場合に実装\n    logger.debug('useZeroCode クリーンアップ実行')\n  }\n\n  return {\n    // 状態（readonly）\n    state: {\n      editablePageData: core.editablePageData,\n      localParts: core.localParts,\n      localCommonParts: core.localCommonParts,\n      localIndividualParts: core.localIndividualParts,\n      activeTab: core.activeTab,\n      dataTab: core.dataTab,\n      showEditor: core.showEditor,\n      showPartSelector: core.showPartSelector,\n      showNestedPartSelector: core.showNestedPartSelector,\n      selectedComponent: core.selectedComponent,\n      selectedComponentIndex: core.selectedComponentIndex,\n      editingText: core.editingText,\n      insertPosition: core.insertPosition,\n      nestedInsertPath: core.nestedInsertPath,\n      nestedInsertPosition: core.nestedInsertPosition,\n    },\n\n    // 計算プロパティ\n    computed: {\n      currentComponentIndex: core.currentComponentIndex,\n      pageDataLength: core.pageDataLength,\n      hasSelectedComponent: core.hasSelectedComponent,\n      isEditing: core.isEditing,\n      isTiptapEditing: core.isTiptapEditing,\n      ...getters,\n    },\n\n    // アクション\n    actions,\n\n    // ユーティリティ\n    utils,\n\n    // テンプレート処理\n    templateProcessor,\n\n    // シンプルエディター\n    simpleEditor,\n\n    // タブ操作\n    switchToTab: core.switchToTab,\n    setDataTab: core.setDataTab,\n\n    // エディター操作\n    openEditor: core.openEditor,\n    closeEditor: core.closeEditor,\n    openPartSelector: core.openPartSelector,\n    closePartSelector: core.closePartSelector,\n    openNestedPartSelector: core.openNestedPartSelector,\n    closeNestedPartSelector: core.closeNestedPartSelector,\n\n    // イベントバス設定\n    setupEventListeners,\n\n    // グローバル関数公開\n    exposeGlobalFunctions,\n\n    // クリーンアップ\n    cleanup,\n  }\n}\n","/**\n * サンプルデータの統合エクスポート\n */\n\nimport { commonParts } from './parts/common'\nimport { individualParts } from './parts/individual'\nimport { defaultPageData } from './pages/default'\nimport { commonImages } from './images/common'\nimport { individualImages } from './images/individual'\nimport type { SampleDataSet } from '../types'\n\nexport const sampleDataSet: SampleDataSet = {\n  parts: {\n    common: commonParts,\n    individual: individualParts,\n  },\n  pages: [\n    {\n      id: 'default-page',\n      title: 'デフォルトページ',\n      description: 'Vue CMS エディターのサンプルページ',\n      components: defaultPageData,\n    },\n  ],\n  images: {\n    common: commonImages,\n    individual: individualImages,\n  },\n}\n\n// 後方互換性のため、従来の形式でもエクスポート\nexport { commonParts, individualParts, defaultPageData as pageData, commonImages as commonImagesData, individualImages as individualImagesData }","/**\n * 共通パーツのサンプルデータ（TypeScript版）\n */\n\nimport type { SamplePartSection } from '../../types'\n\nexport const commonParts: SamplePartSection[] = [\n  {\n    type: 'title',\n    description: 'タイトル系のコンポーネント',\n    module: [\n      {\n        title: 'title_1_1',\n        category: 'common',\n        description: 'メインタイトル（z-for、z-slot対応版）',\n        tags: ['title', 'z-for', 'z-slot', 'nested'],\n        body: `\n<div class=\"m_titleA ($state:s_state1|s_state2) ($variant:s_state3|s_state4|)\">\n  <h1 class=\"m_titleA__title\">{$title:メインタイトルテキスト}</h1>\n  <div class=\"m_titleA__label ($label_state?:s_state5|s_state6|s_state7)\">{$label:ラベルテキスト}</div>\n  <div z-slot=\"nested_parts\" class=\"m_titleA__contents\"></div>\n  <div><img src=\"($image_url:/img/hero_image.jpg)\" alt=\"($image_alt:画像の説明テキスト)\"></div>\n  <div class=\"m_titleA__card\" z-for-wrapper=\"cards\">\n    <div z-for=\"cards\" class=\"m_titleA__cardList ($card_state:s_state1|s_state2)\">\n      <div>{$card_title:カードアイテム1}</div>\n      <div>{$card_desc:カードアイテム2}</div>\n      <div z-slot=\"nested_parts\"></div>\n    </div>\n  </div>\n  <div class=\"m_titleA__category ($category:news,blog,event,product,service)\">\n    <span>カテゴリ選択</span>\n  </div>\n  <div class=\"m_titleA__tags ($tags?:important,featured,popular,trending,new)\">\n    <span>タグ選択（複数）</span>\n  </div>\n</div>`,\n      },\n      {\n        title: 'title_1_2',\n        category: 'common',\n        description: 'シンプルタイトル',\n        tags: ['title', 'simple'],\n        body: `\n<div class=\"m_titleB\">\n  <h2 class=\"m_titleB__title\">{$title:サブタイトルテキスト}</h2>\n  <p class=\"m_titleB__subtitle\">{$subtitle:サブタイトル説明文}</p>\n</div>`,\n      },\n    ],\n  },\n  {\n    type: 'hero',\n    description: 'ヒーロー系のコンポーネント',\n    module: [\n      {\n        title: 'hero_1_1',\n        category: 'common',\n        description: 'メインヒーロー（配列カード対応）',\n        tags: ['hero', 'z-for', 'cards'],\n        body: `\n<div class=\"m_heroA ($layout:full|contained) ($theme:light|dark)\">\n  <div class=\"m_heroA__background\">\n    <img src=\"($bg_image:/img/hero_image.jpg)\" alt=\"($bg_alt:ヒーロー背景画像)\">\n  </div>\n  <div class=\"m_heroA__content\">\n    <h1 class=\"m_heroA__title\">{$title:ヒーローメインタイトル}</h1>\n    <p class=\"m_heroA__description\">{$description:ヒーロー説明文がここに入ります}</p>\n    <div class=\"m_heroA__actions\">\n      <a href=\"($cta_url:#)\" class=\"m_heroA__cta ($cta_style:primary|secondary)\">{$cta_text:今すぐ始める}</a>\n    </div>\n  </div>\n  <div class=\"m_heroA__features\" z-for-wrapper=\"features\">\n    <div z-for=\"features\" class=\"m_heroA__feature\">\n      <div class=\"m_heroA__feature-icon\">\n        <img src=\"($icon_url:/img/placeholder.jpg)\" alt=\"($icon_alt:アイコン)\">\n      </div>\n      <h3>{$feature_title:機能タイトル}</h3>\n      <p>{$feature_description:機能の説明文}</p>\n    </div>\n  </div>\n</div>`,\n      },\n    ],\n  },\n  {\n    type: 'content',\n    description: 'コンテンツ系のコンポーネント',\n    module: [\n      {\n        title: 'content_1_1',\n        category: 'common',\n        description: '基本コンテンツブロック',\n        tags: ['content', 'text', 'simple'],\n        body: `\n<div class=\"m_contentA ($alignment:left|center|right) ($size:small|medium|large)\">\n  <div class=\"m_contentA__header\">\n    <h2 class=\"m_contentA__title\">{$title:コンテンツタイトル}</h2>\n    <p class=\"m_contentA__subtitle\">{$subtitle:サブタイトル}</p>\n  </div>\n  <div class=\"m_contentA__body\">\n    <p class=\"m_contentA__text\">{$content:ここにメインコンテンツが入ります。リッチテキスト編集に対応しています。}</p>\n    <div class=\"m_contentA__image ($image_position:top|bottom|left|right)\">\n      <img src=\"($image_url:/img/placeholder.jpg)\" alt=\"($image_alt:コンテンツ画像)\">\n    </div>\n  </div>\n  <div z-slot=\"nested_parts\" class=\"m_contentA__nested\"></div>\n</div>`,\n      },\n    ],\n  },\n]","/**\n * 個別パーツのサンプルデータ（TypeScript版）\n */\n\nimport type { SamplePartSection } from '../../types'\n\nexport const individualParts: SamplePartSection[] = [\n  {\n    type: 'button',\n    description: 'ボタン系のコンポーネント',\n    module: [\n      {\n        title: 'button_1_1',\n        category: 'individual',\n        description: '基本ボタン',\n        tags: ['button', 'cta', 'action'],\n        body: `\n<div class=\"m_buttonA\">\n  <a href=\"($url:#)\" class=\"m_buttonA__link ($style:primary|secondary|outline) ($size:small|medium|large)\">\n    {$text:ボタンテキスト}\n  </a>\n</div>`,\n      },\n      {\n        title: 'button_1_2',\n        category: 'individual',\n        description: 'アイコン付きボタン',\n        tags: ['button', 'icon', 'cta'],\n        body: `\n<div class=\"m_buttonB\">\n  <button class=\"m_buttonB__button ($variant:filled|outline|text) ($color:primary|secondary|success|warning|error)\">\n    <span class=\"m_buttonB__icon ($icon_position:left|right)\">\n      <img src=\"($icon_url:/img/placeholder.jpg)\" alt=\"($icon_alt:アイコン)\">\n    </span>\n    <span class=\"m_buttonB__text\">{$text:アイコンボタン}</span>\n  </button>\n</div>`,\n      },\n    ],\n  },\n  {\n    type: 'card',\n    description: 'カード系のコンポーネント',\n    module: [\n      {\n        title: 'card_1_1',\n        category: 'individual',\n        description: '基本カード（配列対応）',\n        tags: ['card', 'z-for', 'list'],\n        body: `\n<div class=\"m_cardA ($layout:grid|list) ($columns:1|2|3|4)\">\n  <div class=\"m_cardA__container\" z-for-wrapper=\"items\">\n    <div z-for=\"items\" class=\"m_cardA__item ($card_style:flat|elevated|outline)\">\n      <div class=\"m_cardA__image\">\n        <img src=\"($image_url:/img/placeholder.jpg)\" alt=\"($image_alt:カード画像)\">\n      </div>\n      <div class=\"m_cardA__content\">\n        <h3 class=\"m_cardA__title\">{$title:カードタイトル}</h3>\n        <p class=\"m_cardA__description\">{$description:カードの説明文がここに入ります}</p>\n        <div class=\"m_cardA__meta\">\n          <span class=\"m_cardA__category ($category:news|blog|product)\">{$category_label:カテゴリ}</span>\n          <time class=\"m_cardA__date\">{$date:2024-01-01}</time>\n        </div>\n      </div>\n      <div class=\"m_cardA__actions\">\n        <a href=\"($link_url:#)\" class=\"m_cardA__link\">{$link_text:詳細を見る}</a>\n      </div>\n    </div>\n  </div>\n</div>`,\n      },\n    ],\n  },\n  {\n    type: 'form',\n    description: 'フォーム系のコンポーネント',\n    module: [\n      {\n        title: 'form_1_1',\n        category: 'individual',\n        description: '基本フォーム',\n        tags: ['form', 'contact', 'input'],\n        body: `\n<div class=\"m_formA ($layout:vertical|horizontal) ($style:modern|classic)\">\n  <form class=\"m_formA__form\">\n    <div class=\"m_formA__header\">\n      <h2 class=\"m_formA__title\">{$title:お問い合わせフォーム}</h2>\n      <p class=\"m_formA__description\">{$description:ご質問やお問い合わせがございましたら、以下のフォームよりお送りください。}</p>\n    </div>\n    <div class=\"m_formA__fields\" z-for-wrapper=\"fields\">\n      <div z-for=\"fields\" class=\"m_formA__field ($field_type:text|email|tel|textarea|select)\">\n        <label class=\"m_formA__label\">{$label:フィールドラベル}</label>\n        <input type=\"($input_type:text|email|tel)\" class=\"m_formA__input ($required?:required)\" placeholder=\"($placeholder:入力してください)\">\n        <span class=\"m_formA__help\">{$help_text:補助テキスト}</span>\n      </div>\n    </div>\n    <div class=\"m_formA__actions\">\n      <button type=\"submit\" class=\"m_formA__submit ($submit_style:primary|secondary)\">{$submit_text:送信する}</button>\n    </div>\n  </form>\n</div>`,\n      },\n    ],\n  },\n]","/**\n * デフォルトページのサンプルデータ（TypeScript版）\n */\n\nimport type { SampleComponent } from '../../types'\n\nexport const defaultPageData: SampleComponent[] = [\n  {\n    id: 'hero-1',\n    type: 'hero',\n    module_name: 'hero_1_1',\n    title: 'Vue CMS エディターへようこそ',\n    description: '直感的で強力なコンテンツ管理システムです。ドラッグ&ドロップでページを作成し、リアルタイムでプレビューできます。',\n    bg_image: '/img/hero_image.jpg',\n    bg_alt: 'Vue CMS ヒーロー画像',\n    layout: 'full',\n    theme: 'light',\n    cta_text: '今すぐ始める',\n    cta_url: '#get-started',\n    cta_style: 'primary',\n    features: [\n      {\n        id: 'feature-1',\n        feature_title: '簡単操作',\n        feature_description: 'ドラッグ&ドロップで直感的にページを作成',\n        icon_url: '/img/placeholder.jpg',\n        icon_alt: '簡単操作アイコン',\n      },\n      {\n        id: 'feature-2',\n        feature_title: 'リアルタイムプレビュー',\n        feature_description: '編集内容をリアルタイムで確認できます',\n        icon_url: '/img/placeholder.jpg',\n        icon_alt: 'プレビューアイコン',\n      },\n      {\n        id: 'feature-3',\n        feature_title: 'Web Components',\n        feature_description: 'どこでも使える再利用可能なコンポーネント',\n        icon_url: '/img/placeholder.jpg',\n        icon_alt: 'コンポーネントアイコン',\n      },\n    ],\n  },\n  {\n    id: 'title-1',\n    type: 'title',\n    module_name: 'title_1_1',\n    title: '主な機能',\n    label: 'Features',\n    state: 's_state1',\n    variant: 's_state3',\n    label_state: ['s_state5', 's_state6'],\n    image_url: '/img/banner.jpg',\n    image_alt: '機能紹介画像',\n    category: 'product',\n    tags: ['featured', 'popular'],\n    cards: [\n      {\n        id: 'card-1',\n        card_title: 'テンプレート記法',\n        card_desc: '{$param:default} 形式でテキストを編集',\n        card_state: 's_state1',\n      },\n      {\n        id: 'card-2',\n        card_title: '選択記法',\n        card_desc: '($param:option1|option2) 形式で選択肢を提供',\n        card_state: 's_state2',\n      },\n      {\n        id: 'card-3',\n        card_title: '配列記法',\n        card_desc: 'z-for で繰り返し要素を管理',\n        card_state: 's_state1',\n      },\n    ],\n    nested_parts: [\n      {\n        id: 'content-1',\n        type: 'content',\n        module_name: 'content_1_1',\n        title: 'ネストされたコンテンツ',\n        subtitle: 'z-slot 機能のデモンストレーション',\n        content: 'このコンテンツは title コンポーネントの中にネストされています。z-slot 記法を使用することで、柔軟な構造を作ることができます。',\n        alignment: 'center',\n        size: 'medium',\n        image_url: '/img/team.jpg',\n        image_alt: 'チーム画像',\n        image_position: 'right',\n      },\n    ],\n  },\n  {\n    id: 'card-section-1',\n    type: 'card',\n    module_name: 'card_1_1',\n    layout: 'grid',\n    columns: '3',\n    items: [\n      {\n        id: 'item-1',\n        title: 'はじめての方へ',\n        description: 'Vue CMS エディターの基本的な使い方を学びましょう',\n        image_url: '/img/product1.jpg',\n        image_alt: 'チュートリアル画像',\n        category: 'blog',\n        category_label: 'ブログ',\n        date: '2024-01-15',\n        link_text: 'チュートリアルを見る',\n        link_url: '/tutorial',\n        card_style: 'elevated',\n      },\n      {\n        id: 'item-2',\n        title: 'アドバンス機能',\n        description: '上級者向けの機能と使用方法について詳しく解説',\n        image_url: '/img/background.jpg',\n        image_alt: 'アドバンス機能画像',\n        category: 'product',\n        category_label: '製品',\n        date: '2024-01-20',\n        link_text: '詳細を見る',\n        link_url: '/advanced',\n        card_style: 'elevated',\n      },\n      {\n        id: 'item-3',\n        title: 'コミュニティ',\n        description: 'ユーザーコミュニティに参加して情報交換をしましょう',\n        image_url: '/img/logo.png',\n        image_alt: 'コミュニティ画像',\n        category: 'news',\n        category_label: 'ニュース',\n        date: '2024-01-25',\n        link_text: '参加する',\n        link_url: '/community',\n        card_style: 'elevated',\n      },\n    ],\n  },\n]","/**\n * 共通画像のサンプルデータ（TypeScript版）\n */\n\nimport type { SampleImage } from '../../types'\n\nexport const commonImages: SampleImage[] = [\n  {\n    id: 'hero-bg',\n    name: 'hero_image.jpg',\n    url: '/img/hero_image.jpg',\n    alt: 'ヒーロー背景画像',\n    category: 'common',\n    fileData: {\n      base64: '',\n      type: 'image/jpeg',\n      size: 256000, // 250KB\n    },\n  },\n  {\n    id: 'logo',\n    name: 'logo.png',\n    url: '/img/logo.png',\n    alt: 'Vue CMS ロゴ',\n    category: 'common',\n    fileData: {\n      base64: '',\n      type: 'image/png',\n      size: 48000, // 47KB\n    },\n  },\n  {\n    id: 'banner',\n    name: 'banner.jpg',\n    url: '/img/banner.jpg',\n    alt: 'バナー画像',\n    category: 'common',\n    fileData: {\n      base64: '',\n      type: 'image/jpeg',\n      size: 128000, // 125KB\n    },\n  },\n  {\n    id: 'background',\n    name: 'background.jpg',\n    url: '/img/background.jpg',\n    alt: '背景画像',\n    category: 'common',\n    fileData: {\n      base64: '',\n      type: 'image/jpeg',\n      size: 512000, // 500KB\n    },\n  },\n  {\n    id: 'team',\n    name: 'team.jpg',\n    url: '/img/team.jpg',\n    alt: 'チーム画像',\n    category: 'common',\n    fileData: {\n      base64: '',\n      type: 'image/jpeg',\n      size: 196000, // 191KB\n    },\n  },\n  {\n    id: 'placeholder',\n    name: 'placeholder.jpg',\n    url: '/img/placeholder.jpg',\n    alt: 'プレースホルダー画像',\n    category: 'common',\n    fileData: {\n      base64: '',\n      type: 'image/jpeg',\n      size: 32000, // 31KB\n    },\n  },\n]","/**\n * 個別画像のサンプルデータ（TypeScript版）\n */\n\nimport type { SampleImage } from '../../types'\n\nexport const individualImages: SampleImage[] = [\n  {\n    id: 'product-1',\n    name: 'product1.jpg',\n    url: '/img/product1.jpg',\n    alt: '製品画像1',\n    category: 'individual',\n    fileData: {\n      base64: '',\n      type: 'image/jpeg',\n      size: 86000, // 84KB\n    },\n  },\n]","/**\n * z-for & z-slot テスト用データ\n */\n\nimport type { SamplePartSection, SamplePage } from '../types'\n\n/**\n * z-for & z-slot テスト用パーツデータ\n */\nexport const zForZSlotParts: SamplePartSection[] = [\n  // 基本的なリストアイテム\n  {\n    type: 'basic_list',\n    description: '基本的なz-for内z-slotパターン',\n    module: [\n      {\n        title: 'item',\n        category: 'test',\n        body: `\n          <div class=\"category-item\">\n            <h3>{$title:アイテムタイトル}</h3>\n            <p>{$description:アイテムの説明}</p>\n            <div z-for=\"items\" class=\"($item_class:item-wrapper|highlight-item|normal-item)\">\n              <div class=\"product-card\">\n                <h4>{$name:商品名}</h4>\n                <p>{$price:価格}</p>\n                <div class=\"slot-content\" z-slot=\"details\">\n                  <!-- 商品詳細スロット -->\n                </div>\n              </div>\n            </div>\n          </div>\n        `,\n        description: '基本的なリストアイテムパーツ',\n        tags: ['z-for', 'z-slot', 'basic']\n      }\n    ]\n  },\n\n  // ネストしたz-for内のz-slot\n  {\n    type: 'nested_list',\n    description: 'ネストしたz-for内z-slotパターン',\n    module: [\n      {\n        title: 'category',\n        category: 'test',\n        body: `\n          <div class=\"nested-list\">\n            <h2>{$category_name:カテゴリー名}</h2>\n            <div z-for=\"categories\" class=\"category-wrapper\">\n              <h3>{$cat_title:サブカテゴリー}</h3>\n              <div z-for=\"products\" class=\"product-list\">\n                <div class=\"product-card\">\n                  <h4>{$product_name:商品名}</h4>\n                  <span>{$product_price:価格}</span>\n                  <div class=\"slot-content\" z-slot=\"product_details\">\n                    <!-- 商品詳細スロット -->\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        `,\n        description: 'ネストしたカテゴリーパーツ',\n        tags: ['z-for', 'z-slot', 'nested']\n      }\n    ]\n  },\n\n  // 複数のz-slotを持つz-for\n  {\n    type: 'multi_slot',\n    description: '複数スロットパターン',\n    module: [\n      {\n        title: 'container',\n        category: 'test',\n        body: `\n          <div class=\"multi-slot-container\">\n            <h2>{$container_title:コンテナタイトル}</h2>\n            <div z-for=\"sections\" class=\"section-item\">\n              <div class=\"section-header\">\n                <h3>{$section_title:セクションタイトル}</h3>\n                <div z-slot=\"header_parts\" class=\"header-slot\">\n                  <!-- ヘッダースロット -->\n                </div>\n              </div>\n              <div class=\"section-content\">\n                <p>{$section_content:セクション内容}</p>\n                <div z-slot=\"content_parts\" class=\"content-slot\">\n                  <!-- コンテンツスロット -->\n                </div>\n              </div>\n              <div class=\"section-footer\">\n                <div z-slot=\"footer_parts\" class=\"footer-slot\">\n                  <!-- フッタースロット -->\n                </div>\n              </div>\n            </div>\n          </div>\n        `,\n        description: '複数スロットコンテナパーツ',\n        tags: ['z-for', 'z-slot', 'multiple']\n      }\n    ]\n  },\n\n  // 条件付きz-slot\n  {\n    type: 'conditional',\n    description: '条件付きz-slotパターン',\n    module: [\n      {\n        title: 'faq',\n        category: 'test',\n        body: `\n          <div class=\"faq-container\">\n            <h2>{$faq_title:FAQタイトル}</h2>\n            <div z-for=\"questions\" class=\"faq-item\">\n              <h3>{$question:質問}</h3>\n              <p>{$answer:回答}</p>\n              <div z-if=\"has_details\" class=\"details-section\">\n                <div z-slot=\"additional_info\" class=\"slot-content\">\n                  <!-- 追加情報スロット（条件付き） -->\n                </div>\n              </div>\n            </div>\n          </div>\n        `,\n        description: '条件付きFAQパーツ',\n        tags: ['z-for', 'z-slot', 'conditional', 'z-if']\n      }\n    ]\n  },\n\n  // 空のz-slot\n  {\n    type: 'empty',\n    description: '空スロットパターン',\n    module: [\n      {\n        title: 'list',\n        category: 'test',\n        body: `\n          <div class=\"empty-slot-container\">\n            <h2>{$list_title:リストタイトル}</h2>\n            <div z-for=\"empty_items\" class=\"empty-item\">\n              <h3>{$item_title:アイテム}</h3>\n              <div z-slot=\"empty_slot\" class=\"slot-content\">\n                <!-- 初期状態で空のスロット -->\n              </div>\n            </div>\n          </div>\n        `,\n        description: '空スロットリストパーツ',\n        tags: ['z-for', 'z-slot', 'empty']\n      }\n    ]\n  },\n\n  // 動的なz-slot名\n  {\n    type: 'dynamic',\n    description: '動的スロット名パターン',\n    module: [\n      {\n        title: 'mixed',\n        category: 'test',\n        body: `\n          <div class=\"dynamic-slot-container\">\n            <h2>{$container_title:動的スロットコンテナ}</h2>\n            <div z-for=\"mixed_items\" class=\"mixed-item\">\n              <h3>{$item_name:アイテム名} - Type: {$item_type:タイプ}</h3>\n              <div z-if=\"type_a\" z-slot=\"slot_type_a\" class=\"slot-content\">\n                <!-- タイプAスロット -->\n              </div>\n              <div z-if=\"type_b\" z-slot=\"slot_type_b\" class=\"slot-content\">\n                <!-- タイプBスロット -->\n              </div>\n              <div z-if=\"type_c\" z-slot=\"slot_type_c\" class=\"slot-content\">\n                <!-- タイプCスロット -->\n              </div>\n            </div>\n          </div>\n        `,\n        description: '動的スロットパーツ',\n        tags: ['z-for', 'z-slot', 'dynamic', 'conditional']\n      }\n    ]\n  },\n\n  // 共通パーツ\n  {\n    type: 'parts',\n    description: 'テスト用共通パーツ',\n    module: [\n      {\n        title: 'text',\n        category: 'common',\n        body: `<p class=\"text-part\">{$text:テキストパーツ}</p>`,\n        description: 'テキストパーツ',\n        tags: ['common', 'text']\n      },\n      {\n        title: 'button',\n        category: 'common',\n        body: `<button class=\"btn-part ($btn_style:primary|secondary|danger)\">{$btn_text:ボタン}</button>`,\n        description: 'ボタンパーツ',\n        tags: ['common', 'button']\n      },\n      {\n        title: 'image',\n        category: 'common',\n        body: `<img src=\"{$img_src:https://via.placeholder.com/150}\" alt=\"{$img_alt:画像}\" class=\"img-part\">`,\n        description: '画像パーツ',\n        tags: ['common', 'image']\n      },\n      {\n        title: 'link',\n        category: 'common',\n        body: `<a href=\"{$link_url:#}\" class=\"link-part\">{$link_text:リンク}</a>`,\n        description: 'リンクパーツ',\n        tags: ['common', 'link']\n      },\n      {\n        title: 'badge',\n        category: 'common',\n        body: `<span class=\"badge ($badge_color:blue|green|red|yellow)\">{$badge_text:バッジ}</span>`,\n        description: 'バッジパーツ',\n        tags: ['common', 'badge']\n      },\n      {\n        title: 'card',\n        category: 'common',\n        body: `\n          <div class=\"card-part\">\n            <h4>{$card_title:カードタイトル}</h4>\n            <p>{$card_content:カード内容}</p>\n          </div>\n        `,\n        description: 'カードパーツ',\n        tags: ['common', 'card']\n      }\n    ]\n  }\n]\n\n/**\n * z-for & z-slot テスト用ページデータ\n */\nexport const zForZSlotPages: SamplePage[] = [\n  {\n    id: 'zfor-zslot-tests',\n    title: 'z-for & z-slot テストページ',\n    description: 'z-for内でz-slotを使用する様々なパターンのテスト',\n    components: [\n      // パターン1: 基本的なz-for内z-slot\n      {\n        id: 'test_basic_zfor_zslot',\n        type: 'basic_list',\n        module_name: 'item',\n        title: '基本リスト',\n        description: 'z-for内の各アイテムにz-slotがある基本パターン',\n        item_class: 'normal-item',\n        items: [\n          {\n            id: 'item_001',\n            name: 'アイテム1',\n            price: '¥1,000',\n            details: [\n              {\n                id: 'detail_001',\n                type: 'parts',\n                module_name: 'text',\n                text: 'このアイテムの詳細説明です'\n              },\n              {\n                id: 'detail_002',\n                type: 'parts',\n                module_name: 'button',\n                btn_text: '詳細を見る',\n                btn_style: 'primary'\n              }\n            ]\n          },\n          {\n            id: 'item_002',\n            name: 'アイテム2',\n            price: '¥2,000',\n            details: [\n              {\n                id: 'detail_003',\n                type: 'parts',\n                module_name: 'badge',\n                badge_text: '新商品',\n                badge_color: 'green'\n              }\n            ]\n          },\n          {\n            id: 'item_003',\n            name: 'アイテム3',\n            price: '¥3,000',\n            details: [] // 空のスロット\n          }\n        ]\n      },\n\n      // パターン2: ネストしたz-for内のz-slot\n      {\n        id: 'test_nested_zfor_zslot',\n        type: 'nested_list',\n        module_name: 'category',\n        category_name: '商品カタログ',\n        categories: [\n          {\n            id: 'cat_001',\n            cat_title: '電化製品',\n            products: [\n              {\n                id: 'prod_001',\n                product_name: 'ノートPC',\n                product_price: '¥98,000',\n                product_details: [\n                  {\n                    id: 'pd_001',\n                    type: 'parts',\n                    module_name: 'text',\n                    text: '高性能ノートパソコン'\n                  }\n                ]\n              },\n              {\n                id: 'prod_002',\n                product_name: 'タブレット',\n                product_price: '¥45,000',\n                product_details: [\n                  {\n                    id: 'pd_002',\n                    type: 'parts',\n                    module_name: 'badge',\n                    badge_text: 'セール中',\n                    badge_color: 'red'\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            id: 'cat_002',\n            cat_title: '家具',\n            products: [\n              {\n                id: 'prod_003',\n                product_name: 'デスク',\n                product_price: '¥25,000',\n                product_details: []\n              }\n            ]\n          }\n        ]\n      },\n\n      // パターン3: 複数のz-slotを持つz-for\n      {\n        id: 'test_multiple_zslot',\n        type: 'multi_slot',\n        module_name: 'container',\n        container_title: '複数スロットテスト',\n        sections: [\n          {\n            id: 'sec_001',\n            section_title: 'セクション1',\n            section_content: 'これはセクション1の内容です',\n            header_parts: [\n              {\n                id: 'hp_001',\n                type: 'parts',\n                module_name: 'badge',\n                badge_text: 'ヘッダー',\n                badge_color: 'blue'\n              }\n            ],\n            content_parts: [\n              {\n                id: 'cp_001',\n                type: 'parts',\n                module_name: 'text',\n                text: 'コンテンツエリアのテキスト'\n              },\n              {\n                id: 'cp_002',\n                type: 'parts',\n                module_name: 'button',\n                btn_text: 'アクション',\n                btn_style: 'secondary'\n              }\n            ],\n            footer_parts: [\n              {\n                id: 'fp_001',\n                type: 'parts',\n                module_name: 'link',\n                link_text: 'フッターリンク',\n                link_url: '#footer'\n              }\n            ]\n          },\n          {\n            id: 'sec_002',\n            section_title: 'セクション2',\n            section_content: 'これはセクション2の内容です',\n            header_parts: [],\n            content_parts: [\n              {\n                id: 'cp_003',\n                type: 'parts',\n                module_name: 'card',\n                card_title: 'カード',\n                card_content: 'カードコンテンツ'\n              }\n            ],\n            footer_parts: []\n          }\n        ]\n      },\n\n      // パターン4: 条件付きz-slot\n      {\n        id: 'test_conditional_zslot',\n        type: 'conditional',\n        module_name: 'faq',\n        faq_title: 'よくある質問',\n        questions: [\n          {\n            id: 'q_001',\n            question: '配送料はいくらですか？',\n            answer: '全国一律500円です。',\n            has_details: true,\n            additional_info: [\n              {\n                id: 'ai_001',\n                type: 'parts',\n                module_name: 'text',\n                text: '10,000円以上のご購入で送料無料'\n              },\n              {\n                id: 'ai_002',\n                type: 'parts',\n                module_name: 'badge',\n                badge_text: '期間限定',\n                badge_color: 'yellow'\n              }\n            ]\n          },\n          {\n            id: 'q_002',\n            question: '返品は可能ですか？',\n            answer: '商品到着後7日以内であれば可能です。',\n            has_details: false,\n            additional_info: []\n          },\n          {\n            id: 'q_003',\n            question: '支払い方法は？',\n            answer: 'クレジットカード、銀行振込、代金引換が利用可能です。',\n            has_details: true,\n            additional_info: [\n              {\n                id: 'ai_003',\n                type: 'parts',\n                module_name: 'link',\n                link_text: '詳しい支払い方法',\n                link_url: '#payment'\n              }\n            ]\n          }\n        ]\n      },\n\n      // パターン5: 空のz-slot\n      {\n        id: 'test_empty_zslot',\n        type: 'empty',\n        module_name: 'list',\n        list_title: '空スロットテスト',\n        empty_items: [\n          {\n            id: 'empty_001',\n            item_title: '空のアイテム1',\n            empty_slot: []\n          },\n          {\n            id: 'empty_002',\n            item_title: '空のアイテム2',\n            empty_slot: []\n          },\n          {\n            id: 'empty_003',\n            item_title: '空のアイテム3',\n            empty_slot: []\n          }\n        ]\n      },\n\n      // パターン6: 動的なz-slot名\n      {\n        id: 'test_dynamic_zslot',\n        type: 'dynamic',\n        module_name: 'mixed',\n        container_title: '動的スロットテスト',\n        mixed_items: [\n          {\n            id: 'mix_001',\n            item_name: 'タイプA アイテム',\n            item_type: 'A',\n            type_a: true,\n            type_b: false,\n            type_c: false,\n            slot_type_a: [\n              {\n                id: 'sta_001',\n                type: 'parts',\n                module_name: 'text',\n                text: 'タイプA専用コンテンツ'\n              }\n            ],\n            slot_type_b: [],\n            slot_type_c: []\n          },\n          {\n            id: 'mix_002',\n            item_name: 'タイプB アイテム',\n            item_type: 'B',\n            type_a: false,\n            type_b: true,\n            type_c: false,\n            slot_type_a: [],\n            slot_type_b: [\n              {\n                id: 'stb_001',\n                type: 'parts',\n                module_name: 'button',\n                btn_text: 'タイプB ボタン',\n                btn_style: 'danger'\n              }\n            ],\n            slot_type_c: []\n          },\n          {\n            id: 'mix_003',\n            item_name: 'タイプC アイテム',\n            item_type: 'C',\n            type_a: false,\n            type_b: false,\n            type_c: true,\n            slot_type_a: [],\n            slot_type_b: [],\n            slot_type_c: [\n              {\n                id: 'stc_001',\n                type: 'parts',\n                module_name: 'badge',\n                badge_text: 'タイプC',\n                badge_color: 'green'\n              },\n              {\n                id: 'stc_002',\n                type: 'parts',\n                module_name: 'link',\n                link_text: 'タイプCリンク',\n                link_url: '#type-c'\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n]","/**\n * テストデータの統合エクスポート\n */\n\nimport { zForZSlotParts, zForZSlotPages } from './zForZSlotTestData'\nimport type { SampleDataSet } from '../types'\n\nexport const testDataSet: SampleDataSet = {\n  parts: {\n    common: zForZSlotParts.filter(section => \n      section.type === 'parts' || section.module.some(m => m.category === 'common')\n    ),\n    individual: zForZSlotParts.filter(section => \n      section.type !== 'parts' && !section.module.some(m => m.category === 'common')\n    ),\n  },\n  pages: zForZSlotPages,\n  images: {\n    common: [],\n    individual: [],\n  },\n}\n\n// 個別エクスポート\nexport { zForZSlotParts, zForZSlotPages }","/**\n * データローダー Composable\n * 環境に応じたデータの読み込みと管理を行う\n */\n\nimport { ref, readonly, computed } from 'vue'\nimport type { \n  SampleDataSet, \n  DataConfig, \n  DataEnvironment\n} from '../data/types'\nimport { sampleDataSet } from '../data/samples'\nimport { testDataSet } from '../data/tests'\nimport { logger } from '../shared/utils/logger'\n\n// データ設定\nconst dataConfig = ref<DataConfig>({\n  environment: 'development',\n  enableMockData: true,\n  defaultDataSet: 'samples',\n})\n\n// 現在のデータセット\nconst currentDataSet = ref<SampleDataSet>(sampleDataSet)\n\n// ローディング状態\nconst isLoading = ref(false)\nconst loadError = ref<string | null>(null)\n\n/**\n * データローダー Composable\n */\nexport function useDataLoader() {\n  \n  // 環境設定\n  const setEnvironment = (env: DataEnvironment) => {\n    dataConfig.value.environment = env\n    logger.info(`🌍 データ環境を ${env} に設定しました`)\n  }\n\n  // データ読み込み\n  const loadData = async (dataSetName: string = 'samples'): Promise<boolean> => {\n    isLoading.value = true\n    loadError.value = null\n    \n    try {\n      // サンプルデータとテストデータをサポート\n      if (dataSetName === 'samples') {\n        currentDataSet.value = sampleDataSet\n      } else if (dataSetName === 'tests' || dataSetName === 'zfor-zslot') {\n        currentDataSet.value = testDataSet\n      } else {\n        throw new Error(`未知のデータセット: ${dataSetName}`)\n      }\n      \n      return true\n      \n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'データ読み込みエラー'\n      loadError.value = errorMessage\n      logger.error(`❌ データ読み込み失敗: ${errorMessage}`)\n      return false\n      \n    } finally {\n      isLoading.value = false\n    }\n  }\n\n\n  // データの取得（計算プロパティ）\n  const parts = computed(() => currentDataSet.value.parts)\n  const pages = computed(() => currentDataSet.value.pages)\n  const images = computed(() => currentDataSet.value.images)\n  \n  // 統合パーツ\n  const combinedParts = computed(() => [\n    ...currentDataSet.value.parts.common,\n    ...currentDataSet.value.parts.individual,\n  ])\n\n  // デフォルトページデータ\n  const defaultPageData = computed(() => \n    currentDataSet.value.pages[0]?.components || []\n  )\n\n  // 状態の公開\n  const state = readonly({\n    isLoading,\n    loadError,\n    config: readonly(dataConfig),\n  })\n\n  // 初期化\n  const initialize = async () => {\n    // TypeScript サンプルデータを設定\n    await loadData('samples')\n  }\n\n  return {\n    // データ\n    parts,\n    pages,\n    images,\n    combinedParts,\n    defaultPageData,\n    \n    \n    // 状態\n    state,\n    \n    // メソッド\n    setEnvironment,\n    loadData,\n    initialize,\n  }\n}","<template>\n  <div class=\"zero-code-tab-navigation\">\n    <button\n      v-for=\"tab in tabs\"\n      :key=\"tab\"\n      :class=\"['zero-code-tab-button', { active: activeTab === tab }]\"\n      @click=\"$emit('update:active-tab', tab)\"\n    >\n      {{ getTabLabel(tab) }}\n    </button>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import type { TabType } from '@types'\n\n  // Props定義\n  defineProps<{\n    activeTab: TabType\n  }>()\n\n  // Emits定義\n  defineEmits<{\n    'update:active-tab': [tab: TabType]\n  }>()\n\n  // タブの一覧\n  const tabs = ['editor', 'preview', 'parts', 'images'] as const\n\n  // タブのラベルを取得\n  const getTabLabel = (tab: TabType): string => {\n    const labels: Record<TabType, string> = {\n      editor: 'エディタ',\n      preview: 'ページプレビュー',\n      parts: 'パーツ管理',\n      images: '画像管理',\n    }\n    return labels[tab]\n  }\n</script>\n","import { ref, computed, type Ref, type ComputedRef } from 'vue'\nimport { logger } from '@shared/utils/logger'\nimport { ErrorType } from '@shared/utils/errorHandler'\n\n// 統一されたErrorTypeを再エクスポート\nexport { ErrorType }\n\n// エラー情報の型定義\nexport interface ErrorInfo {\n  id: string\n  type: ErrorType\n  message: string\n  details?: string\n  timestamp: Date\n  context?: Record<string, unknown>\n}\n\n// エラーハンドラーの戻り値型\nexport interface ErrorHandlerReturn {\n  errors: Ref<ErrorInfo[]>\n  hasErrors: ComputedRef<boolean>\n  handleError: (error: Error | string, type?: ErrorType, context?: Record<string, unknown>) => void\n  clearErrors: () => void\n  clearError: (id: string) => void\n  getErrorsByType: (type: ErrorType) => ErrorInfo[]\n  showErrorNotification: (message: string, type?: ErrorType) => void\n}\n\n// エラーハンドラーのComposable\nexport function useErrorHandler(): ErrorHandlerReturn {\n  // エラーの状態管理\n  const errors = ref<ErrorInfo[]>([])\n\n  // エラーがあるかどうかの計算プロパティ\n  const hasErrors = computed(() => errors.value.length > 0)\n\n  // エラーを処理する関数\n  const handleError = (\n    error: Error | string,\n    type: ErrorType = ErrorType.UNKNOWN,\n    context?: Record<string, unknown>\n  ): void => {\n    const errorInfo: ErrorInfo = {\n      id: `error_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n      type,\n      message: error instanceof Error ? error.message : error,\n      details: error instanceof Error ? error.stack : undefined,\n      timestamp: new Date(),\n      context,\n    }\n\n    errors.value.push(errorInfo)\n\n    // コンソールにもエラーを出力（開発環境のみ）\n    if (import.meta.env.DEV) {\n      logger.error(`[${type}] ${errorInfo.message}`, {\n        details: errorInfo.details,\n        context: errorInfo.context,\n      })\n    }\n\n    // 自動的にエラーを削除（10秒後）\n    setTimeout(() => {\n      clearError(errorInfo.id)\n    }, 10000)\n  }\n\n  // 全てのエラーをクリア\n  const clearErrors = (): void => {\n    errors.value = []\n  }\n\n  // 特定のエラーをクリア\n  const clearError = (id: string): void => {\n    const index = errors.value.findIndex(error => error.id === id)\n    if (index !== -1) {\n      errors.value.splice(index, 1)\n    }\n  }\n\n  // 特定のタイプのエラーを取得\n  const getErrorsByType = (type: ErrorType): ErrorInfo[] => {\n    return errors.value.filter(error => error.type === type)\n  }\n\n  // エラー通知を表示\n  const showErrorNotification = (message: string, type: ErrorType = ErrorType.UNKNOWN): void => {\n    handleError(message, type)\n  }\n\n  return {\n    errors,\n    hasErrors,\n    handleError,\n    clearErrors,\n    clearError,\n    getErrorsByType,\n    showErrorNotification,\n  }\n}\n\n// グローバルエラーハンドラーの設定\nexport function setupGlobalErrorHandler(): void {\n  // Vue アプリケーションのエラーハンドラー\n  window.addEventListener('error', event => {\n    const errorHandler = useErrorHandler()\n    errorHandler.handleError(event.error || event.message, ErrorType.COMPONENT, {\n      filename: event.filename,\n      lineno: event.lineno,\n      colno: event.colno,\n    })\n  })\n\n  // Promise の reject されたエラーハンドラー\n  window.addEventListener('unhandledrejection', event => {\n    const errorHandler = useErrorHandler()\n    errorHandler.handleError(event.reason, ErrorType.NETWORK, {\n      promise: event.promise,\n    })\n  })\n}\n\n// エラーバウンダリーのComposable\nexport function useErrorBoundary() {\n  const errorHandler = useErrorHandler()\n\n  // エラーをキャッチして処理\n  const catchError = <T>(\n    asyncFn: () => Promise<T>,\n    errorType: ErrorType = ErrorType.UNKNOWN_ERROR,\n    context?: Record<string, unknown>\n  ): Promise<T | null> => {\n    return asyncFn().catch(error => {\n      errorHandler.handleError(error, errorType, context)\n      return null\n    })\n  }\n\n  // 同期関数のエラーをキャッチ\n  const tryCatch = <T>(\n    fn: () => T,\n    errorType: ErrorType = ErrorType.UNKNOWN_ERROR,\n    context?: Record<string, unknown>\n  ): T | null => {\n    try {\n      return fn()\n    } catch (error) {\n      errorHandler.handleError(error as Error, errorType, context)\n      return null\n    }\n  }\n\n  return {\n    ...errorHandler,\n    catchError,\n    tryCatch,\n  }\n}\n","<template>\n  <div class=\"zero-code-error-boundary\">\n    <!-- エラー通知の表示 -->\n    <div v-if=\"hasErrors\" class=\"zero-code-error-notifications\">\n      <div\n        v-for=\"error in errors\"\n        :key=\"error.id\"\n        class=\"zero-code-error-notification\"\n        :class=\"getErrorClass(error.type)\"\n      >\n        <div class=\"zero-code-error-content\">\n          <div class=\"zero-code-error-message\">\n            <span class=\"zero-code-error-icon\">{{ getErrorIcon(error.type) }}</span>\n            <span class=\"zero-code-error-text\">{{ error.message }}</span>\n          </div>\n          <button class=\"zero-code-error-close\" :title=\"'エラーを閉じる'\" @click=\"clearError(error.id)\">\n            ×\n          </button>\n        </div>\n        <div v-if=\"error.details && showDetails\" class=\"zero-code-error-details\">\n          <pre class=\"zero-code-error-details-pre\">{{ error.details }}</pre>\n        </div>\n      </div>\n    </div>\n\n    <!-- メインコンテンツ -->\n    <div class=\"zero-code-error-boundary-content\">\n      <slot />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { useErrorHandler, ErrorType } from '../../composables/useErrorHandler'\n\n  // Props\n  interface Props {\n    showDetails?: boolean\n  }\n\n  const props = withDefaults(defineProps<Props>(), {\n    showDetails: false,\n  })\n\n  // エラーハンドラーの使用\n  const { errors, hasErrors, clearError } = useErrorHandler()\n\n  // エラータイプに応じたCSSクラスを取得\n  const getErrorClass = (type: ErrorType): string => {\n    switch (type) {\n      case ErrorType.NETWORK_ERROR:\n        return 'error-network'\n      case ErrorType.VALIDATION_ERROR:\n        return 'error-validation'\n      case ErrorType.PERMISSION_ERROR:\n        return 'error-permission'\n      case ErrorType.COMPONENT_ERROR:\n        return 'error-component'\n      case ErrorType.IMAGE_LOAD_FAILED:\n        return 'error-image'\n      case ErrorType.TEMPLATE_PARSE_ERROR:\n        return 'error-template'\n      default:\n        return 'error-unknown'\n    }\n  }\n\n  // エラータイプに応じたアイコンを取得\n  const getErrorIcon = (type: ErrorType): string => {\n    switch (type) {\n      case ErrorType.NETWORK_ERROR:\n        return '🌐'\n      case ErrorType.VALIDATION_ERROR:\n        return '⚠️'\n      case ErrorType.PERMISSION_ERROR:\n        return '🔒'\n      case ErrorType.COMPONENT_ERROR:\n        return '🧩'\n      case ErrorType.IMAGE_LOAD_FAILED:\n        return '🖼️'\n      case ErrorType.TEMPLATE_PARSE_ERROR:\n        return '📄'\n      default:\n        return '❌'\n    }\n  }\n</script>\n","<template>\n  <!-- Teleportを使わずに直接レンダリング -->\n  <div\n    v-if=\"show\"\n    class=\"zero-code-rich-text-toolbar\"\n    :style=\"{\n      top: position.top + 'px',\n      left: position.left + 'px',\n    }\"\n  >\n    <div class=\"zero-code-toolbar-content\">\n      <!-- 書式設定ボタン -->\n      <div class=\"zero-code-toolbar-section\">\n        <template v-for=\"(action, index) in actions\" :key=\"index\">\n          <div\n            v-if=\"action && action.name === 'separator'\"\n            class=\"zero-code-toolbar-separator\"\n          />\n          <button\n            v-else-if=\"action\"\n            :class=\"['zero-code-toolbar-btn', { active: action.active, disabled: !isEditing }]\"\n            :title=\"action.title || ''\"\n            :disabled=\"!isEditing\"\n            tabindex=\"-1\"\n            @click=\"executeCommand(action.command || '')\"\n            @mousedown.prevent.stop\n          >\n            {{ action.icon || '' }}\n          </button>\n        </template>\n      </div>\n\n      <!-- 区切り線 -->\n      <div class=\"zero-code-toolbar-separator\" />\n\n      <!-- 保存・キャンセルボタン -->\n      <div class=\"zero-code-toolbar-section\">\n        <button\n          class=\"zero-code-toolbar-btn zero-code-save-btn\"\n          title=\"保存 (Ctrl+S)\"\n          tabindex=\"-1\"\n          @click=\"handleSave\"\n          @mousedown.prevent.stop\n        >\n          ✓\n        </button>\n        <button\n          class=\"zero-code-toolbar-btn zero-code-cancel-btn\"\n          title=\"キャンセル (Esc)\"\n          tabindex=\"-1\"\n          @click=\"handleCancel\"\n          @mousedown.prevent.stop\n        >\n          ✕\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { watch, onMounted } from 'vue'\n  import { logger } from '@shared/utils/logger'\n\n  // Props\n  interface Props {\n    show: boolean\n    position: { top: number; left: number }\n    actions: any[]\n    editingState: any\n    isEditing: boolean\n  }\n\n  const props = defineProps<Props>()\n\n  // デバッグ用\n  onMounted(() => {\n    logger.debug('🔧 RichTextToolbar mounted')\n  })\n\n  // propsの変化を監視\n  watch(\n    () => props.show,\n    newShow => {\n      logger.debug('🔧 RichTextToolbar show changed:', newShow)\n    },\n    { immediate: true }\n  )\n\n  watch(\n    () => props.position,\n    newPosition => {\n      logger.debug('🔧 RichTextToolbar position changed:', newPosition)\n    },\n    { deep: true, immediate: true }\n  )\n\n  watch(\n    () => props.actions,\n    newActions => {\n      logger.debug('🔧 RichTextToolbar actions changed:', newActions?.length || 0)\n    },\n    { immediate: true }\n  )\n\n  // Emits\n  const emit = defineEmits<{\n    executeCommand: [command: string]\n    save: []\n    cancel: []\n  }>()\n\n  // コマンド実行\n  const executeCommand = (command: string) => {\n    logger.debug('🔧 ツールバーコマンド実行:', command)\n    emit('executeCommand', command)\n  }\n\n  // 保存\n  const handleSave = () => {\n    emit('save')\n  }\n\n  // キャンセル\n  const handleCancel = () => {\n    emit('cancel')\n  }\n</script>\n\n","<template>\n  <div v-if=\"visible\" class=\"zero-code-modal-overlay\" @click=\"closeModal\">\n    <div class=\"zero-code-modal-content zero-code-image-selector-modal\" @click.stop>\n      <!-- ヘッダー -->\n      <div class=\"zero-code-modal-header\">\n        <h3 class=\"zero-code-modal-title\">画像を選択</h3>\n        <button class=\"zero-code-close-button\" title=\"閉じる\" @click=\"closeModal\">\n          ✕\n        </button>\n      </div>\n\n      <!-- カテゴリタブ -->\n      <div class=\"zero-code-tab-navigation\">\n        <button \n          class=\"zero-code-tab-button\"\n          :class=\"{ active: selectedCategory === 'common' }\"\n          @click=\"selectedCategory = 'common'\"\n        >\n          共通画像 ({{ (commonImages || []).length }})\n        </button>\n        <button \n          class=\"zero-code-tab-button\"\n          :class=\"{ active: selectedCategory === 'individual' }\"\n          @click=\"selectedCategory = 'individual'\"\n        >\n          個別画像 ({{ (individualImages || []).length }})\n        </button>\n      </div>\n\n      <!-- 検索フィルター -->\n      <div class=\"zero-code-search-section\">\n        <input\n          v-model=\"searchQuery\"\n          type=\"text\"\n          placeholder=\"画像を検索...\"\n          class=\"zero-code-search-input\"\n        >\n      </div>\n\n      <!-- 画像グリッド -->\n      <div class=\"zero-code-modal-body\">\n        <div v-if=\"filteredImages.length === 0\" class=\"zero-code-empty-state\">\n          <p>該当する画像がありません</p>\n        </div>\n        \n        <div v-else class=\"zero-code-image-grid\">\n          <div\n            v-for=\"image in filteredImages\"\n            :key=\"image.id\"\n            class=\"zero-code-image-item\"\n            :class=\"{ selected: selectedImage?.id === image.id }\"\n            :title=\"selectedImage?.id === image.id ? 'クリックで選択解除' : 'クリックで選択'\"\n            @click=\"selectImage(image)\"\n          >\n            <div class=\"zero-code-image-preview\">\n              <img\n                :src=\"getImageSrc(image)\"\n                :alt=\"getImageAlt(image)\"\n                loading=\"lazy\"\n                @error=\"handleImageError($event, image)\"\n              >\n              <div v-if=\"isImageUpdated(image)\" class=\"zero-code-img-updated-badge\">\n                差し替え済み\n              </div>\n              <div \n                v-if=\"selectedImage?.id === image.id\" \n                class=\"zero-code-selection-indicator\"\n              >\n                <span class=\"zero-code-check-icon\">✓</span>\n              </div>\n            </div>\n            <div class=\"zero-code-image-info\">\n              <div class=\"zero-code-image-name\">{{ image.name }}</div>\n              <div class=\"zero-code-image-alt\">{{ image.alt }}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- プレビュー・操作エリア -->\n      <div v-if=\"selectedImage\" class=\"zero-code-image-preview-section\">\n        <div class=\"zero-code-preview-header\">\n          <h4 class=\"zero-code-preview-title\">選択中の画像</h4>\n          <button \n            class=\"zero-code-clear-selection-btn\" \n            title=\"選択を解除\"\n            @click=\"clearSelection\"\n          >\n            <span class=\"zero-code-clear-icon\">✕</span>\n            選択解除\n          </button>\n        </div>\n        <div class=\"zero-code-selected-preview\">\n          <img :src=\"getImageSrc(selectedImage)\" :alt=\"getImageAlt(selectedImage)\">\n          <div class=\"zero-code-selected-info\">\n            <div class=\"zero-code-info-item\">\n              <label class=\"zero-code-info-label\">ファイル名</label>\n              <strong>{{ selectedImage.name }}</strong>\n            </div>\n            <div class=\"zero-code-info-item\">\n              <label class=\"zero-code-info-label\">説明</label>\n              <p>{{ selectedImage.alt || '説明なし' }}</p>\n            </div>\n            <div class=\"zero-code-info-item\">\n              <label class=\"zero-code-info-label\">URL</label>\n              <code>{{ selectedImage.url }}</code>\n            </div>\n            <div v-if=\"isImageUpdated(selectedImage)\" class=\"zero-code-info-item\">\n              <label class=\"zero-code-info-label\">状態</label>\n              <span class=\"zero-code-status-badge\">差し替え済み</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- フッター -->\n      <div class=\"zero-code-modal-footer\">\n        <button class=\"zero-code-btn zero-code-btn-secondary\" @click=\"closeModal\">\n          キャンセル\n        </button>\n        <button \n          class=\"zero-code-btn zero-code-btn-primary\"\n          :disabled=\"!selectedImage\"\n          @click=\"applySelection\"\n        >\n          {{ selectedImage && isImageUpdated(selectedImage) ? '差し替え画像を適用' : '選択した画像を適用' }}\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, watch } from 'vue'\nimport type { SampleImage } from '../../data/types'\nimport { useImageDisplay } from '../../composables/useImageDisplay'\n\n// Props\ninterface Props {\n  visible: boolean\n  commonImages?: SampleImage[]\n  individualImages?: SampleImage[]\n  currentValue?: string\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  commonImages: () => [],\n  individualImages: () => []\n})\n\n// Emits\ninterface Emits {\n  (e: 'close'): void\n  (e: 'select', imageUrl: string, imageAlt: string): void\n}\n\nconst emit = defineEmits<Emits>()\n\n// 画像表示用コンポーザブル\nconst { getImageSrc, getImageAlt, isImageUpdated } = useImageDisplay()\n\n// State\nconst selectedCategory = ref<'common' | 'individual'>('common')\nconst searchQuery = ref('')\nconst selectedImage = ref<SampleImage | null>(null)\n\n// Computed\nconst currentImages = computed(() => {\n  return selectedCategory.value === 'common' \n    ? (props.commonImages || [])\n    : (props.individualImages || [])\n})\n\nconst filteredImages = computed(() => {\n  const query = searchQuery.value.toLowerCase()\n  if (!query) return currentImages.value\n  \n  return currentImages.value.filter(image => \n    image.name.toLowerCase().includes(query) ||\n    (image.alt && image.alt.toLowerCase().includes(query)) ||\n    image.url.toLowerCase().includes(query)\n  )\n})\n\n// Methods\nconst closeModal = () => {\n  emit('close')\n}\n\nconst selectImage = (image: SampleImage) => {\n  // 同じ画像を再度クリックした場合は選択を解除\n  if (selectedImage.value?.id === image.id) {\n    selectedImage.value = null\n  } else {\n    selectedImage.value = image\n  }\n}\n\nconst clearSelection = () => {\n  selectedImage.value = null\n}\n\nconst applySelection = () => {\n  if (selectedImage.value) {\n    // 通常のURLを選択し、かつその画像がBase64で差し替えられている場合、\n    // 元のURLを返すことでリセット処理をトリガー\n    const hasBase64 = !!(selectedImage.value.fileData?.base64 && selectedImage.value.fileData.base64.trim() !== '')\n    \n    if (hasBase64) {\n      // Base64差し替え済み画像：Base64 URLを返す\n      const resolvedUrl = getImageSrc(selectedImage.value)\n      const resolvedAlt = getImageAlt(selectedImage.value)\n      emit('select', resolvedUrl, resolvedAlt)\n    } else {\n      // オリジナル画像：元のURLを返す（リセット処理がトリガーされる）\n      emit('select', selectedImage.value.url, selectedImage.value.alt || '')\n    }\n    closeModal()\n  }\n}\n\nconst handleImageError = (event: Event, image: SampleImage) => {\n  const target = event.target as HTMLImageElement\n  target.src = '/img/placeholder.jpg' // フォールバック画像\n  console.warn(`画像読み込みエラー: ${image.url}`)\n}\n\n// Watchers\nwatch(() => props.visible, (newVisible) => {\n  if (newVisible) {\n    // モーダル表示時に現在の値に対応する画像を選択状態にする\n    if (props.currentValue) {\n      const allImages = [...(props.commonImages || []), ...(props.individualImages || [])]\n      const currentImage = allImages.find(img => img.url === props.currentValue)\n      if (currentImage) {\n        selectedImage.value = currentImage\n        selectedCategory.value = currentImage.category as 'common' | 'individual'\n      }\n    }\n    // 検索をリセット\n    searchQuery.value = ''\n  } else {\n    // モーダル非表示時にリセット\n    selectedImage.value = null\n  }\n})\n\nwatch(selectedCategory, () => {\n  // カテゴリ変更時に選択をリセット\n  selectedImage.value = null\n})\n</script>","<template>\n  <ErrorBoundary>\n    <div :class=\"`zero-code editor-container ${componentInstanceId}`\">\n      <!-- タブナビゲーション -->\n      <TabNavigation :active-tab=\"activeTab || 'editor'\" @update:active-tab=\"switchToTab\" />\n\n      <!-- リッチテキストツールバー（最上位に配置） -->\n      <RichTextToolbar\n        :show=\"showRichTextToolbar\"\n        :position=\"richTextPosition\"\n        :actions=\"richTextEditor.actions\"\n        :editing-state=\"richTextEditor.editingState\"\n        :is-editing=\"showRichTextToolbar\"\n        @execute-command=\"richTextEditor.executeCommand\"\n        @save=\"richTextEditor.stopEdit(true)\"\n        @cancel=\"richTextEditor.stopEdit(false)\"\n      />\n\n      <div class=\"zero-code-editor-content\">\n        <!-- エディタタブ -->\n        <EditorMainPanel\n          v-if=\"activeTab === 'editor'\"\n          :data-tab=\"dataTab\"\n          :editable-page-data=\"editablePageData\"\n          :local-parts=\"localParts\"\n          :local-common-parts=\"editor.state.localCommonParts.value\"\n          :local-individual-parts=\"editor.state.localIndividualParts.value\"\n          :parts=\"props.parts || []\"\n          :common-images=\"commonImages\"\n          :individual-images=\"individualImages\"\n          :show-part-selector=\"showPartSelector\"\n          :show-nested-part-selector=\"showNestedPartSelector\"\n          :show-editor=\"showEditor\"\n          :selected-component=\"selectedComponent\"\n          :render-component-with-nested=\"renderComponentWithNested\"\n          :get-field-info=\"getFieldInfoWrapper\"\n          :should-show-basic-field=\"shouldShowBasicFieldWrapper\"\n          :should-show-array-field=\"shouldShowArrayFieldWrapper\"\n          :should-show-array-item-field=\"shouldShowArrayItemFieldWrapper\"\n          :get-input-type=\"getInputTypeWrapper\"\n          :is-checkbox-checked=\"isCheckboxCheckedWrapper\"\n          :parts-data=\"localParts && localParts.length > 0 ? localParts : props.parts || []\"\n          :is-text-editing=\"isTextEditing\"\n          @update:data-tab=\"value => (dataTab = value)\"\n          @add-part=\"openPartSelector\"\n          @edit-part=\"openEditor\"\n          @delete-part=\"deletePart\"\n          @reorder-parts=\"reorderParts\"\n          @close-part-selector=\"closePartSelector\"\n          @select-part=\"selectPart\"\n          @close-nested-part-selector=\"closeNestedPartSelector\"\n          @select-nested-part=\"selectNestedPart\"\n          @close-editor=\"closeEditor\"\n          @update-editor-value=\"handleUpdateEditorValue\"\n        />\n\n        <!-- パーツ管理タブ -->\n        <PartsManagementPanel\n          v-if=\"activeTab === 'parts'\"\n          :local-parts=\"localParts\"\n          :local-common-parts=\"editor.state.localCommonParts.value\"\n          :local-individual-parts=\"editor.state.localIndividualParts.value\"\n          :show-part-registration=\"showPartRegistration\"\n          :existing-part-types=\"existingPartTypes\"\n          :editing-part=\"editingPart\"\n          :render-part-preview=\"renderPartPreview\"\n          @update-parts=\"updatePartsData\"\n          @show-registration=\"openPartRegistration\"\n          @edit-part=\"openPartEditor\"\n          @delete-part=\"deletePartFromManager\"\n          @close-registration=\"closePartRegistration\"\n          @save-part=\"saveNewPart\"\n        />\n\n        <!-- ページプレビュータブ -->\n        <PreviewPanel\n          v-if=\"activeTab === 'preview'\"\n          :editable-page-data=\"editablePageData\"\n          :local-parts=\"localParts\"\n          :parts=\"props.parts || []\"\n          :common-images=\"commonImages\"\n          :individual-images=\"individualImages\"\n        />\n\n        <!-- 画像管理タブ -->\n        <ImageManagementPanel\n          v-if=\"activeTab === 'images'\"\n          :common-images=\"commonImages\"\n          :individual-images=\"individualImages\"\n          @update-common-images=\"updateCommonImages\"\n          @update-individual-images=\"updateIndividualImages\"\n          @send-common-images-data=\"sendCommonImagesData\"\n          @send-individual-images-data=\"sendIndividualImagesData\"\n        />\n      </div>\n\n      <!-- 送信ボタン群 -->\n      <div class=\"zero-code-button-section\">\n        <button class=\"zero-code-send-btn zero-code-page-btn\" @click=\"handleDataDisplay('page')\">Pageデータを表示</button>\n        <button class=\"zero-code-send-btn zero-code-common-parts-btn\" @click=\"handleDataDisplay('commonParts')\">共通Partsデータを表示</button>\n        <button class=\"zero-code-send-btn zero-code-individual-parts-btn\" @click=\"handleDataDisplay('individualParts')\">個別Partsデータを表示</button>\n        <button class=\"zero-code-send-btn zero-code-common-images-btn\" @click=\"handleDataDisplay('commonImages')\">\n          共通画像データを表示\n        </button>\n        <button class=\"zero-code-send-btn zero-code-individual-images-btn\" @click=\"handleDataDisplay('individualImages')\">\n          個別画像データを表示\n        </button>\n        <button class=\"zero-code-send-btn zero-code-reset-btn\" @click=\"resetPageData\">リセット</button>\n      </div>\n\n      <!-- データ表示エリア -->\n      <div v-if=\"displayedData\" class=\"zero-code-data-display-area\">\n        <div class=\"zero-code-data-display-header\">\n          <h4>{{ displayedDataTitle }}</h4>\n          <button class=\"zero-code-close-button\" @click=\"closeDataDisplay\">✕</button>\n        </div>\n        <div class=\"zero-code-data-display-content\">\n          <pre class=\"zero-code-data-display-pre\">{{ displayedDataFormatted }}</pre>\n        </div>\n        <div class=\"zero-code-data-display-footer\">\n          <button class=\"zero-code-btn zero-code-btn-secondary\" @click=\"copyDataToClipboard\">クリップボードにコピー</button>\n          <button class=\"zero-code-btn zero-code-btn-primary\" @click=\"sendCurrentData\">このデータを送信</button>\n        </div>\n      </div>\n\n      <!-- 画像選択モーダル（全体で使用） -->\n      <ImageSelectorModal\n        :visible=\"showGlobalImageSelector\"\n        :common-images=\"commonImages as any\"\n        :individual-images=\"individualImages as any\"\n        :current-value=\"currentGlobalImageValue\"\n        @close=\"closeGlobalImageSelector\"\n        @select=\"onGlobalImageSelected\"\n      />\n    </div>\n  </ErrorBoundary>\n</template>\n\n<script setup lang=\"ts\">\n  import { ref, nextTick, watch, onMounted, onUnmounted, computed, reactive, triggerRef } from 'vue'\n\n  // Webコンポーネント用CSS\n  import './styles/zero-code.css'\n\n  // パネルコンポーネント\n  import EditorMainPanel from './components/panels/EditorMainPanel.vue'\n  import PartsManagementPanel from './components/panels/PartsManagementPanel.vue'\n  import PreviewPanel from './components/panels/PreviewPanel.vue'\n  import ImageManagementPanel from './components/panels/ImageManagementPanel.vue'\n\n  // コンポーザブル\n  import { useEditorTabs } from './composables/useEditorTabs'\n  import { useZeroCode } from './composables/useZeroCode'\n  import { useComponentUtils } from './composables/useComponentUtils'\n  import { useCollapsibleItems } from './composables/useCollapsibleItems'\n  import { useDataLoader } from './composables/useDataLoader'\n  import { useImageDisplay } from './composables/useImageDisplay'\n\n  // 共通コンポーネント\n  import TabNavigation from '@shared/components/TabNavigation.vue'\n  import ErrorBoundary from '@shared/components/ErrorBoundary.vue'\n  import RichTextToolbar from './components/editor/RichTextToolbar.vue'\n  import ImageSelectorModal from './components/editor/ImageSelectorModal.vue'\n\n  // ユーティリティ\n  import { logger } from '@shared/utils/logger'\n  import { cleanupHtmlContent } from '@shared/utils/htmlHelpers'\n  import { editorEventBus } from '@shared/utils/eventBus'\n\n  // 型定義\n  import type { Component, PartSection, ImageData } from '@types'\n\n  // Props定義\n  export interface Props {\n    parts?: PartSection[]\n    commonParts?: PartSection[]\n    individualParts?: PartSection[]\n    page?: Component[]\n    commonImages?: ImageData[]\n    individualImages?: ImageData[]\n  }\n\n  const props = withDefaults(defineProps<Props>(), {\n    parts: () => [],\n    commonParts: () => [],\n    individualParts: () => [],\n    page: () => [],\n    commonImages: () => [],\n    individualImages: () => [],\n  })\n\n  // Emits定義\n  const emit = defineEmits<{\n    'update:parts': [parts: PartSection[]]\n    'update:commonParts': [parts: PartSection[]]\n    'update:individualParts': [parts: PartSection[]]\n    'update:page': [page: Component[]]\n    'update:commonImages': [images: ImageData[]]\n    'update:individualImages': [images: ImageData[]]\n  }>()\n\n  // コンポーネント固有ID（インスタンス分離用）\n  const componentInstanceId = ref(`zero-code-${Math.random().toString(36).substr(2, 9)}`)\n  \n  // データローダーの初期化（最適化されたデータ管理）\n  const dataLoader = useDataLoader()\n  \n  // 画像表示用コンポーザブル\n  const { getImageSrc } = useImageDisplay()\n  \n  // 全画像データの統合\n  const allImages = computed(() => [...commonImages.value, ...individualImages.value])\n  \n  // HTMLの画像URLを解決する関数（計算プロパティとして実装）\n  const resolveImageUrlsInHTML = (html: string): string => {\n    if (!html) return html\n    \n    // allImages.valueの変更を検知するため、ここでアクセス\n    const currentImages = allImages.value\n    if (currentImages.length === 0) return html\n\n    let processedHtml = html\n    \n    // img要素のsrc属性を置換\n    processedHtml = processedHtml.replace(\n      /<img([^>]*?)src=[\"']([^\"']+)[\"']([^>]*?)>/gi,\n      (match, beforeSrc, originalSrc, afterSrc) => {\n        // 画像IDまたはURLを使って画像データを検索\n        const imageData = currentImages.find(img => {\n          // 完全一致チェック\n          if (img.id === originalSrc || img.url === originalSrc || img.name === originalSrc) {\n            return true\n          }\n          \n          // URLパスの一致チェック（例: /img/hero_image.jpg と hero_image.jpg）\n          if (originalSrc.endsWith('/' + img.name) || img.url.endsWith(originalSrc)) {\n            return true\n          }\n          \n          // ファイル名部分のマッチング\n          const originalFileName = originalSrc.split('/').pop()\n          if (originalFileName === img.name) {\n            return true\n          }\n          \n          return false\n        })\n        \n        if (imageData) {\n          const resolvedSrc = getImageSrc(imageData)\n          return `<img${beforeSrc}src=\"${resolvedSrc}\"${afterSrc}>`\n        }\n        \n        return match\n      }\n    )\n\n    return processedHtml\n  }\n  \n  // 画像を元の状態にリセットする関数\n  const resetImageToOriginal = (imageId: string) => {\n    // 共通画像をチェック\n    const commonImageIndex = commonImages.value.findIndex(img => img.id === imageId)\n    if (commonImageIndex !== -1) {\n      const updatedImages = [...commonImages.value]\n      updatedImages[commonImageIndex] = {\n        ...updatedImages[commonImageIndex],\n        fileData: {\n          ...updatedImages[commonImageIndex].fileData,\n          base64: '' // Base64データをクリア\n        }\n      }\n      updateCommonImages(updatedImages)\n      return\n    }\n    \n    // 個別画像をチェック\n    const individualImageIndex = individualImages.value.findIndex(img => img.id === imageId)\n    if (individualImageIndex !== -1) {\n      const updatedImages = [...individualImages.value]\n      updatedImages[individualImageIndex] = {\n        ...updatedImages[individualImageIndex],\n        fileData: {\n          ...updatedImages[individualImageIndex].fileData,\n          base64: '' // Base64データをクリア\n        }\n      }\n      updateIndividualImages(updatedImages)\n    }\n  }\n  \n  // データローダー初期化（非同期）\n  onMounted(async () => {\n    try {\n      // 本番ビルドでは内部サンプルデータを読み込まない\n      const shouldLoadSampleData = process.env.NODE_ENV === 'development' || process.env.LOAD_SAMPLE_DATA === 'true'\n      \n      if (shouldLoadSampleData) {\n        logger.info('🚀 開発モード：サンプルデータを読み込み中...')\n        await dataLoader.initialize()\n        \n        // データローダーから取得したパーツをlocalPartsに設定\n        if (dataLoader.combinedParts.value && dataLoader.combinedParts.value.length > 0) {\n          localParts.value = dataLoader.combinedParts.value\n          logger.success(`✅ パーツデータ設定完了 (${dataLoader.combinedParts.value.length}件)`)\n        } else {\n          logger.warn('⚠️ パーツデータが見つかりません')\n        }\n        \n        // ページデータも設定\n        if (dataLoader.defaultPageData.value && dataLoader.defaultPageData.value.length > 0) {\n          editablePageData.value = dataLoader.defaultPageData.value\n          logger.success(`✅ ページデータ設定完了 (${dataLoader.defaultPageData.value.length}件)`)\n        } else {\n          logger.warn('⚠️ ページデータが見つかりません')\n        }\n        \n        // 画像データも設定\n        if (dataLoader.images.value) {\n          commonImages.value = dataLoader.images.value.common as any[]\n          individualImages.value = dataLoader.images.value.individual as any[]\n          logger.success(`✅ 画像データ設定完了 (共通:${dataLoader.images.value.common.length}件, 個別:${dataLoader.images.value.individual.length}件)`)\n        } else {\n          logger.warn('⚠️ 画像データが見つかりません')\n        }\n        \n        logger.success('✅ データローダー初期化完了')\n      } else {\n        logger.info('🏭 本番モード：外部データ待機中（内部サンプルデータは読み込みません）')\n        // 本番モードでは空の状態で開始\n        localParts.value = []\n        editablePageData.value = []\n        commonImages.value = []\n        individualImages.value = []\n        logger.success('✅ 本番モード初期化完了（空の状態）')\n      }\n      \n      // 初期化完了イベントを発火（index.htmlのタイムアウト防止）\n      nextTick(() => {\n        const event = new CustomEvent('zero-code-initialized', {\n          detail: {\n            partsCount: localParts.value?.length || 0,\n            pageCount: editablePageData.value?.length || 0\n          }\n        })\n        document.dispatchEvent(event)\n        logger.debug('🎉 zero-code-initialized イベントを発火')\n      })\n      \n    } catch (error) {\n      logger.error('❌ データローダー初期化失敗:', error)\n    }\n  })\n\n  // エディターコアの初期化\n  const editor = useZeroCode(props, emit)\n\n  // エディター状態の取得\n  const selectedComponent = editor.state.selectedComponent\n  const selectedComponentIndex = editor.state.selectedComponentIndex\n  const editablePageData = editor.state.editablePageData\n  const localParts = editor.state.localParts\n  const dataTab = editor.state.dataTab\n\n  // リッチテキストエディター（シンプル実装）\n  const showRichTextToolbar = ref(false)\n  const richTextPosition = ref({ top: 0, left: 0 })\n  const currentEditingElement = ref<HTMLElement | null>(null)\n  const originalContent = ref('')\n  const currentComponentId = ref('')\n  const currentParamName = ref('')\n\n  // テキスト編集中かどうかの状態（ドラッグ無効化用）\n  const isTextEditing = computed(() => currentEditingElement.value !== null)\n\n  // 画像選択モーダル関連\n  const showGlobalImageSelector = ref(false)\n  const currentGlobalImageValue = ref('')\n  const currentGlobalImageComponent = ref<Component | null>(null)\n  const currentGlobalImageField = ref('')\n\n  const richTextEditor = reactive({\n    showToolbar: computed(() => showRichTextToolbar.value),\n    position: computed(() => richTextPosition.value),\n    actions: [\n      { name: 'bold', icon: 'B', title: '太字', command: 'bold' },\n      { name: 'italic', icon: 'I', title: '斜体', command: 'italic' },\n      { name: 'underline', icon: 'U', title: '下線', command: 'underline' },\n      { name: 'separator' },\n      { name: 'link', icon: '🔗', title: 'リンク', command: 'link' },\n    ],\n    editingState: {},\n    executeCommand: (command: string) => {\n      logger.debug('リッチテキストコマンド実行:', command)\n      executeRichTextCommand(command)\n    },\n    stopEdit: (save: boolean) => {\n      logger.debug('リッチテキスト編集終了:', save)\n      stopRichTextEdit(save)\n    },\n  })\n\n  // リッチテキストコマンド実行（選択範囲保護版）\n  const executeRichTextCommand = (command: string) => {\n    if (!currentEditingElement.value) return\n\n    logger.debug('🔧 書式設定コマンド実行:', command)\n\n    try {\n      if (command === 'link') {\n        // リンク作成の特別処理\n        const url = prompt('リンクのURLを入力してください:', 'https://')\n        if (url && url.trim()) {\n          const success = document.execCommand('createLink', false, url)\n          logger.debug('🔧 リンク作成:', success ? '成功' : '失敗')\n        }\n      } else {\n        // 通常の書式設定コマンド\n        const success = document.execCommand(command, false, undefined)\n        logger.debug('🔧 書式設定:', command, success ? '成功' : '失敗')\n      }\n\n      // データ更新は一時的に無効化（選択範囲保護のため）\n      logger.debug('🔧 データ更新をスキップ（選択範囲保護）')\n      // updateComponentDataSync()\n    } catch (error) {\n      logger.error('🚨 execCommandエラー:', error)\n    }\n  }\n\n\n  // コンポーネントデータの同期更新（HTMLクリーンアップ付き）\n  const updateComponentDataSync = () => {\n    if (!currentEditingElement.value || !currentComponentId.value || !currentParamName.value) return\n\n    const rawContent = currentEditingElement.value.innerHTML\n    const cleanedContent = cleanupHtmlContent(rawContent)\n\n    // z-for以外の通常編集のログは省略\n\n    // editablePageDataから該当するコンポーネントを検索して更新（再帰的検索）\n    const updateComponent = (components: Component[]): boolean => {\n      // z-for配列アイテムの特殊ID形式をチェック（ネスト対応版）\n      \n      // IDを分解してz-for構造を特定（既知の配列名パターンを使用）\n      const parseZForId = (id: string) => {\n        const parts = id.split('_')\n        \n        if (parts.length < 4) return null\n        \n        // 最後の要素がparamName\n        const paramName = parts[parts.length - 1]\n        \n        // 最後から2番目が数字（index）かチェック\n        const lastIndex = parts[parts.length - 2]\n        if (!/^\\d+$/.test(lastIndex)) return null\n        \n        // 既知の配列名パターンをチェック\n        const knownArrayNames = ['outer_items', 'inner_items', 'items', 'categories', 'tags', 'list']\n        \n        // 配列名を特定\n        for (const arrayName of knownArrayNames) {\n          const targetPattern = `_${arrayName}_${lastIndex}_${paramName}`\n          if (id.endsWith(targetPattern)) {\n            const parentId = id.slice(0, -(targetPattern.length))\n            return {\n              parentId,\n              arrayName,\n              arrayIndex: parseInt(lastIndex),\n              paramName\n            }\n          }\n        }\n        \n        return null\n      }\n\n      const zForInfo = parseZForId(currentComponentId.value)\n      \n      // z-forアイテム編集の検証ログ\n      if (zForInfo) {\n        console.log(`🔧 [Z-FOR編集] ID解析成功:`, {\n          originalId: currentComponentId.value,\n          parentId: zForInfo.parentId,\n          arrayName: zForInfo.arrayName,\n          arrayIndex: zForInfo.arrayIndex,\n          paramName: zForInfo.paramName,\n          newValue: cleanedContent\n        })\n      }\n\n      if (zForInfo) {\n        const { parentId, arrayName, arrayIndex, paramName } = zForInfo\n\n        // 再帰的にコンポーネントと配列アイテムを検索\n        const findTargetArrayItem = (components: Component[], targetParentId: string): any => {\n          for (const comp of components) {\n            // 直接マッチ\n            if (comp.id === targetParentId) {\n              if (Array.isArray(comp[arrayName])) {\n                return comp[arrayName][arrayIndex]\n              }\n            }\n            \n            // nested_parts内を検索\n            if (comp.nested_parts && Array.isArray(comp.nested_parts)) {\n              const found = findTargetArrayItem(comp.nested_parts, targetParentId)\n              if (found) return found\n            }\n            \n            // 全配列プロパティ内の配列アイテムを検索（z-for配列含む）\n            for (const [propKey, propValue] of Object.entries(comp)) {\n              if (Array.isArray(propValue) && propKey !== 'nested_parts') {\n                // 配列アイテムが親IDになっている可能性をチェック\n                for (let i = 0; i < propValue.length; i++) {\n                  const arrayItem = propValue[i]\n                  if (arrayItem && typeof arrayItem === 'object') {\n                    // 配列アイテムIDを構築してチェック\n                    const itemId = `${comp.id}_${propKey}_${i}`\n                    if (itemId === targetParentId) {\n                      if (Array.isArray(arrayItem[arrayName])) {\n                        return arrayItem[arrayName][arrayIndex]\n                      }\n                    }\n                    \n                    // 配列アイテム内のネストコンポーネントも検索\n                    for (const [slotKey, slotValue] of Object.entries(arrayItem)) {\n                      if (Array.isArray(slotValue)) {\n                        const found = findTargetArrayItem(slotValue, targetParentId)\n                        if (found) return found\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n          return null\n        }\n\n        const targetArrayItem = findTargetArrayItem(components, parentId)\n        if (targetArrayItem && typeof targetArrayItem === 'object') {\n          targetArrayItem[paramName] = cleanedContent\n          console.log(`✅ [Z-FOR編集] 更新成功:`, {\n            path: `${parentId}.${arrayName}[${arrayIndex}].${paramName}`,\n            oldValue: targetArrayItem[paramName],\n            newValue: cleanedContent\n          })\n          return true\n        }\n        \n        console.log(`❌ [Z-FOR編集] 配列アイテムが見つからない:`, {\n          targetId: currentComponentId.value,\n          searchedParentId: parentId\n        })\n        return false\n      }\n\n      for (const component of components) {\n        if (component.id === currentComponentId.value) {\n          ;(component as any)[currentParamName.value] = cleanedContent\n          return true\n        }\n\n        // nested_parts内を再帰的に検索\n        if (component.nested_parts && Array.isArray(component.nested_parts)) {\n          logger.debug(`🔍 nested_parts内を検索: ${component.id}`)\n          if (updateComponent(component.nested_parts)) {\n            return true\n          }\n        }\n\n        // 全てのプロパティから配列を検索（z-for配列内も含む）\n        for (const [key, value] of Object.entries(component)) {\n          if (Array.isArray(value) && key !== 'nested_parts') {\n            logger.debug(`🔍 配列プロパティ検索: ${component.id}.${key}`)\n            // 配列アイテム内のnested_parts/nested_slots内を検索\n            for (const arrayItem of value) {\n              if (arrayItem && typeof arrayItem === 'object') {\n                if ((arrayItem as any).id === currentComponentId.value) {\n                  ;(arrayItem as any)[currentParamName.value] = cleanedContent\n                  logger.debug('🔧 配列内コンポーネント更新完了:', arrayItem)\n                  return true\n                }\n                // 配列アイテム内の全スロットを検索\n                for (const [slotKey, slotValue] of Object.entries(arrayItem)) {\n                  if (Array.isArray(slotValue)) {\n                    logger.debug(`🔍 スロット検索: ${component.id}.${key}[].${slotKey}`)\n                    if (updateComponent(slotValue)) {\n                      return true\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      logger.debug(`❌ コンポーネントが見つかりませんでした: ${currentComponentId.value}`)\n      return false\n    }\n\n    if (updateComponent(editablePageData.value)) {\n      // 編集要素のHTMLもクリーンアップ（表示の一貫性のため）\n      if (currentEditingElement.value && rawContent !== cleanedContent) {\n        currentEditingElement.value.innerHTML = cleanedContent\n      }\n\n      // Vue.jsリアクティビティを強制的にトリガー（triggerRefで確実に更新）\n      nextTick(() => {\n        const deepCopy = JSON.parse(JSON.stringify(editablePageData.value))\n        editablePageData.value = deepCopy\n        \n        // triggerRefでリアクティビティを強制実行\n        triggerRef(editablePageData)\n        \n        nextTick(() => {\n          emit('update:page', editablePageData.value)\n          console.log('🔄 [Z-FOR編集] triggerRef強制更新完了:', {\n            dataLength: editablePageData.value.length,\n            hasUpdatedContent: JSON.stringify(editablePageData.value).includes('あああ')\n          })\n        })\n      })\n    }\n  }\n\n  // リッチテキスト編集終了\n  const stopRichTextEdit = (save: boolean) => {\n    if (!currentEditingElement.value) return\n\n    logger.debug('🔧 編集終了:', save ? '保存' : 'キャンセル')\n\n    if (save) {\n      // 変更を保存\n      updateComponentDataSync()\n      logger.debug('🔧 最終保存完了')\n    } else {\n      // 変更を破棄\n      currentEditingElement.value.innerHTML = originalContent.value\n      logger.debug('🔧 変更を破棄しました')\n    }\n\n    // 編集モードを終了\n    currentEditingElement.value.contentEditable = 'false'\n    currentEditingElement.value.classList.remove('editing')\n\n    // user-selectスタイルをクリーンアップ\n    currentEditingElement.value.style.userSelect = ''\n    currentEditingElement.value.style.webkitUserSelect = ''\n    logger.debug('🔧 編集終了、スタイルクリーンアップ完了')\n\n    logger.debug('🔧 編集モード終了処理完了')\n\n    // イベントリスナーをクリーンアップ\n    if ((currentEditingElement.value as any)._cleanup) {\n      ;(currentEditingElement.value as any)._cleanup()\n      delete (currentEditingElement.value as any)._cleanup\n    }\n\n    // 編集状態をクリア\n    currentEditingElement.value = null\n    originalContent.value = ''\n    currentComponentId.value = ''\n    currentParamName.value = ''\n\n    // ツールバーを非表示\n    showRichTextToolbar.value = false\n    logger.debug('🔧 ツールバーを非表示にしました')\n\n    // Tiptap編集終了（現在は無効化中）\n    // editor.actions.stopTiptapEdit()\n  }\n\n  // エディター操作関数\n  const openEditor = (index: number) => {\n    editor.actions.openEditor(index)\n  }\n  const closeEditor = () => {\n    editor.closeEditor()\n  }\n  const deletePart = (index: number) => {\n    editor.actions.deletePart(index)\n  }\n  const reorderParts = (newOrder: Component[]) => {\n    editor.actions.reorderParts(newOrder)\n  }\n\n  // ネストパーツの並べ替え処理\n  const reorderNestedParts = (pathString: string, newOrder: Component[]) => {\n    logger.debug('🔧 ネストパーツ並べ替え:', { pathString, newOrderCount: newOrder.length })\n    editor.actions.reorderNestedParts(pathString, newOrder)\n  }\n\n  // ネストパーツのドラッグ&ドロップ機能のセットアップ\n  const setupNestedDragAndDrop = () => {\n    const container = document.querySelector(`.${componentInstanceId.value}`)\n    if (!container) return\n\n    let draggedElement: HTMLElement | null = null\n    let draggedData: {\n      componentId: string\n      path: string\n      parentPath: string\n      index: number\n    } | null = null\n\n    // イベントハンドラー関数を定義（クリーンアップのため）\n    const handleDragStart = (e: Event) => {\n      const event = e as DragEvent\n      const target = event.target as HTMLElement\n\n      if (target.classList.contains('draggable-nested')) {\n        // テキスト編集中はドラッグを無効化\n        if (currentEditingElement.value) {\n          logger.debug('🔧 テキスト編集中のためネストパーツドラッグを無効化')\n          event.preventDefault()\n          return\n        }\n\n        // z-for内のネストパーツはz-for専用のハンドラーに任せる\n        if (target.classList.contains('z-for-nested-part')) {\n          logger.debug('🔧 z-for内ネストパーツ - z-for専用ハンドラーに委譲')\n          return\n        }\n\n        draggedElement = target\n\n        const componentId = target.dataset.componentId || ''\n        const path = target.dataset.path || ''\n        const parentPath = target.dataset.parentPath || ''\n        const index = parseInt(target.dataset.index || '0')\n\n        draggedData = { componentId, path, parentPath, index }\n\n        if (event.dataTransfer) {\n          event.dataTransfer.effectAllowed = 'move'\n          event.dataTransfer.setData('text/plain', 'nested-component')\n        }\n\n        target.style.opacity = '0.5'\n        logger.debug('🔧 ネストパーツドラッグ開始:', draggedData)\n      }\n    }\n\n    const handleDragOver = (e: Event) => {\n      const event = e as DragEvent\n      event.preventDefault()\n      if (event.dataTransfer) {\n        event.dataTransfer.dropEffect = 'move'\n      }\n    }\n\n    const handleDrop = (e: Event) => {\n      const event = e as DragEvent\n      event.preventDefault()\n\n      if (!draggedElement || !draggedData) return\n\n      const target = event.target as HTMLElement\n      const dropTarget = target.closest('.draggable-nested') as HTMLElement\n\n      if (dropTarget && dropTarget !== draggedElement) {\n        const targetParentPath = dropTarget.dataset.parentPath || ''\n        const targetIndex = parseInt(dropTarget.dataset.index || '0')\n\n        logger.debug('🔧 ネストパーツドロップ:', {\n          draggedParentPath: draggedData.parentPath,\n          draggedIndex: draggedData.index,\n          targetParentPath,\n          targetIndex,\n        })\n\n        // 同じ親内での並べ替えのみ対応\n        if (draggedData.parentPath === targetParentPath) {\n          logger.debug('🔧 同じ親内での並べ替え実行')\n          // コンポーネントIDベースの並べ替えを使用\n          editor.actions.moveNestedPartById(draggedData.parentPath, draggedData.index, targetIndex)\n        } else {\n          logger.debug('🔧 異なる親間の移動は未対応')\n        }\n      }\n\n      // ドラッグ終了処理\n      if (draggedElement) {\n        draggedElement.style.opacity = '1'\n      }\n      draggedElement = null\n      draggedData = null\n    }\n\n    const handleDragEnd = (e: Event) => {\n      const target = e.target as HTMLElement\n      if (target.classList.contains('draggable-nested')) {\n        target.style.opacity = '1'\n      }\n      draggedElement = null\n      draggedData = null\n    }\n\n    // イベントリスナーを登録\n    container.addEventListener('dragstart', handleDragStart)\n    container.addEventListener('dragover', handleDragOver)\n    container.addEventListener('drop', handleDrop)\n    container.addEventListener('dragend', handleDragEnd)\n\n    logger.debug('🔧 ネストパーツドラッグ&ドロップリスナー設定完了')\n\n    // クリーンアップ関数を返す\n    return () => {\n      container.removeEventListener('dragstart', handleDragStart)\n      container.removeEventListener('dragover', handleDragOver)\n      container.removeEventListener('drop', handleDrop)\n      container.removeEventListener('dragend', handleDragEnd)\n      logger.debug('🔧 ネストパーツドラッグ&ドロップリスナー削除完了')\n    }\n  }\n  // データ表示関連の状態\n  const displayedData = ref<any>(null)\n  const displayedDataTitle = ref('')\n  const displayedDataType = ref('')\n\n  // データ表示処理\n  const handleDataDisplay = (dataType: string) => {\n    let data: any = null\n    let title = ''\n    \n    switch (dataType) {\n      case 'page':\n        data = editablePageData.value\n        title = 'Pageデータ'\n        break\n      case 'commonParts':\n        data = editor.state.localCommonParts.value\n        // 空の場合はlocalPartsから共通パーツを抽出\n        if (!data || data.length === 0) {\n          data = localParts.value?.map(section => ({\n            ...section,\n            module: section.module?.filter(part => !part.category || part.category === 'common')\n          })).filter(section => section.module && section.module.length > 0) || []\n        }\n        // それでも空の場合はpropsから取得\n        if (!data || data.length === 0) {\n          data = props.parts?.map(section => ({\n            ...section,\n            module: section.module?.filter(part => !part.category || part.category === 'common')\n          })).filter(section => section.module && section.module.length > 0) || []\n        }\n        title = '共通Partsデータ'\n        console.log('🔍 最終共通パーツデータ:', JSON.stringify(data, null, 2))\n        break\n      case 'individualParts':\n        data = editor.state.localIndividualParts.value\n        // 空の場合はlocalPartsから個別パーツを抽出\n        if (!data || data.length === 0) {\n          data = localParts.value?.map(section => ({\n            ...section,\n            module: section.module?.filter(part => part.category === 'individual')\n          })).filter(section => section.module && section.module.length > 0) || []\n        }\n        // それでも空の場合はpropsから取得\n        if (!data || data.length === 0) {\n          data = props.parts?.map(section => ({\n            ...section,\n            module: section.module?.filter(part => part.category === 'individual')\n          })).filter(section => section.module && section.module.length > 0) || []\n        }\n        title = '個別Partsデータ'\n        console.log('🔍 最終個別パーツデータ:', JSON.stringify(data, null, 2))\n        break\n      case 'commonImages':\n        data = commonImages.value\n        title = '共通画像データ'\n        break\n      case 'individualImages':\n        data = individualImages.value\n        title = '個別画像データ'\n        break\n      default:\n        return\n    }\n    \n    displayedData.value = data\n    displayedDataTitle.value = title\n    displayedDataType.value = dataType\n  }\n\n  // データ表示エリアを閉じる\n  const closeDataDisplay = () => {\n    displayedData.value = null\n    displayedDataTitle.value = ''\n    displayedDataType.value = ''\n  }\n\n  // 表示用にフォーマットされたデータ\n  const displayedDataFormatted = computed(() => {\n    if (!displayedData.value) return ''\n    return JSON.stringify(displayedData.value, null, 2)\n  })\n\n  // クリップボードにコピー\n  const copyDataToClipboard = async () => {\n    try {\n      await navigator.clipboard.writeText(displayedDataFormatted.value)\n      alert('データをクリップボードにコピーしました')\n    } catch (error) {\n      console.error('クリップボードのコピーに失敗:', error)\n      alert('クリップボードのコピーに失敗しました')\n    }\n  }\n\n  // 現在表示中のデータを送信\n  const sendCurrentData = () => {\n    if (!displayedDataType.value) return\n    \n    switch (displayedDataType.value) {\n      case 'page':\n        editor.actions.sendPageData()\n        break\n      case 'commonParts':\n        editor.actions.sendCommonPartsData()\n        break\n      case 'individualParts':\n        editor.actions.sendIndividualPartsData()\n        break\n      case 'commonImages':\n        sendCommonImagesData()\n        break\n      case 'individualImages':\n        sendIndividualImagesData()\n        break\n    }\n    \n    alert(`${displayedDataTitle.value}を送信しました`)\n  }\n\n  const sendPageData = () => {\n    editor.actions.sendPageData()\n  }\n  const sendCommonPartsData = () => {\n    editor.actions.sendCommonPartsData()\n  }\n  const sendIndividualPartsData = () => {\n    editor.actions.sendIndividualPartsData()\n  }\n  const resetPageData = () => {\n    editor.actions.resetPageData()\n  }\n\n  // パーツ管理関連\n  const editingPart = ref<any>(null)\n  const existingPartTypes = computed(() => {\n    const types = new Set<string>()\n    if (localParts.value) {\n      localParts.value.forEach((section: any) => {\n        if (section.type) {\n          types.add(section.type)\n        }\n      })\n    }\n    return Array.from(types)\n  })\n  // コンポーネントレンダリング状態管理\n  const componentRenderCache = ref<Map<string, string>>(new Map())\n  \n  // レンダリング関数 - ネストパーツのUI付きレンダリング\n  const renderComponentWithNested = (component: any, componentIndex?: number) => {\n    console.log(`🔥 [EDITOR] renderComponentWithNested呼び出し - componentId: ${component.id}, type: ${component.type}/${component.module_name}`);\n    // デバッグ用直接確認\n    if (component.id.includes('div_nested_zfor')) {\n      // 重要：子z-forのデータが存在するかチェック\n    }\n    // コンポーネントのインデックスを取得（未指定の場合は配列から検索）\n    let actualIndex = componentIndex\n    if (actualIndex === undefined) {\n      actualIndex = editablePageData.value.findIndex(c => c.id === component.id)\n      if (actualIndex === -1) actualIndex = 0\n    }\n\n    // 最新のeditablePageDataから該当するコンポーネントを取得（並び替え後のデータを確保）\n    const latestComponent = editablePageData.value[actualIndex] || component\n    \n    // 配列データのハッシュを生成して変更検出（ネスト配列も含む）\n    const arrayKeys = Object.keys(latestComponent).filter(k => Array.isArray(latestComponent[k]))\n    // console.log(`[Z-FOR検証] ${latestComponent.id} - 配列キー:`, arrayKeys)\n    \n    const generateDeepArrayHash = (obj: any, prefix = ''): string[] => {\n      const hashes: string[] = []\n      \n      for (const [key, value] of Object.entries(obj)) {\n        if (Array.isArray(value)) {\n          const fullKey = prefix ? `${prefix}.${key}` : key\n          // 配列の順序も含めたハッシュを生成\n          const arrayHash = `${fullKey}:${value.length}:${JSON.stringify(value.map((item: any, index: number) => ({\n            i: index, // 順序情報を含める\n            id: item?.id || item?.name || `item_${index}`,\n            // ネスト配列も含めてハッシュ生成（配列除外フィルタを削除）\n            ...Object.fromEntries(Object.entries(item || {}).slice(0, 3))\n          })))}`\n          hashes.push(arrayHash)\n          // console.log(`[Z-FOR検証] ${latestComponent.id} - ${fullKey}ハッシュ:`, arrayHash)\n          \n          // ネスト配列も再帰的に処理\n          value.forEach((item: any, index: number) => {\n            if (item && typeof item === 'object') {\n              const nestedHashes = generateDeepArrayHash(item, `${fullKey}[${index}]`)\n              hashes.push(...nestedHashes)\n            }\n          })\n        }\n      }\n      \n      return hashes\n    }\n    \n    const allHashes = generateDeepArrayHash(latestComponent)\n    const currentArrayHash = allHashes.join('|')\n    \n    // console.log(`[Z-FOR検証] ${latestComponent.id} - 全体ハッシュ: ${currentArrayHash}`)\n    \n    const cacheKey = `${latestComponent.id}-${actualIndex}`\n    const previousHash = componentRenderCache.value.get(cacheKey)\n    const arrayDataChanged = previousHash !== currentArrayHash\n    \n    if (arrayDataChanged) {\n      componentRenderCache.value.set(cacheKey, currentArrayHash)\n      // console.log(`[Z-FOR検証] ${latestComponent.id}の配列データが変更されました:`)\n      \n      // 変更された配列の詳細をログ出力\n      const currentArrays = Object.keys(latestComponent).filter(k => Array.isArray(latestComponent[k]))\n      currentArrays.forEach(arrayName => {\n        const array = latestComponent[arrayName] as any[]\n        if (array.length > 0) {\n          // console.log(`[Z-FOR検証] - ${arrayName} (${array.length}項目):`, array.slice(0, 3).map((item: any, idx: number) => ({ \n          //   index: idx, \n          //   id: item.id, \n          //   ...Object.fromEntries(Object.entries(item).filter(([k]) => k !== 'id').slice(0, 2)) \n          // })))\n        }\n      })\n      \n    }\n\n    // console.log(`[Z-FOR検証] renderComponentWithNested: ${latestComponent.id}, arrayDataChanged: ${arrayDataChanged}`)\n    // console.log(`[Z-FOR検証] - 現在のハッシュ: ${currentArrayHash.substring(0, 200)}...`)\n    // console.log(`[Z-FOR検証] - 前回のハッシュ: ${(previousHash || 'undefined').substring(0, 200)}...`)\n    // console.log(`[Z-FOR検証] - ハッシュ比較結果: ${previousHash !== currentArrayHash}`)\n\n    // renderNestedComponentsWithUIコールバックを渡してネストパーツのドラッグ機能を有効化\n    const renderedResult = editor.templateProcessor.renderComponentWithNested(\n      latestComponent, // 最新データを使用\n      actualIndex, // 実際のコンポーネントインデックスを渡す\n      (type: string, moduleName: string) =>\n        editor.utils.template.getTemplate(type, moduleName, localParts.value),\n      // ネストコンポーネントレンダリング用ラッパー関数\n      (\n        components: Component[],\n        currentPath: number[],\n        stringifyHierarchyPath: (path: number[]) => string,\n        getTemplate?: (type: string, moduleName: string) => string\n      ) => {\n        // console.log(`[Z-FOR検証] renderNestedComponentsWithUI called for path: ${currentPath.join('-')}, components: ${components.length}`)\n        return editor.templateProcessor.renderNestedComponentsWithUI(\n          components,\n          currentPath,\n          (path: number[]) => path.join('-'), // パス配列を文字列に変換\n          getTemplate ||\n            ((type: string, moduleName: string) =>\n              editor.utils.template.getTemplate(type, moduleName, localParts.value))\n        )\n      }\n    )\n    \n    // プレビュー結果をログ出力（デバッグ用）\n    if (latestComponent.id === 'div_nested_zfor_001') {\n      // console.log(`[Z-FOR検証] ${latestComponent.id} - レンダリング結果:`, renderedResult)\n      // ネスト配列の内容がHTMLに含まれているかチェック\n      // const hasInnerItems = renderedResult.includes('inner_items') || renderedResult.includes('ネスト1-1')\n      // console.log(`[Z-FOR検証] ${latestComponent.id} - 子z-for含有チェック:`, hasInnerItems)\n      // z-for要素が含まれているかチェック\n      // const hasZForElements = renderedResult.includes('z-for')\n      // console.log(`[Z-FOR検証] ${latestComponent.id} - z-for要素残存チェック:`, hasZForElements)\n    }\n    \n    console.log(`🔥 [EDITOR] ${latestComponent.id} - 最終レンダリング結果:`, {\n      resultLength: renderedResult?.length || 0,\n      resultPreview: renderedResult?.substring(0, 300) + '...',\n      hasInnerItems: renderedResult?.includes('inner_items'),\n      hasNestedContent: renderedResult?.includes('ネスト1-1')\n    });\n    \n    \n    // 無限ループを回避して通常処理に戻す\n    \n    // 画像URL解決処理を追加\n    const resolvedResult = resolveImageUrlsInHTML(renderedResult)\n    \n    return resolvedResult\n  }\n\n  const updatePartsData = (parts: PartSection[]) => {\n    emit('update:parts', parts)\n  }\n\n\n  const openPartEditor = (part: any) => {\n    editingPart.value = part\n    showPartRegistration.value = true\n  }\n\n  const deletePartFromManager = (partInfo: { type: string; title: string }) => {\n    console.log('🔧 deletePartFromManager呼び出し:', partInfo)\n    const { type, title } = partInfo\n    \n    if (confirm(`パーツ「${title}」を削除しますか？`)) {\n      // パーツを削除する共通関数\n      const deletePartFromArray = (partsArray: any[]) => {\n        return partsArray.map(section => {\n          if (section.type === type) {\n            return {\n              ...section,\n              module: section.module.filter((module: any) => module.title !== title)\n            }\n          }\n          return section\n        }).filter(section => section.module.length > 0)\n      }\n\n      // localPartsを更新\n      const updatedParts = deletePartFromArray(localParts.value)\n      localParts.value = updatedParts\n      emit('update:parts', updatedParts)\n\n      // localCommonPartsが存在する場合は更新\n      if (editor.state.localCommonParts.value.length > 0) {\n        const updatedCommonParts = deletePartFromArray(editor.state.localCommonParts.value)\n        editor.state.localCommonParts.value = updatedCommonParts\n        emit('update:commonParts', updatedCommonParts)\n      }\n\n      // localIndividualPartsが存在する場合は更新\n      if (editor.state.localIndividualParts.value.length > 0) {\n        const updatedIndividualParts = deletePartFromArray(editor.state.localIndividualParts.value)\n        editor.state.localIndividualParts.value = updatedIndividualParts\n        emit('update:individualParts', updatedIndividualParts)\n      }\n\n      console.log('🔧 削除処理完了')\n    }\n  }\n\n  const renderPartPreview = (part: any) => {\n    // partが文字列の場合はそのまま、オブジェクトの場合はbodyプロパティを使用\n    const bodyContent = typeof part === 'string' ? part : part.body || ''\n    const renderedHtml = editor.computed.renderPartPreview(bodyContent)\n    // 画像URL解決処理を追加\n    return resolveImageUrlsInHTML(renderedHtml)\n  }\n\n  const saveNewPart = (partData: any) => {\n    const { type, title, body, category = 'common' } = partData\n    const updatedParts = [...localParts.value]\n\n    // 既存セクションを検索\n    let targetSection = updatedParts.find(section => section.type === type)\n\n    if (!targetSection) {\n      // 新しいセクションを作成\n      targetSection = { type, module: [] }\n      updatedParts.push(targetSection)\n    }\n\n    // カテゴリ情報を含むパーツデータを作成\n    const partWithCategory = { title, body, category }\n\n    // 編集中のパーツかどうかを確認\n    if (editingPart.value) {\n      // 既存パーツの更新\n      const moduleIndex = targetSection.module.findIndex(\n        module => module.title === editingPart.value!.module.title\n      )\n      if (moduleIndex !== -1) {\n        targetSection.module[moduleIndex] = partWithCategory\n      }\n    } else {\n      // 新規パーツの追加\n      targetSection.module.push(partWithCategory)\n    }\n\n    localParts.value = updatedParts\n    emit('update:parts', updatedParts)\n\n    // エディターを閉じる\n    closePartRegistration()\n  }\n\n  // タブ管理コンポーザブル\n  const { activeTab, switchToTab: originalSwitchToTab } = useEditorTabs()\n  \n  // タブ切り替えハンドラー\n  const switchToTab = (tab: any) => {\n    // useEditorTabsのswitchToTab\n    originalSwitchToTab(tab)\n    // useEditorCoreのswitchToTabも呼び出してdataTabをリセット\n    editor.switchToTab(tab)\n  }\n\n  // モーダル管理はuseEditorCoreから取得（useEditorModalsは使用しない）\n  const showPartSelector = editor.state.showPartSelector\n  const showNestedPartSelector = editor.state.showNestedPartSelector\n  const showPartRegistration = ref(false)\n\n  const openPartSelector = (position: number) => {\n    editor.openPartSelector(position)\n  }\n  const closePartSelector = () => {\n    editor.closePartSelector()\n  }\n  const openNestedPartSelector = (path: string, position: number) => {\n    logger.debug('🔧 openNestedPartSelector呼び出し:', { path, position })\n    editor.openNestedPartSelector(path, position)\n    logger.debug('🔧 showNestedPartSelector状態:', showNestedPartSelector.value)\n  }\n  const closeNestedPartSelector = () => {\n    editor.closeNestedPartSelector()\n  }\n  const openPartRegistration = () => {\n    showPartRegistration.value = true\n  }\n  const closePartRegistration = () => {\n    showPartRegistration.value = false\n    editingPart.value = null\n  }\n\n  // showEditorはuseZeroCodeから取得\n  const showEditor = editor.state.showEditor\n\n  // 画像データの状態管理\n  const commonImages = ref<ImageData[]>([])\n  const individualImages = ref<ImageData[]>([])\n\n  // 画像データ更新処理\n  const updateCommonImages = (images: ImageData[]) => {\n    commonImages.value = images\n    emit('update:commonImages', images)\n  }\n\n  const updateIndividualImages = (images: ImageData[]) => {\n    individualImages.value = images\n    emit('update:individualImages', images)\n  }\n\n  // 画像データ送信処理\n  const sendCommonImagesData = () => {\n    emit('update:commonImages', commonImages.value)\n  }\n\n  const sendIndividualImagesData = () => {\n    emit('update:individualImages', individualImages.value)\n  }\n\n  // ネストパーツ用の折りたたみ機能\n  const nestedCollapsible = useCollapsibleItems()\n\n  // パーツ選択処理\n  const selectPart = (type: string, module: any, index?: number): void => {\n    logger.debug('🔧 selectPart呼び出し:', { type, module, index, insertPosition: editor.state.insertPosition.value })\n    const newComponent = componentUtils.value.createNewComponent(type, module)\n    const insertPosition = index !== undefined ? index : editor.state.insertPosition.value\n    logger.debug('🔧 新しいコンポーネント作成:', newComponent)\n    logger.debug('🔧 挿入位置:', insertPosition)\n    editor.actions.addPart(newComponent, insertPosition)\n    closePartSelector()\n  }\n\n  const selectNestedPart = (type: string, module: any): void => {\n    // ネストパーツセレクターの状態を取得\n    const insertPath = editor.state.nestedInsertPath.value\n    const insertPosition = editor.state.nestedInsertPosition.value\n\n    // 新しいコンポーネントを作成\n    const newComponent = componentUtils.value.createNewComponent(type, module)\n\n    // ネストパーツを追加\n    editor.actions.addNestedPart(insertPath, insertPosition, newComponent)\n\n    closeNestedPartSelector()\n  }\n\n  // コンポーネントユーティリティ - useComponentUtilsを使用\n  // localPartsの変更を監視してリアクティブに更新\n  const componentUtils = computed(() => {\n    const parts =\n      localParts.value && localParts.value.length > 0 ? localParts.value : props.parts || []\n    logger.debug('componentUtils更新: parts length:', parts.length)\n    return useComponentUtils(parts)\n  })\n  const getFieldInfoWrapper = (component: Component) => componentUtils.value.getFieldInfo(component)\n  const shouldShowBasicFieldWrapper = (key: string, value: unknown, component: Component) =>\n    componentUtils.value.shouldShowBasicField(key, value, component)\n  const shouldShowArrayFieldWrapper = (key: string, value: unknown, component: Component) =>\n    componentUtils.value.shouldShowArrayField(key, value, component)\n  const shouldShowArrayItemFieldWrapper = (\n    itemKey: string,\n    itemValue: unknown,\n    component: Component,\n    arrayKey?: string,\n    item?: unknown\n  ) => componentUtils.value.shouldShowArrayItemField(itemKey, itemValue, component, arrayKey, item)\n  const getInputTypeWrapper = (key: string) => componentUtils.value.getInputType(key)\n  const isCheckboxCheckedWrapper = (component: Component, key: string, option: string) =>\n    componentUtils.value.isCheckboxChecked(component, key, option)\n\n  // エディター値更新処理\n  const handleUpdateEditorValue = (key: string, value: any) => {\n    const component = selectedComponent.value\n    if (component) {\n      component[key] = value\n\n      // z-for配列アイテムの場合は、元の配列データにも即座に反映\n      if ((component as any)._isZForItem) {\n        const parentComponentId = (component as any)._parentComponentId\n        const arrayName = (component as any)._arrayName\n        const arrayIndex = (component as any)._arrayIndex\n\n        logger.debug(\n          `🔄 z-for配列アイテムリアルタイム更新: ${parentComponentId}.${arrayName}[${arrayIndex}].${key} = ${value}`\n        )\n\n        // findComponentRecursively関数を使用して親コンポーネントを検索\n        const findComponentRecursively = (components: any[], targetId: string): any => {\n          for (const comp of components) {\n            if (comp.id === targetId) {\n              return comp\n            }\n            // nested_parts内を検索\n            if (comp.nested_parts && Array.isArray(comp.nested_parts)) {\n              const found = findComponentRecursively(comp.nested_parts, targetId)\n              if (found) return found\n            }\n            // 全てのプロパティから配列を検索（z-for配列内も含む）\n            for (const [propKey, propValue] of Object.entries(comp)) {\n              if (Array.isArray(propValue) && propKey !== 'nested_parts') {\n                for (const arrayItem of propValue) {\n                  if (arrayItem && typeof arrayItem === 'object') {\n                    // 配列アイテム内の全スロットを検索\n                    for (const [slotKey, slotValue] of Object.entries(arrayItem)) {\n                      if (Array.isArray(slotValue)) {\n                        const found = findComponentRecursively(slotValue, targetId)\n                        if (found) return found\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n          return null\n        }\n\n        const parentComponent = findComponentRecursively(editablePageData.value, parentComponentId)\n        if (parentComponent && Array.isArray(parentComponent[arrayName])) {\n          const array = parentComponent[arrayName]\n          if (arrayIndex >= 0 && arrayIndex < array.length) {\n            // 元の配列アイテムを更新\n            array[arrayIndex][key] = value\n            logger.debug(\n              `✅ z-for配列アイテム更新完了: ${parentComponentId}.${arrayName}[${arrayIndex}].${key}`\n            )\n          }\n        }\n      }\n\n      emit('update:page', editablePageData.value)\n    }\n  }\n\n  // propsの画像データを監視して反映\n  watch(\n    () => props.commonImages,\n    newCommonImages => {\n      if (Array.isArray(newCommonImages)) {\n        commonImages.value = JSON.parse(JSON.stringify(newCommonImages))\n      }\n    },\n    { immediate: true }\n  )\n\n  watch(\n    () => props.individualImages,\n    newIndividualImages => {\n      if (Array.isArray(newIndividualImages)) {\n        individualImages.value = JSON.parse(JSON.stringify(newIndividualImages))\n      }\n    },\n    { immediate: true }\n  )\n\n  // ページデータが変更された時に画像編集ボタンを再生成\n  let addImageEditButtonsFunction: (() => void) | null = null\n  \n  watch(\n    () => editablePageData.value,\n    () => {\n      if (addImageEditButtonsFunction) {\n        nextTick(() => {\n          addImageEditButtonsFunction!()\n        })\n      }\n    },\n    { deep: true }\n  )\n\n  // 画像選択モーダル関数\n  const openGlobalImageSelector = (component: Component, fieldName: string, currentValue: string) => {\n    currentGlobalImageComponent.value = component\n    currentGlobalImageField.value = fieldName\n    currentGlobalImageValue.value = currentValue\n    showGlobalImageSelector.value = true\n  }\n\n  const closeGlobalImageSelector = () => {\n    showGlobalImageSelector.value = false\n    currentGlobalImageComponent.value = null\n    currentGlobalImageField.value = ''\n    currentGlobalImageValue.value = ''\n  }\n\n  const onGlobalImageSelected = (imageUrl: string, imageAlt: string) => {\n    if (currentGlobalImageComponent.value && currentGlobalImageField.value) {\n      // Base64のdata URLの場合は、元の画像URLを取得\n      let originalUrl = imageUrl\n      let selectedImageData = null\n      \n      if (imageUrl.startsWith('data:')) {\n        // Base64 URLの場合、対応する元のURLを見つける\n        const allImagesData = [...commonImages.value, ...individualImages.value]\n        selectedImageData = allImagesData.find(img => getImageSrc(img) === imageUrl)\n        if (selectedImageData) {\n          originalUrl = selectedImageData.url\n        }\n      } else {\n        // 通常のURLの場合、対応する画像データを見つける\n        const allImagesData = [...commonImages.value, ...individualImages.value]\n        selectedImageData = allImagesData.find(img => img.url === imageUrl)\n      }\n      \n      // 選択された画像が元のオリジナル画像の場合、Base64データをリセット\n      if (selectedImageData && !imageUrl.startsWith('data:')) {\n        // 元の画像を選択した場合、Base64データをクリア\n        // ただし、その画像が現在Base64で差し替えられている場合のみ\n        if (selectedImageData.fileData?.base64 && selectedImageData.fileData.base64.trim() !== '') {\n          resetImageToOriginal(selectedImageData.id)\n        }\n      }\n      \n      // オリジナルのURLを設定（resolveImageUrlsInHTMLで適切に解決される）\n      currentGlobalImageComponent.value[currentGlobalImageField.value] = originalUrl\n      \n      // altフィールドがある場合は自動設定\n      const altFieldKey = currentGlobalImageField.value.replace(/url$/i, 'alt').replace(/image$/i, 'alt')\n      if (altFieldKey !== currentGlobalImageField.value && currentGlobalImageComponent.value[altFieldKey] !== undefined) {\n        currentGlobalImageComponent.value[altFieldKey] = imageAlt\n      }\n      \n      // ページデータを更新\n      emit('update:page', editablePageData.value)\n      \n      // 明示的に再レンダリングをトリガー\n      nextTick(() => {\n        triggerRef(editablePageData)\n        // パーツデータも更新をトリガー\n        if (localParts.value) {\n          triggerRef(localParts)\n        }\n      })\n      \n      logger.debug('🖼️ 画像選択完了:', originalUrl)\n    }\n    closeGlobalImageSelector()\n  }\n  \n  // ホバー時のみ表示方式に変更したためモーダル監視は不要\n\n  // コンポーネント固有クリックハンドラー（編集外クリック時の自動保存）\n  const handleComponentClick = (e: Event) => {\n    if (!currentEditingElement.value || !showRichTextToolbar.value) return\n\n    const clickedElement = e.target as HTMLElement\n    \n    // 自分のインスタンス内のクリックかどうかを確認\n    const componentElement = document.querySelector(`.${componentInstanceId.value}`)\n    if (!componentElement || !componentElement.contains(clickedElement)) {\n      return // 他のインスタンスのクリックは無視\n    }\n\n    // 編集中の要素やツールバーがクリックされた場合は何もしない\n    if (\n      clickedElement.closest('.zero-code-rich-text-toolbar') ||\n      clickedElement === currentEditingElement.value ||\n      currentEditingElement.value.contains(clickedElement)\n    ) {\n      return\n    }\n\n    logger.debug('🔧 編集外エリアクリック、自動保存してツールバー非表示')\n    stopRichTextEdit(true)\n  }\n\n  // ネストパーツドラッグ&ドロップのクリーンアップ関数\n  let cleanupNestedDragAndDrop: (() => void) | null = null\n  \n  // 画像クリックハンドラー（クリーンアップ用）\n  let imageClickHandler: ((e: Event) => void) | null = null\n\n  // 初期化処理\n  onMounted(async () => {\n    logger.debug('🔧 ZeroCode初期化開始')\n\n\n    // コンポーネント固有クリックリスナーを追加\n    document.addEventListener('click', handleComponentClick)\n    logger.debug('🔧 グローバルクリックリスナー追加完了')\n\n    // 浮遊編集ボタンを画像に追加する処理\n    const addImageEditButtons = () => {\n      logger.debug('🖼️ 浮遊編集ボタン追加処理開始')\n      \n      // コンポーネント内の画像要素を取得\n      const componentElement = document.querySelector(`.${componentInstanceId.value}`)\n      if (!componentElement) return\n      \n      const allImages = componentElement.querySelectorAll('img')\n      logger.debug('🖼️ 検出された画像数:', allImages.length)\n      \n      allImages.forEach((imgElement) => {\n        const img = imgElement as HTMLImageElement\n        \n        // 既に編集ボタンが追加されている場合はスキップ\n        if (img.hasAttribute('data-edit-button-id')) {\n          return\n        }\n        \n        // エディターコンテンツ内の画像のみを対象（クラス判定）\n        if (!img.classList.contains('zero-code-editable-image')) {\n          return\n        }\n        \n        // 適当なコンポーネントを使用（後で改善予定）\n        const testComponent = editablePageData.value?.[0]\n        \n        // エディターコンテンツ内の画像のみ処理\n        if (testComponent) {\n          try {\n            // 画像の位置を取得\n            const imgRect = img.getBoundingClientRect()\n            logger.debug('🔍 画像位置情報:', {\n              src: img.src.substring(img.src.lastIndexOf('/') + 1),\n              rect: {\n                top: imgRect.top,\n                left: imgRect.left,\n                right: imgRect.right,\n                bottom: imgRect.bottom,\n                width: imgRect.width,\n                height: imgRect.height\n              },\n              scrollY: window.scrollY,\n              scrollX: window.scrollX\n            })\n            \n            // 小さな浮遊編集ボタンを作成\n            const editButton = document.createElement('button')\n            editButton.innerHTML = '✏️'\n            editButton.className = 'zero-code-image-floating-button'\n            // position: fixedの場合はスクロール量を加算しない\n            const buttonTop = imgRect.top + 8\n            const buttonLeft = imgRect.right - 32\n            \n            logger.debug('🔍 ボタン計算位置:', { buttonTop, buttonLeft })\n            \n            editButton.style.cssText = `\n              position: fixed !important;\n              top: ${buttonTop}px !important;\n              left: ${buttonLeft}px !important;\n              width: 28px !important;\n              height: 28px !important;\n              background: #3b82f6 !important;\n              color: #ffffff !important;\n              border: 2px solid #ffffff !important;\n              border-radius: 50% !important;\n              font-size: 12px !important;\n              cursor: pointer !important;\n              box-shadow: 0 3px 12px rgba(59, 130, 246, 0.4), 0 1px 4px rgba(0, 0, 0, 0.2) !important;\n              z-index: 1000 !important;\n              opacity: 0 !important;\n              font-family: inherit !important;\n              display: flex !important;\n              align-items: center !important;\n              justify-content: center !important;\n              pointer-events: auto !important;\n            `\n            \n            // 画像にデータ属性を追加してボタンとの関連を記録\n            img.setAttribute('data-edit-button-id', `edit-btn-${Date.now()}`)\n            editButton.setAttribute('data-target-image', img.getAttribute('data-edit-button-id')!)\n            \n            // ホバーイベント\n            // ホバー時のみ表示制御（シンプル化）\n            const showButton = () => {\n              editButton.style.opacity = '1'\n            }\n            \n            const hideButton = () => {\n              editButton.style.opacity = '0'\n            }\n            \n            // ホバー処理（シンプル化）\n            img.addEventListener('mouseenter', showButton)\n            img.addEventListener('mouseleave', hideButton)\n            editButton.addEventListener('mouseenter', showButton)\n            editButton.addEventListener('mouseleave', hideButton)\n            \n            // スクロール・リサイズ時の位置更新（シンプル化）\n            const updateButtonPosition = () => {\n              if (document.body.contains(img)) {\n                const newRect = img.getBoundingClientRect()\n                const newTop = newRect.top + 8\n                const newLeft = newRect.right - 32\n                editButton.style.top = `${newTop}px`\n                editButton.style.left = `${newLeft}px`\n              } else {\n                editButton.remove()\n              }\n            }\n            \n            window.addEventListener('scroll', updateButtonPosition)\n            window.addEventListener('resize', updateButtonPosition)\n            \n            // クリックイベント\n            editButton.addEventListener('click', (e) => {\n              e.preventDefault()\n              e.stopPropagation()\n              logger.debug('🖼️ 浮遊編集ボタンクリック')\n              \n              // 画像フィールドを検索してモーダルを開く\n              if (testComponent) {\n                const imageFields = Object.keys(testComponent).filter(key => \n                  key.toLowerCase().includes('url') || \n                  key.toLowerCase().includes('image') || \n                  key.toLowerCase().includes('icon')\n                )\n                \n                logger.debug('🔍 コンポーネントデータ:', testComponent)\n                logger.debug('🔍 画像フィールド一覧:', imageFields)\n                logger.debug('🔍 各フィールドの値:', imageFields.reduce((acc: Record<string, any>, field) => {\n                  acc[field] = (testComponent as any)[field]\n                  return acc\n                }, {} as Record<string, any>))\n                \n                if (imageFields.length > 0) {\n                  // クリックされた画像のsrcと一致するフィールドを検索\n                  let targetField = imageFields[0] // デフォルトは最初のフィールド\n                  const clickedSrc = img.src\n                  \n                  logger.debug('🔍 クリックされた画像のsrc:', clickedSrc)\n                  \n                  // 各画像フィールドの値と比較して一致するものを探す\n                  for (const field of imageFields) {\n                    const fieldValue = (testComponent as any)[field]\n                    logger.debug(`🔍 フィールド ${field} の値をチェック:`, fieldValue)\n                    if (fieldValue && typeof fieldValue === 'string') {\n                      // resolveImageUrlsInHTMLと同じロジックで画像データを検索\n                      const currentImages = [...(commonImages.value || []), ...(individualImages.value || [])]\n                      \n                      // 画像データが存在する場合のみ検索\n                      let imageData = null\n                      if (currentImages.length > 0) {\n                        imageData = currentImages.find(img => {\n                          // 完全一致チェック\n                          if (img.id === fieldValue || img.url === fieldValue || img.name === fieldValue) {\n                            return true\n                          }\n                          \n                          // URLパスの一致チェック\n                          if (fieldValue.endsWith('/' + img.name) || img.url.endsWith(fieldValue)) {\n                            return true\n                          }\n                          \n                          // ファイル名部分のマッチング\n                          const originalFileName = fieldValue.split('/').pop()\n                          if (originalFileName === img.name) {\n                            return true\n                          }\n                          \n                          return false\n                        })\n                      }\n                      \n                      if (imageData) {\n                        try {\n                          const resolvedSrc = getImageSrc(imageData)\n                          logger.debug(`🔍 ${field}フィールドの解決されたsrc:`, resolvedSrc)\n                          // 解決されたsrcとクリックされた画像のsrcが一致するか確認\n                          if (resolvedSrc === clickedSrc) {\n                            logger.debug(`✅ 一致発見! フィールド: ${field}`)\n                            targetField = field\n                            break\n                          }\n                        } catch (error) {\n                          logger.debug('🔍 画像解決エラー:', error)\n                        }\n                      }\n                      \n                      // 直接一致も確認（フォールバック）\n                      if (fieldValue === clickedSrc) {\n                        logger.debug(`✅ 直接一致発見! フィールド: ${field}`)\n                        targetField = field\n                        break\n                      }\n                    }\n                  }\n                  \n                  logger.debug('🖼️ 特定されたフィールド:', targetField, 'クリックされた画像:', clickedSrc)\n                  openGlobalImageSelector(testComponent, targetField, img.src)\n                } else {\n                  logger.debug('🔍 画像フィールドが見つかりません')\n                }\n              } else {\n                logger.debug('🔍 テスト用クリック - コンポーネントなし')\n              }\n            })\n            \n            // ボタンをページに追加\n            document.body.appendChild(editButton)\n            \n            logger.debug('🖼️ 浮遊編集ボタン追加完了')\n          } catch (error) {\n            logger.error('🚨 画像ボタン追加エラー:', error)\n          }\n        }\n      })\n    }\n    \n    // ホバー時のみ表示に変更したため、手動制御関数は簡素化\n    \n    // 関数を外部から参照できるよう設定\n    addImageEditButtonsFunction = addImageEditButtons\n    \n    // 初回の画像編集ボタン追加（遅延実行）\n    setTimeout(() => {\n      logger.debug('🔍 5秒後の画像ボタン追加実行')\n      addImageEditButtons()\n    }, 5000)\n    \n    \n    // 早期実行も試す\n    nextTick(() => {\n      logger.debug('🔍 nextTick後の浮遊ボタン追加実行')\n      addImageEditButtons()\n    })\n    \n    // DOM変更を監視して新しい画像にもボタンを追加\n    const observer = new MutationObserver(() => {\n      addImageEditButtons()\n    })\n    \n    const componentElement = document.querySelector(`.${componentInstanceId.value}`)\n    if (componentElement) {\n      observer.observe(componentElement, {\n        childList: true,\n        subtree: true\n      })\n    }\n    \n    // オブザーバーのクリーンアップも設定（imageClickHandlerを再利用）\n    const originalImageClickHandler = imageClickHandler\n    imageClickHandler = (e: Event) => {\n      observer.disconnect()\n      if (originalImageClickHandler) originalImageClickHandler(e)\n    }\n    \n    logger.debug('🔧 画像編集ボタン追加処理完了')\n\n    // イベントリスナーを設定\n    logger.debug('🔧 イベントリスナー設定中...')\n    editor.setupEventListeners()\n\n    // EventBusリスナーを登録\n    logger.debug('🔧 EventBusリスナー登録中...')\n    editorEventBus.on('reorderZForArrayItem', ({ componentId, arrayName, fromIndex, toIndex }) => {\n      logger.debug('🔄 z-for並び替えイベント受信:', { componentId, arrayName, fromIndex, toIndex })\n      \n      // 該当コンポーネントを特定\n      const targetComponent = editablePageData.value.find(comp => comp.id === componentId)\n      \n      if (!targetComponent) {\n        logger.warn('対象コンポーネントが見つかりません:', { componentId, arrayName, availableIds: editablePageData.value.map(c => c.id) })\n        return\n      }\n      \n      // まず arrayFields を確認\n      let arrayItems: any[] | null = null\n      \n      if (targetComponent.arrayFields) {\n        const arrayFields = targetComponent.arrayFields as Record<string, any[]>\n        arrayItems = arrayFields[arrayName]\n      }\n      \n      // arrayFields で見つからない場合は、直接プロパティとしてアクセス\n      if (!arrayItems && (targetComponent as any)[arrayName]) {\n        arrayItems = (targetComponent as any)[arrayName]\n      }\n      \n      if (!arrayItems || !Array.isArray(arrayItems)) {\n        logger.warn('指定された配列フィールドが見つからないか、配列ではありません:', { \n          componentId, \n          arrayName, \n          foundDirectly: !!(targetComponent as any)[arrayName],\n          foundInArrayFields: !!(targetComponent.arrayFields && (targetComponent.arrayFields as any)[arrayName]),\n          itemType: typeof arrayItems\n        })\n        return\n      }\n      if (fromIndex >= 0 && toIndex >= 0 && fromIndex < arrayItems.length && toIndex < arrayItems.length) {\n        const [movedItem] = arrayItems.splice(fromIndex, 1)\n        arrayItems.splice(toIndex, 0, movedItem)\n        logger.debug('✅ z-for並び替え完了:', { arrayName, from: fromIndex, to: toIndex })\n      } else {\n        logger.warn('無効な並び替えインデックス:', { fromIndex, toIndex, arrayLength: arrayItems.length })\n      }\n    })\n\n    // グローバル関数を公開（startTiptapEdit関数をカスタム実装で渡す）\n    logger.debug('🔧 グローバル関数公開中...')\n    editor.exposeGlobalFunctions((componentId: string, paramName: string) => {\n      logger.debug('🔧 Tiptap編集開始:', { componentId, paramName })\n      showRichTextToolbar.value = true\n      editor.actions.startTiptapEdit(componentId, paramName, [], 0)\n    })\n\n    // デバッグ用：画像編集ボタン追加関数をグローバルに公開\n    if (typeof window !== 'undefined') {\n      ;(window as any).testAddImageButtons = () => {\n        logger.debug('🔍 手動テスト：画像ボタン追加実行')\n        addImageEditButtons()\n      }\n      \n      // ホバー時のみ表示に変更したため、手動制御テストは不要\n      \n      ;(window as any).testImageInfo = () => {\n        const componentElement = document.querySelector(`.${componentInstanceId.value}`)\n        if (!componentElement) return\n        const allImages = componentElement.querySelectorAll('img')\n        logger.debug('🔍 手動テスト：全画像数', allImages.length)\n        allImages.forEach((img, index) => {\n          const rect = img.getBoundingClientRect()\n          logger.debug(`🔍 画像${index}:`, {\n            src: img.src.substring(img.src.lastIndexOf('/') + 1),\n            parent: img.parentElement?.tagName,\n            hasDataId: !!img.closest('[data-component-id]'),\n            visible: rect.width > 0 && rect.height > 0,\n            rect: { top: rect.top, left: rect.left, width: rect.width, height: rect.height }\n          })\n        })\n        \n        const floatingButtons = document.querySelectorAll('.zero-code-image-floating-button')\n        logger.debug('🔍 現在の浮遊ボタン数:', floatingButtons.length)\n      }\n    }\n    \n    // z-for処理用の最新データ取得関数を追加で公開\n    if (typeof window !== 'undefined') {\n      ;(window as any).getLatestComponentData = (componentId: string) => {\n        // 通常のコンポーネントIDの場合\n        const component = editablePageData.value.find(c => c.id === componentId)\n        if (component) {\n          // console.log(`[Z-FOR検証] ${componentId}の最新データを提供:`, Object.keys(component).filter(k => Array.isArray(component[k])))\n          return component\n        }\n        \n        // 子z-forコンポーネントIDの場合（例: div_nested_zfor_001_outer_items_0）\n        // パターン: 基底ID_配列名_インデックス\n        const zForPattern = /^(.+?)_([^_]+_[^_]+)_(\\d+)$/\n        const match = componentId.match(zForPattern)\n        if (match) {\n          const [, baseId, arrayName, arrayIndexStr] = match\n          const arrayIndex = parseInt(arrayIndexStr, 10)\n          \n          const parentComponent = editablePageData.value.find(c => c.id === baseId)\n          if (parentComponent && Array.isArray(parentComponent[arrayName]) && parentComponent[arrayName][arrayIndex]) {\n            const arrayElement = parentComponent[arrayName][arrayIndex]\n            const childData = {\n              ...parentComponent,  // 親の全データを継承\n              ...arrayElement,     // 配列要素データで上書き\n              type: parentComponent.type,\n              module_name: parentComponent.module_name,\n              id: componentId,\n            }\n            // console.log(`[Z-FOR検証] 子z-for: ${componentId}の最新データを提供`)\n            // console.log(`[Z-FOR検証] - 基底ID: ${baseId}`)\n            // console.log(`[Z-FOR検証] - 配列名: ${arrayName}`)\n            // console.log(`[Z-FOR検証] - インデックス: ${arrayIndex}`)\n            // console.log(`[Z-FOR検証] - 配列要素:`, JSON.stringify(arrayElement))\n            // console.log(`[Z-FOR検証] - 子データ配列フィールド:`, Object.keys(childData).filter(k => Array.isArray(childData[k])))\n            return childData\n          }\n        }\n        \n        return null\n      }\n    }\n\n    // ネストパーツの折りたたみ機能をグローバル関数として公開\n    ;(window as any).toggleNestedCollapse = (pathString: string) => {\n      logger.debug('🔧 ネストパーツ折りたたみ切り替え:', pathString)\n      nestedCollapsible.toggleCollapse(pathString)\n      \n      // UIを即座に更新\n      nextTick(() => {\n        const contentElement = document.getElementById(`nested-content-${pathString}`)\n        const buttonElement = document.querySelector(`[onclick=\"window.toggleNestedCollapse('${pathString}')\"]`)\n        \n        if (contentElement && buttonElement) {\n          const isCollapsed = nestedCollapsible.isCollapsed(pathString)\n          \n          if (isCollapsed) {\n            contentElement.style.display = 'none'\n            buttonElement.textContent = '＋'\n            buttonElement.setAttribute('title', '展開')\n          } else {\n            contentElement.style.display = 'block'\n            buttonElement.textContent = '－'\n            buttonElement.setAttribute('title', '折りたたみ')\n          }\n        }\n      })\n    }\n\n    ;(window as any).isNestedCollapsed = (pathString: string) => {\n      return nestedCollapsible.isCollapsed(pathString)\n    }\n\n    // z-for並び替え関数をグローバルに公開\n    ;(window as any).reorderZForArrayItem = (\n      componentId: string,\n      arrayName: string,\n      fromIndex: number,\n      toIndex: number\n    ) => {\n      logger.debug('🔄 reorderZForArrayItem グローバル関数呼び出し:', { componentId, arrayName, fromIndex, toIndex })\n      editorEventBus.emit('reorderZForArrayItem', { componentId, arrayName, fromIndex, toIndex })\n    }\n\n    // ネストパーツのドラッグ&ドロップ機能を設定\n    cleanupNestedDragAndDrop = setupNestedDragAndDrop() || null\n\n    // startRichTextEdit関数も追加で公開（重複実行防止版）\n    ;(window as any).startRichTextEdit = async (\n      componentId: string,\n      paramName: string,\n      currentValue: string,\n      element?: HTMLElement\n    ) => {\n      logger.debug('🔧 リッチテキスト編集開始:', { componentId, paramName, currentValue })\n\n      // 既に同じ要素を編集中の場合はスキップ\n      const targetElement = element || (window.event?.target as HTMLElement)\n      if (currentEditingElement.value === targetElement) {\n        logger.debug('🔧 既に編集中の要素、スキップ')\n        return\n      }\n\n      if (targetElement) {\n        // 前回の編集を終了（ログ出力を追加）\n        if (currentEditingElement.value) {\n          logger.debug('🔧 前回の編集セッションを終了')\n          stopRichTextEdit(false)\n        }\n\n        // 事前に編集状態を設定（テキスト選択を妨害しないように）\n        logger.debug('🔧 事前設定開始')\n\n        currentEditingElement.value = targetElement\n        originalContent.value = targetElement.innerHTML\n        currentComponentId.value = componentId\n        currentParamName.value = paramName\n\n        // nextTickで非同期に編集設定を行い、テキスト選択を妨害しないようにする\n        await nextTick()\n\n        // 要素を編集可能にする\n        targetElement.contentEditable = 'true'\n        logger.debug('🔧 contentEditable設定完了:', targetElement.contentEditable)\n\n        // user-selectを明示的に設定\n        targetElement.style.userSelect = 'text'\n        targetElement.style.webkitUserSelect = 'text'\n        logger.debug('🔧 user-select設定完了:', targetElement.style.userSelect)\n\n        // CSSクラスを追加\n        targetElement.classList.add('editing')\n        logger.debug('🔧 editingクラス追加完了')\n\n        logger.debug('🔧 編集モード設定完了')\n\n        // フォーカスアウト時の自動保存処理\n        const handleBlur = (e: Event) => {\n          const relatedTarget = (e as FocusEvent).relatedTarget as HTMLElement\n          if (relatedTarget && relatedTarget.closest('.zero-code-rich-text-toolbar')) {\n            logger.debug('🔧 ツールバーへのフォーカス移動、編集継続')\n            return\n          }\n\n          logger.debug('🔧 フォーカス喪失、自動保存とツールバー非表示')\n          // 少し遅延させてツールバークリックとの競合を避ける\n          setTimeout(() => {\n            if (currentEditingElement.value === targetElement) {\n              stopRichTextEdit(true) // 自動保存\n            }\n          }, 150)\n        }\n\n        targetElement.addEventListener('blur', handleBlur)\n        logger.debug('🔧 イベントリスナー追加完了')\n\n        // クリーンアップ関数\n        ;(targetElement as any)._cleanup = () => {\n          targetElement.removeEventListener('blur', handleBlur)\n          logger.debug('🔧 イベントリスナークリーンアップ完了')\n        }\n\n        // ツールバー位置計算\n        logger.debug('🔧 ツールバー位置計算開始')\n        const rect = targetElement.getBoundingClientRect()\n        const scrollTop = window.pageYOffset || document.documentElement.scrollTop\n        const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft\n\n        richTextPosition.value = {\n          top: rect.top + scrollTop - 80,\n          left: rect.left + scrollLeft,\n        }\n        logger.debug('🔧 ツールバー位置設定完了:', richTextPosition.value)\n\n        // ツールバー表示\n        logger.debug('🔧 ツールバー表示開始')\n        showRichTextToolbar.value = true\n        logger.debug('🔧 リッチテキスト編集開始完了（ツールバー付き）')\n\n        // 次の描画サイクルで要素にフォーカスを当て、テキスト選択を有効化\n        await nextTick()\n\n        // 一回目のクリックでテキスト選択を確実に動作させるため、少し遅延してからフォーカス\n        setTimeout(() => {\n          if (targetElement && currentEditingElement.value === targetElement) {\n            targetElement.focus()\n\n            // カーソルを末尾に移動\n            const range = document.createRange()\n            const selection = window.getSelection()\n\n            if (selection && targetElement.childNodes.length > 0) {\n              // テキストノードの最後にカーソルを移動\n              const lastNode = targetElement.childNodes[targetElement.childNodes.length - 1]\n              if (lastNode.nodeType === Node.TEXT_NODE) {\n                range.setStart(lastNode, lastNode.textContent?.length || 0)\n              } else {\n                range.setStartAfter(lastNode)\n              }\n              range.collapse(true)\n\n              selection.removeAllRanges()\n              selection.addRange(range)\n\n              logger.debug('🔧 カーソルを末尾に移動完了')\n            } else if (selection) {\n              // テキストが空の場合は要素の末尾にカーソルを設定\n              range.selectNodeContents(targetElement)\n              range.collapse(false)\n              selection.removeAllRanges()\n              selection.addRange(range)\n\n              logger.debug('🔧 空要素の末尾にカーソル設定完了')\n            }\n\n            logger.debug('🔧 遅延フォーカス完了、テキスト選択準備完了（末尾から開始）')\n          }\n        }, 10)\n      }\n\n      // Tiptap処理は一時的に無効化（段階的復旧）\n      // editor.actions.startTiptapEdit(componentId, paramName, [], 0)\n    }\n\n    // デバッグ用: localPartsの内容を確認\n    logger.debug('localParts.value:', localParts.value)\n    logger.debug('props.parts:', props.parts)\n\n    // グローバル関数の確認\n    logger.debug('🔧 グローバル関数確認:')\n    logger.debug('  openNestedPartSelector:', typeof window.openNestedPartSelector)\n    logger.debug('  openNestedEditor:', typeof window.openNestedEditor)\n\n    logger.debug('✅ ZeroCode初期化完了')\n  })\n\n  // Webコンポーネントとして使用する場合のプロパティを公開\n  defineExpose({\n    parts: computed(() => localParts.value && localParts.value.length > 0 ? localParts.value : props.parts || []),\n    page: computed(() => editablePageData.value || [])\n  })\n\n  // クリーンアップ処理\n  onUnmounted(() => {\n    logger.debug('🔧 ZeroCode破棄処理開始')\n    document.removeEventListener('click', handleComponentClick)\n    if (imageClickHandler) {\n      document.removeEventListener('click', imageClickHandler)\n    }\n    \n    // 浮遊画像編集ボタンのクリーンアップ\n    const componentElement = document.querySelector(`.${componentInstanceId.value}`)\n    const floatingButtons = componentElement ? componentElement.querySelectorAll('.zero-code-image-floating-button') : []\n    floatingButtons.forEach(button => button.remove())\n    \n    if (cleanupNestedDragAndDrop) {\n      cleanupNestedDragAndDrop()\n    }\n    \n    // EventBusリスナーのクリーンアップ\n    editorEventBus.off('reorderZForArrayItem')\n    \n    logger.debug('🔧 ZeroCode破棄処理完了')\n  })\n</script>\n\n","import { defineCustomElement } from 'vue'\n// @ts-ignore\nimport ZeroCode from './ZeroCode.ce.vue'\n\nconst ZeroCodeElement = defineCustomElement(ZeroCode, {\n  shadowRoot: false,\n})\n\n// eslint-disable-next-line no-undef\ncustomElements.define('zero-code', ZeroCodeElement)\n\n// パッケージとしても使えるようにエクスポート\nexport { ZeroCodeElement as ZeroCode }\nexport default ZeroCodeElement\n\n// 型定義のエクスポート\nexport type * from '@types'\n"],"names":["logger","message","args","label","rn","Ne","vt","bt","mt","e","n","fe","Ve","o","Bt","gn","mn","wt","vn","bn","Et","St","yn","wn","Dt","qe","En","Sn","Dn","_n","_t","Tn","Cn","Tt","r","te","On","Xe","re","In","i","An","xn","oe","ie","Ae","Ct","_e","kt","Ht","Lt","D","S","Le","Nn","Z","Ot","V","h","ye","Wt","ee","M","a","l","s","u","d","f","m","y","b","E","It","ue","we","p","dt","K","At","Pn","Mn","Ke","Te","Gt","Fn","jt","zt","Ut","q","Rn","Yn","Xn","ge","Je","xe","Bn","k","H","F","A","kn","G","c","I","g","C","pe","Ye","O","se","Ee","X","be","Ce","$","le","Kt","Jt","W","Pe","ve","We","Ge","de","J","Ze","Qe","xt","Nt","me","Oe","Ie","Me","Be","B","et","at","je","Ue","Fe","Pt","Hn","Vt","$t","Ln","Wn","qt","he","Gn","Jn","tt","ke","ce","nn","gt","on","Re","L","Vn","Un","ne","j","Q","v","w","x","N","_","$n","T","R","Y","z","ae","zn","lt","jn","Kn","qn","P","Se","st","ut","nt","ot","ze","De","Zn","Mt","He","rt","Zt","ht","pt","Qn","eo","ft","ln","to","sn","Yt","Qt","en","Ft","no","Rt","tn","U","$e","an","ct","oo","lo","un","yt","cn","fn","dn","hn","useCollapsibleItems","collapsedItems","ref","STORAGE_KEY","loadCollapsedState","error","saveCollapsedState","idsArray","isCollapsed","itemId","toggleCollapse","newCollapsedItems","collapseItem","expandItem","expandAll","count","collapseAll","itemIds","collapsedCount","computed","getExpandedCount","totalItems","watch","props","__props","_emit","__emit","draggablePageData","newOrder","onDragStart","onDragEnd","handleCollapseAll","componentIds","component","index","dataTabs","getTabLabel","tab","formattedPageData","formatToReadableJson","data","formatValue","obj","depth","indent","nextIndent","item","entries","key","value","formattedValue","cleanString","lines","line","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_Fragment","_renderList","_normalizeClass","modelValue","$event","$emit","_toDisplayString","_hoisted_4","_hoisted_5","_hoisted_6","_unref","pageData","_hoisted_7","_cache","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_createVNode","VueDraggable","isTextEditing","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_Transition","renderComponentWithNested","_vShow","_hoisted_22","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","safeModalContainer","activePartsTab","partsTabs","getPartsTabLabel","commonParts","section","part","extendedPart","individualParts","emit","selectPart","type","module","renderPartPreview","body","preview","match","paramName","defaultValue","options","opt","_createBlock","_Teleport","partSection","sectionIndex","moduleIndex","_hoisted_21","_props","updateValue","isArrayItemCheckboxChecked","fieldKey","option","fieldValue","updateArrayItemCheckboxValue","checked","currentValue","draggedIndex","handleDragStart","target","handleDragOver","handleDrop","targetIndex","handleDragEnd","shouldShowNestedArray","items","itemLabel","fields","field","componentId","arrayKey","selectedValues","ErrorType","EditorErrorHandler","__publicField","details","action","stats","acc","safeExecute","errorHandler","errorMessage","errorType","errorDetails","SYSTEM_FIELDS","Z_FOR_SYSTEM_FIELDS","useComponentUtils","parts","findComponentByPath","path","current","getParentContainer","parseHierarchyPath","pathString","stringifyHierarchyPath","findComponentRecursively","currentPath","itemPath","result","keys","arrayIndex","arrayItem","nestedResult","getTemplate","moduleName","processingStack","extractZForTemplate","parentTemplate","arrayName","startPattern","startMatch","startIndex","tagName","endIndex","tagEnd","extractedContent","generateUniqueId","getFieldInfo","componentKey","template","parentType","parentModuleName","zForTemplate","allMatches","arrayFieldsToExclude","zForStartPattern","zForMatch","childArrayName","innerMatches","innerMatch","mainFieldMatches","paramMatch","shouldInclude","usedInZForOnly","usedOutsideZFor","fieldPattern","zForBlockPattern","zForBlock","templateWithoutZFor","fullParamName","optionsStr","isMultipleSelect","hasEmptyOption","fieldInfo","isTemplateField","targetTemplate","textPattern","selectPattern","conditionalPattern","isTemplateFieldFound","shouldExcludeField","itemKey","itemValue","_item","propKey","propValue","newItem","arrayValue","originalValue","newValue","partType","id","newComponent","textMatches","textMatch","radioMatches","radioMatch","checkboxMatches","checkboxMatch","zForMatches","forContent","zForExtractedContent","closeEditor","ensureDefaultValues","updateArrayItemValue","arrayItems","updateCheckboxValue","addArrayItem","removeArrayItem","reorderArrayItems","fromIndex","toIndex","newArray","movedItem","getArrayFields","templateFields","firstItem","getArrayLabel","getArrayItemLabel","itemName","showEditor","selectedComponent","isCheckboxChecked","shouldShowBasicField","_hoisted_23","getInputType","shouldShowArrayField","ArrayFieldEditor","instanceId","onMounted","nextTick","containerSelector","newData","DataDisplay","dataTab","editablePageData","localParts","localCommonParts","localIndividualParts","commonImages","individualImages","showPartSelector","PartSelector","showNestedPartSelector","EditorPanel","shouldShowArrayItemField","searchQuery","selectedType","existingTypes","filteredParts","filtered","query","handleSearch","handleFilter","getInitialData","formData","isValid","handleBodyInput","handleSave","isEditing","partCategory","_vModelSelect","_vModelText","currentPartCategory","activeDataSubTab","openRegistration","category","closeRegistration","editPart","deletePart","savePart","partData","extendedPartData","PartsManager","showPartRegistration","PartRegistrationModal","existingPartTypes","editingPart","escapeJSString","str","processArrayItemTextReplacement","processArrayItemParameterReplacement","injectArrayProcessors","textReplacement","parameterReplacement","processZIf","doc","element","condition","processZForWrapper","wrapperElements","arrayData","createAddArrayButton","createArrayItemControls","processZForElements","_currentDepth","_renderNestedComponentWithDepth","forElements","originalTemplate","fullMatch","itemsHtml","startTagMatch","attributes","openTagEndIndex","closeTagStartIndex","itemTemplate","itemHtml","editControls","itemDoc","arrayItemPath","parentComponent","latestData","itemComponent","slotElement","slotName","nestedParts","slotContent","partIndex","addAboveButtonPath","renderedContent","nestedPartPath","addButtonPath","existingContent","tempDiv","el","staticContent","emptySlotPath","noDataSlotPath","finalAttributes","originalClasses","otherAttributes","originalStyle","classMatch","styleMatch","allClasses","allStyles","finalWrapperAttributes","wrappedItemHtml","addLastButton","parent","fragment","emptyArrayButton","processZForWithRegex","html","processedHtml","selfClosingPattern","selfClosingMatch","itemAttributes","wrappedSelfClosingTag","zForPattern","content","arrayItemControls","wrapperAttributes","processZSlot","currentDepth","renderNestedComponentWithDepth","_getTemplate","components","nestedHtml","child","childPath","parentPath","VUE_DIRECTIVE_PATTERNS","VUE_INTERPOLATION_PATTERNS","preserveVueDirectives","directives","interpolations","protectedHtml","pattern","patternIndex","placeholder","restoreVueDirectives","preservation","restoredHtml","directive","interpolation","safeDOMParse","decodeHTMLEntities","cleanupHtmlContent","cleaned","processTemplateNotationOptimized","processConditionalMatch","processSelectionMatch","processTextReplacementMatch","conditionalMatch","selectionMatch","defaultText","rawValue","shouldApplyTiptapOptimized","escapedParamName","paramPattern","matchStart","beforeMatch","lastOpenBracket","lastCloseBracket","codeBlockRanges","range","templateCache","getTemplateOptimized","clearTemplateCache","sharedDOMParser","parseCache","maxCacheSize","parseHTMLOptimized","cached","firstKey","processZDirectivesOptimized","processZIfOptimized","processZForOptimized","processZSlotOptimized","tagAttributes","innerContent","cleanAttributes","slotElements","indentLevel","clearDOMCache","useTemplateProcessor","editingText","injectedArrayProcessors","shouldApplyTiptap","regex","processTextReplacementWithTemplate","_match","rawTextValue","textValue","_innerMatch","itemIndex","uniqueItemId","processSelectionSyntax","processConditionalClassSyntax","_options","_renderComponentWithNested","parentIndex","renderNestedComponentsWithUICallback","processZDirectives","renderComponentWithoutSlot","componentIndex","zForContext","renderNestedComponentsWithUI","_parentIndex","renderNestedWithTemplate","comp","originalForElements","processedForElements","img","_hasNestedSlot","renderComponentOptimized","previewOptions","renderComponentForPreview","latestComponent","maxDepth","analyzeZForDepth","processTextReplacementForPreview","processZForForPreviewOnly","removeZeroCodeUIClasses","processZDirectivesForPreview","processZDirectivesForPreviewExceptZFor","cleanHtml","zeroCodeClasses","selector","allElements","classList","className","attr","span","alt","cleanAlt","htmlToInsert","calculateMaxDepth","childDepth","childMaxDepth","rootElement","recursionDepth","maxRecursionDepth","finalMaxDepth","processedAnyZFor","passCount","sourceComponent","rootId","latestRootData","categoryMatch","categoryIndex","templateContent","tagMatch","mergedComponent","newDoc","useImageDisplay","image","originalImage","newFile","newBase64","templateProcessor","getImageSrc","allImages","resolveImageUrls","beforeSrc","originalSrc","afterSrc","imageData","resolvedSrc","renderedPageHtml","pageHtml","pageComponent","componentHtml","renderCleanComponent","activePreviewTab","previewKey","previewTabs","getPreviewTabLabel","formatHtmlSource","voidElements","inlineElements","formatElement","parentIsInline","isVoidElement","isInlineElement","startTag","hasElementChildren","hasTextContent","childrenResults","textContent","childResult","text","formattedHtml","array","trimmed","prevLine","PagePreview","selectedFile","previewUrl","imageName","imageAlt","canUpload","onFileChange","event","handleFileSelect","onFileDrop","file","fileToBase64","resolve","reject","reader","formatFileSize","bytes","sizes","upload","base64","base64WithoutPrefix","cleanup","onUnmounted","_createTextVNode","localImage","reactive","fileInputRef","getImageAlt","isImageUpdated","updateImageData","imageSrc","confirmDelete","openReplaceDialog","handleFileReplace","newImageData","copyToClipboard","textArea","formatDateTime","dateString","date","activeImageTab","showUploadModal","showDetailModal","currentUploadType","selectedImage","totalImagesCount","imageTabs","getImageTabLabel","openUploadModal","closeUploadModal","showImageDetail","closeDetailModal","handleImageUpload","updatedImages","handleImageDeleteFromDetail","imageId","handleImageReplace","deleteImage","_withModifiers","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","ImageUploadModal","ImageDetailModal","useEditorTabs","activeTab","switchToTab","useEditorCore","editorEventBus","state","newPage","newParts","computedValues","tabActions","editorActions","position","tiptapActions","hierarchyPath","initializeData","newCommonParts","newIndividualParts","toRefs","useEditorUtils","newId","fieldName","updatedItem","removed","trimmedPart","num","letter","useSimpleEditor","simpleEditorElement","sanitizeContent","allowedTags","allowedAttributes","cleanElement","sanitized","getSelectionRange","selection","createElementWithAttributes","surroundContentsSafely","wrapper","contents","applyTagStyle","tag","applyInlineStyle","style","insertPlaceholderIfCollapsed","applyTextAlignment","align","currentParagraph","paragraphElement","alignmentStyles","applyTextStyle","commandMap","command","err","fallbackError","executeSimpleCommand","commandHandlers","url","mark","checkMarkActive","currentElement","getEditorStyles","setEditorAttributes","setupEventListeners","editorDiv","onUpdate","saveTimeout","updateTimeout","targetParagraph","newP","newRange","sanitizedContent","observer","createSimpleEditor","container","existing","newContent","initEditor","destroyEditor","isEditorReady","onBeforeUnmount","memoize","keyFn","cache","memoizedComponentOperations","targetId","found","newPath","debounce","func","wait","timeout","CacheManager","cacheName","name","measurePerformance","operation","operationName","startTime","duration","EditorEventBus","callback","listeners","promises","results","total","globalUIFunctions","insertIndex","generateNewItemName","isDebugItem","hasNumber","baseValue","newName","useZeroCode","core","utils","simpleEditor","targetArray","targetComponent","findComponent","isNormalComponent","parentArrayName","baseParentId","indexSuffix","withoutIndex","baseComponents","lastUnderscorePos","realComponentId","realComponent","partsData","sampleItem","debouncedEmitUpdate","setupZForEditCleanup","childItem","editorId","handleEditorClose","updateNestedComponent","updatedComponent","slotKey","slotValue","findAndDeleteComponent","actions","newPageData","originalComponent","duplicatedComponent","sourcePath","sourceIndex","targetPath","sourceParentPath","targetParentPath","sourceParent","targetParent","parentComponentId","sourceParentId","targetParentId","pathMatch","arrayIndexStr","movedPart","selectedIndex","parentArray","parentItem","childArray","_isZForItem","_parentComponentId","_parentArrayName","_arrayName","_arrayIndex","_parentType","_parentModuleName","module_name","cleanedComponent","_zForTemplate","success","zForPathPattern","addSuccess","parentId","deleteSuccess","getters","realArrayPath","underscorePositions","splitPos","normalComponent","targetItem","targetArrayName","originalType","originalModuleName","tempComponent","exposeGlobalFunctions","localStartTiptapEdit","instanceGlobalUIFunctions","draggedItem","draggedNestedPart","itemWrapper","targetComponentId","targetIndexStr","partElement","nestedPath","dropSlotName","dropPartIndex","sampleDataSet","zForZSlotParts","zForZSlotPages","testDataSet","dataConfig","currentDataSet","isLoading","loadError","useDataLoader","setEnvironment","env","loadData","dataSetName","pages","images","combinedParts","defaultPageData","readonly","tabs","useErrorHandler","errors","hasErrors","handleError","context","errorInfo","clearError","clearErrors","getErrorClass","getErrorIcon","showDetails","_renderSlot","_ctx","newShow","newPosition","newActions","executeCommand","handleCancel","show","_normalizeStyle","selectedCategory","currentImages","filteredImages","closeModal","selectImage","clearSelection","applySelection","resolvedUrl","resolvedAlt","handleImageError","newVisible","currentImage","visible","componentInstanceId","dataLoader","resolveImageUrlsInHTML","resetImageToOriginal","commonImageIndex","updateCommonImages","individualImageIndex","updateIndividualImages","editor","showRichTextToolbar","richTextPosition","currentEditingElement","originalContent","currentComponentId","currentParamName","showGlobalImageSelector","currentGlobalImageValue","currentGlobalImageComponent","currentGlobalImageField","richTextEditor","executeRichTextCommand","save","stopRichTextEdit","updateComponentDataSync","rawContent","cleanedContent","updateComponent","zForInfo","lastIndex","knownArrayNames","targetPattern","findTargetArrayItem","targetArrayItem","deepCopy","triggerRef","openEditor","reorderParts","setupNestedDragAndDrop","draggedElement","draggedData","dropTarget","displayedData","displayedDataTitle","displayedDataType","handleDataDisplay","dataType","title","closeDataDisplay","displayedDataFormatted","copyDataToClipboard","sendCurrentData","sendCommonImagesData","sendIndividualImagesData","resetPageData","types","componentRenderCache","actualIndex","generateDeepArrayHash","prefix","hashes","fullKey","arrayHash","nestedHashes","currentArrayHash","cacheKey","renderedResult","updatePartsData","openPartEditor","deletePartFromManager","partInfo","deletePartFromArray","partsArray","updatedParts","updatedCommonParts","updatedIndividualParts","bodyContent","renderedHtml","saveNewPart","targetSection","partWithCategory","closePartRegistration","originalSwitchToTab","openPartSelector","closePartSelector","closeNestedPartSelector","openPartRegistration","nestedCollapsible","componentUtils","insertPosition","selectNestedPart","insertPath","getFieldInfoWrapper","shouldShowBasicFieldWrapper","shouldShowArrayFieldWrapper","shouldShowArrayItemFieldWrapper","getInputTypeWrapper","isCheckboxCheckedWrapper","handleUpdateEditorValue","newCommonImages","newIndividualImages","addImageEditButtonsFunction","openGlobalImageSelector","closeGlobalImageSelector","onGlobalImageSelected","imageUrl","originalUrl","selectedImageData","altFieldKey","handleComponentClick","clickedElement","componentElement","cleanupNestedDragAndDrop","imageClickHandler","addImageEditButtons","imgElement","testComponent","imgRect","editButton","buttonTop","buttonLeft","showButton","hideButton","updateButtonPosition","newRect","newTop","newLeft","imageFields","targetField","clickedSrc","originalImageClickHandler","rect","floatingButtons","baseId","arrayElement","contentElement","buttonElement","targetElement","handleBlur","relatedTarget","scrollTop","scrollLeft","lastNode","__expose","button","ErrorBoundary","TabNavigation","RichTextToolbar","EditorMainPanel","PartsManagementPanel","PreviewPanel","ImageManagementPanel","ImageSelectorModal","ZeroCodeElement","defineCustomElement","ZeroCode"],"mappings":"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","x_google_ignoreList":[1]}